!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.7	//
ALIGNED_FREE	.\SDKUtil\SDKUtil.hpp	102;"	d
ALIGNED_FREE	.\SDKUtil\include\SDKCommon.hpp	118;"	d
AddOption	.\SDKUtil\SDKCommandArgs.cpp	/^int SDKCommandArgs::AddOption(Option* op)$/;"	f	class:streamsdk::SDKCommandArgs
AddOption	.\SDKUtil\SDKUtil.hpp	/^        int AddOption(Option* op)$/;"	f	class:appsdk::SDKCmdArgsParser
Binaries	.\CL\cl.hpp	/^    typedef VECTOR_CLASS<std::pair<const void*, ::size_t> > Binaries;$/;"	t	class:cl::Program
BitMapHeader	.\SDKUtil\include\SDKBitMap.hpp	/^} BitMapHeader;$/;"	t	namespace:streamsdk	typeref:struct:streamsdk::__anon166
BitMapInfoHeader	.\SDKUtil\include\SDKBitMap.hpp	/^} BitMapInfoHeader;$/;"	t	namespace:streamsdk	typeref:struct:streamsdk::__anon167
Buffer	.\CL\cl.hpp	/^    Buffer($/;"	f	class:cl::Buffer
Buffer	.\CL\cl.hpp	/^    Buffer() : Memory() { }$/;"	f	class:cl::Buffer
Buffer	.\CL\cl.hpp	/^    Buffer(const Buffer& buffer) : Memory(buffer) { }$/;"	f	class:cl::Buffer
Buffer	.\CL\cl.hpp	/^    __CL_EXPLICIT_CONSTRUCTORS Buffer(const cl_mem& buffer) : Memory(buffer) { }$/;"	f	class:cl::Buffer
Buffer	.\CL\cl.hpp	/^class Buffer : public Memory$/;"	c	namespace:cl
BufferD3D10	.\CL\cl.hpp	/^    BufferD3D10($/;"	f	class:cl::BufferD3D10
BufferD3D10	.\CL\cl.hpp	/^    BufferD3D10() : Buffer() { }$/;"	f	class:cl::BufferD3D10
BufferD3D10	.\CL\cl.hpp	/^    BufferD3D10(const BufferD3D10& buffer) : Buffer(buffer) { }$/;"	f	class:cl::BufferD3D10
BufferD3D10	.\CL\cl.hpp	/^    __CL_EXPLICIT_CONSTRUCTORS BufferD3D10(const cl_mem& buffer) : Buffer(buffer) { }$/;"	f	class:cl::BufferD3D10
BufferD3D10	.\CL\cl.hpp	/^class BufferD3D10 : public Buffer$/;"	c	namespace:cl
BufferGL	.\CL\cl.hpp	/^    BufferGL($/;"	f	class:cl::BufferGL
BufferGL	.\CL\cl.hpp	/^    BufferGL() : Buffer() { }$/;"	f	class:cl::BufferGL
BufferGL	.\CL\cl.hpp	/^    BufferGL(const BufferGL& buffer) : Buffer(buffer) { }$/;"	f	class:cl::BufferGL
BufferGL	.\CL\cl.hpp	/^    __CL_EXPLICIT_CONSTRUCTORS BufferGL(const cl_mem& buffer) : Buffer(buffer) { }$/;"	f	class:cl::BufferGL
BufferGL	.\CL\cl.hpp	/^class BufferGL : public Buffer$/;"	c	namespace:cl
BufferRenderGL	.\CL\cl.hpp	/^    BufferRenderGL($/;"	f	class:cl::BufferRenderGL
BufferRenderGL	.\CL\cl.hpp	/^    BufferRenderGL() : Buffer() { }$/;"	f	class:cl::BufferRenderGL
BufferRenderGL	.\CL\cl.hpp	/^    BufferRenderGL(const BufferGL& buffer) : Buffer(buffer) { }$/;"	f	class:cl::BufferRenderGL
BufferRenderGL	.\CL\cl.hpp	/^    __CL_EXPLICIT_CONSTRUCTORS BufferRenderGL(const cl_mem& buffer) : Buffer(buffer) { }$/;"	f	class:cl::BufferRenderGL
BufferRenderGL	.\CL\cl.hpp	/^class BufferRenderGL : public Buffer$/;"	c	namespace:cl
CA_ARG_DOUBLE	.\SDKUtil\SDKUtil.hpp	/^    CA_ARG_DOUBLE,$/;"	e	enum:appsdk::CmdArgsEnum
CA_ARG_DOUBLE	.\SDKUtil\include\SDKCommandArgs.hpp	/^	  CA_ARG_DOUBLE, $/;"	e	enum:streamsdk::CmdArgsEnum
CA_ARG_FLOAT	.\SDKUtil\SDKUtil.hpp	/^    CA_ARG_FLOAT,$/;"	e	enum:appsdk::CmdArgsEnum
CA_ARG_FLOAT	.\SDKUtil\include\SDKCommandArgs.hpp	/^	  CA_ARG_FLOAT, $/;"	e	enum:streamsdk::CmdArgsEnum
CA_ARG_INT	.\SDKUtil\SDKUtil.hpp	/^    CA_ARG_INT,$/;"	e	enum:appsdk::CmdArgsEnum
CA_ARG_INT	.\SDKUtil\include\SDKCommandArgs.hpp	/^	  CA_ARG_INT,$/;"	e	enum:streamsdk::CmdArgsEnum
CA_ARG_STRING	.\SDKUtil\SDKUtil.hpp	/^    CA_ARG_STRING,$/;"	e	enum:appsdk::CmdArgsEnum
CA_ARG_STRING	.\SDKUtil\include\SDKCommandArgs.hpp	/^	  CA_ARG_STRING,$/;"	e	enum:streamsdk::CmdArgsEnum
CA_NO_ARGUMENT	.\SDKUtil\SDKUtil.hpp	/^    CA_NO_ARGUMENT$/;"	e	enum:appsdk::CmdArgsEnum
CA_NO_ARGUMENT	.\SDKUtil\include\SDKCommandArgs.hpp	/^	  CA_NO_ARGUMENT$/;"	e	enum:streamsdk::CmdArgsEnum
CHECK_ALLOCATION	.\SDKUtil\SDKUtil.hpp	76;"	d
CHECK_ALLOCATION	.\SDKUtil\include\SDKCommon.hpp	65;"	d
CHECK_ERROR	.\SDKUtil\SDKUtil.hpp	84;"	d
CHECK_ERROR	.\SDKUtil\include\SDKCommon.hpp	74;"	d
CHECK_OPENCL_ERROR	.\SDKUtil\CLUtil.hpp	29;"	d
CHECK_OPENCL_ERROR	.\SDKUtil\include\SDKCommon.hpp	82;"	d
CHECK_OPENVIDEO_ERROR	.\SDKUtil\CLUtil.hpp	42;"	d
CHECK_OPENVIDEO_ERROR	.\SDKUtil\include\SDKCommon.hpp	95;"	d
CLCommandArgs	.\SDKUtil\CLUtil.hpp	/^        CLCommandArgs(bool enableMultiDevice = false)$/;"	f	class:appsdk::CLCommandArgs
CLCommandArgs	.\SDKUtil\CLUtil.hpp	/^class CLCommandArgs : public SDKCmdArgsParser$/;"	c	namespace:appsdk
CLSample_H_	.\SDKUtil\CLUtil.hpp	22;"	d
CL_A	.\CL\cl.h	359;"	d
CL_ADAPTER_D3D9EX_KHR	.\CL\cl_dx9_media_sharing.h	63;"	d
CL_ADAPTER_D3D9_KHR	.\CL\cl_dx9_media_sharing.h	62;"	d
CL_ADAPTER_DXVA_KHR	.\CL\cl_dx9_media_sharing.h	64;"	d
CL_ADDRESS_CLAMP	.\CL\cl.h	428;"	d
CL_ADDRESS_CLAMP_TO_EDGE	.\CL\cl.h	427;"	d
CL_ADDRESS_MIRRORED_REPEAT	.\CL\cl.h	430;"	d
CL_ADDRESS_NONE	.\CL\cl.h	426;"	d
CL_ADDRESS_REPEAT	.\CL\cl.h	429;"	d
CL_AFFINITY_DOMAIN_L1_CACHE_EXT	.\CL\cl_ext.h	269;"	d
CL_AFFINITY_DOMAIN_L2_CACHE_EXT	.\CL\cl_ext.h	270;"	d
CL_AFFINITY_DOMAIN_L3_CACHE_EXT	.\CL\cl_ext.h	271;"	d
CL_AFFINITY_DOMAIN_L4_CACHE_EXT	.\CL\cl_ext.h	272;"	d
CL_AFFINITY_DOMAIN_NEXT_FISSIONABLE_EXT	.\CL\cl_ext.h	274;"	d
CL_AFFINITY_DOMAIN_NUMA_EXT	.\CL\cl_ext.h	273;"	d
CL_ALIGNED	.\CL\cl_platform.h	373;"	d
CL_ALIGNED	.\CL\cl_platform.h	379;"	d
CL_ALIGNED	.\CL\cl_platform.h	382;"	d
CL_ALL_DEVICES_FOR_D3D10_KHR	.\CL\cl_d3d10.h	58;"	d
CL_ALL_DEVICES_FOR_D3D11_KHR	.\CL\cl_d3d11.h	58;"	d
CL_ALL_DEVICES_FOR_DX9_MEDIA_ADAPTER_KHR	.\CL\cl_dx9_media_sharing.h	68;"	d
CL_API_CALL	.\CL\cl_platform.h	46;"	d
CL_API_CALL	.\CL\cl_platform.h	50;"	d
CL_API_ENTRY	.\CL\cl_platform.h	45;"	d
CL_API_ENTRY	.\CL\cl_platform.h	49;"	d
CL_API_SUFFIX__VERSION_1_0	.\CL\cl_d3d10.h	/^    cl_event *       event) CL_API_SUFFIX__VERSION_1_0;$/;"	t
CL_API_SUFFIX__VERSION_1_0	.\CL\cl_d3d10.h	/^    cl_int *          errcode_ret) CL_API_SUFFIX__VERSION_1_0;$/;"	t
CL_API_SUFFIX__VERSION_1_0	.\CL\cl_d3d10.h	/^    cl_int *       errcode_ret) CL_API_SUFFIX__VERSION_1_0;$/;"	t
CL_API_SUFFIX__VERSION_1_0	.\CL\cl_d3d10.h	/^    cl_uint *                  num_devices) CL_API_SUFFIX__VERSION_1_0;$/;"	t
CL_API_SUFFIX__VERSION_1_0	.\CL\cl_platform.h	56;"	d
CL_API_SUFFIX__VERSION_1_0	.\CL\cl_platform.h	78;"	d
CL_API_SUFFIX__VERSION_1_1	.\CL\cl_platform.h	58;"	d
CL_API_SUFFIX__VERSION_1_1	.\CL\cl_platform.h	80;"	d
CL_API_SUFFIX__VERSION_1_2	.\CL\cl_d3d11.h	/^    cl_event *       event) CL_API_SUFFIX__VERSION_1_2;$/;"	t
CL_API_SUFFIX__VERSION_1_2	.\CL\cl_d3d11.h	/^    cl_int *          errcode_ret) CL_API_SUFFIX__VERSION_1_2;$/;"	t
CL_API_SUFFIX__VERSION_1_2	.\CL\cl_d3d11.h	/^    cl_int *       errcode_ret) CL_API_SUFFIX__VERSION_1_2;$/;"	t
CL_API_SUFFIX__VERSION_1_2	.\CL\cl_d3d11.h	/^    cl_uint *                  num_devices) CL_API_SUFFIX__VERSION_1_2;$/;"	t
CL_API_SUFFIX__VERSION_1_2	.\CL\cl_dx9_media_sharing.h	/^    cl_event *       event) CL_API_SUFFIX__VERSION_1_2;$/;"	t
CL_API_SUFFIX__VERSION_1_2	.\CL\cl_dx9_media_sharing.h	/^    cl_int *                      errcode_ret) CL_API_SUFFIX__VERSION_1_2;$/;"	t
CL_API_SUFFIX__VERSION_1_2	.\CL\cl_dx9_media_sharing.h	/^    cl_uint *                        num_devices) CL_API_SUFFIX__VERSION_1_2;$/;"	t
CL_API_SUFFIX__VERSION_1_2	.\CL\cl_platform.h	64;"	d
CL_API_SUFFIX__VERSION_1_2	.\CL\cl_platform.h	71;"	d
CL_API_SUFFIX__VERSION_1_2	.\CL\cl_platform.h	82;"	d
CL_ARGB	.\CL\cl.h	365;"	d
CL_BGRA	.\CL\cl.h	364;"	d
CL_BLOCKING	.\CL\cl.h	188;"	d
CL_BUFFER_CREATE_TYPE_REGION	.\CL\cl.h	559;"	d
CL_BUILD_ERROR	.\CL\cl.h	474;"	d
CL_BUILD_IN_PROGRESS	.\CL\cl.h	475;"	d
CL_BUILD_NONE	.\CL\cl.h	473;"	d
CL_BUILD_PROGRAM_FAILURE	.\CL\cl.h	130;"	d
CL_BUILD_SUCCESS	.\CL\cl.h	472;"	d
CL_CALLBACK	.\CL\cl.hpp	198;"	d
CL_CALLBACK	.\CL\cl_platform.h	47;"	d
CL_CALLBACK	.\CL\cl_platform.h	51;"	d
CL_CGL_SHAREGROUP_KHR	.\CL\cl_gl.h	142;"	d
CL_CHAR_BIT	.\CL\cl_platform.h	154;"	d
CL_CHAR_MAX	.\CL\cl_platform.h	157;"	d
CL_CHAR_MIN	.\CL\cl_platform.h	158;"	d
CL_COMMAND_ACQUIRE_D3D10_OBJECTS_KHR	.\CL\cl_d3d10.h	71;"	d
CL_COMMAND_ACQUIRE_D3D11_OBJECTS_KHR	.\CL\cl_d3d11.h	71;"	d
CL_COMMAND_ACQUIRE_DX9_MEDIA_SURFACES_KHR	.\CL\cl_dx9_media_sharing.h	83;"	d
CL_COMMAND_ACQUIRE_GL_OBJECTS	.\CL\cl.h	541;"	d
CL_COMMAND_BARRIER	.\CL\cl.h	547;"	d
CL_COMMAND_COPY_BUFFER	.\CL\cl.h	531;"	d
CL_COMMAND_COPY_BUFFER_RECT	.\CL\cl.h	545;"	d
CL_COMMAND_COPY_BUFFER_TO_IMAGE	.\CL\cl.h	536;"	d
CL_COMMAND_COPY_IMAGE	.\CL\cl.h	534;"	d
CL_COMMAND_COPY_IMAGE_TO_BUFFER	.\CL\cl.h	535;"	d
CL_COMMAND_FILL_BUFFER	.\CL\cl.h	549;"	d
CL_COMMAND_FILL_IMAGE	.\CL\cl.h	550;"	d
CL_COMMAND_GL_FENCE_SYNC_OBJECT_KHR	.\CL\cl_gl_ext.h	58;"	d
CL_COMMAND_MAKE_BUFFERS_RESIDENT_AMD	.\CL\cl_ext.h	299;"	d
CL_COMMAND_MAP_BUFFER	.\CL\cl.h	537;"	d
CL_COMMAND_MAP_IMAGE	.\CL\cl.h	538;"	d
CL_COMMAND_MARKER	.\CL\cl.h	540;"	d
CL_COMMAND_MIGRATE_MEM_OBJECTS	.\CL\cl.h	548;"	d
CL_COMMAND_NATIVE_KERNEL	.\CL\cl.h	528;"	d
CL_COMMAND_NDRANGE_KERNEL	.\CL\cl.h	526;"	d
CL_COMMAND_READ_BUFFER	.\CL\cl.h	529;"	d
CL_COMMAND_READ_BUFFER_RECT	.\CL\cl.h	543;"	d
CL_COMMAND_READ_IMAGE	.\CL\cl.h	532;"	d
CL_COMMAND_RELEASE_D3D10_OBJECTS_KHR	.\CL\cl_d3d10.h	72;"	d
CL_COMMAND_RELEASE_D3D11_OBJECTS_KHR	.\CL\cl_d3d11.h	72;"	d
CL_COMMAND_RELEASE_DX9_MEDIA_SURFACES_KHR	.\CL\cl_dx9_media_sharing.h	84;"	d
CL_COMMAND_RELEASE_GL_OBJECTS	.\CL\cl.h	542;"	d
CL_COMMAND_TASK	.\CL\cl.h	527;"	d
CL_COMMAND_UNMAP_MEM_OBJECT	.\CL\cl.h	539;"	d
CL_COMMAND_USER	.\CL\cl.h	546;"	d
CL_COMMAND_WAIT_SIGNAL_AMD	.\CL\cl_ext.h	297;"	d
CL_COMMAND_WRITE_BUFFER	.\CL\cl.h	530;"	d
CL_COMMAND_WRITE_BUFFER_RECT	.\CL\cl.h	544;"	d
CL_COMMAND_WRITE_IMAGE	.\CL\cl.h	533;"	d
CL_COMMAND_WRITE_SIGNAL_AMD	.\CL\cl_ext.h	298;"	d
CL_COMPILER_NOT_AVAILABLE	.\CL\cl.h	122;"	d
CL_COMPILE_PROGRAM_FAILURE	.\CL\cl.h	134;"	d
CL_COMPLETE	.\CL\cl.h	553;"	d
CL_CONTEXT_ADAPTER_D3D9EX_KHR	.\CL\cl_dx9_media_sharing.h	72;"	d
CL_CONTEXT_ADAPTER_D3D9_KHR	.\CL\cl_dx9_media_sharing.h	71;"	d
CL_CONTEXT_ADAPTER_DXVA_KHR	.\CL\cl_dx9_media_sharing.h	73;"	d
CL_CONTEXT_D3D10_DEVICE_KHR	.\CL\cl_d3d10.h	61;"	d
CL_CONTEXT_D3D10_PREFER_SHARED_RESOURCES_KHR	.\CL\cl_d3d10.h	62;"	d
CL_CONTEXT_D3D11_DEVICE_KHR	.\CL\cl_d3d11.h	61;"	d
CL_CONTEXT_D3D11_PREFER_SHARED_RESOURCES_KHR	.\CL\cl_d3d11.h	62;"	d
CL_CONTEXT_DEVICES	.\CL\cl.h	313;"	d
CL_CONTEXT_INTEROP_USER_SYNC	.\CL\cl.h	319;"	d
CL_CONTEXT_MEMORY_INITIALIZE_KHR	.\CL\cl_ext.h	137;"	d
CL_CONTEXT_NUM_DEVICES	.\CL\cl.h	315;"	d
CL_CONTEXT_OFFLINE_DEVICES_AMD	.\CL\cl_ext.h	212;"	d
CL_CONTEXT_OFFLINE_DEVICES_AMD	.\SDKUtil\CLUtil.hpp	61;"	d
CL_CONTEXT_OFFLINE_DEVICES_AMD	.\SDKUtil\include\SDKApplication.hpp	14;"	d
CL_CONTEXT_PLATFORM	.\CL\cl.h	318;"	d
CL_CONTEXT_PROPERTIES	.\CL\cl.h	314;"	d
CL_CONTEXT_REFERENCE_COUNT	.\CL\cl.h	312;"	d
CL_CONTEXT_TERMINATE_KHR	.\CL\cl_ext.h	145;"	d
CL_CURRENT_DEVICE_FOR_GL_CONTEXT_KHR	.\CL\cl_gl.h	134;"	d
CL_D3D10_DEVICE_KHR	.\CL\cl_d3d10.h	53;"	d
CL_D3D10_DXGI_ADAPTER_KHR	.\CL\cl_d3d10.h	54;"	d
CL_D3D10_RESOURCE_ALREADY_ACQUIRED_KHR	.\CL\cl_d3d10.h	49;"	d
CL_D3D10_RESOURCE_NOT_ACQUIRED_KHR	.\CL\cl_d3d10.h	50;"	d
CL_D3D11_DEVICE_KHR	.\CL\cl_d3d11.h	53;"	d
CL_D3D11_DXGI_ADAPTER_KHR	.\CL\cl_d3d11.h	54;"	d
CL_D3D11_RESOURCE_ALREADY_ACQUIRED_KHR	.\CL\cl_d3d11.h	49;"	d
CL_D3D11_RESOURCE_NOT_ACQUIRED_KHR	.\CL\cl_d3d11.h	50;"	d
CL_DBL_DIG	.\CL\cl_platform.h	181;"	d
CL_DBL_EPSILON	.\CL\cl_platform.h	190;"	d
CL_DBL_MANT_DIG	.\CL\cl_platform.h	182;"	d
CL_DBL_MAX	.\CL\cl_platform.h	188;"	d
CL_DBL_MAX_10_EXP	.\CL\cl_platform.h	183;"	d
CL_DBL_MAX_EXP	.\CL\cl_platform.h	184;"	d
CL_DBL_MIN	.\CL\cl_platform.h	189;"	d
CL_DBL_MIN_10_EXP	.\CL\cl_platform.h	185;"	d
CL_DBL_MIN_EXP	.\CL\cl_platform.h	186;"	d
CL_DBL_RADIX	.\CL\cl_platform.h	187;"	d
CL_DEPTH	.\CL\cl.h	371;"	d
CL_DEPTH_STENCIL	.\CL\cl.h	372;"	d
CL_DEVICES_FOR_GL_CONTEXT_KHR	.\CL\cl_gl.h	135;"	d
CL_DEVICE_ADDRESS_BITS	.\CL\cl.h	220;"	d
CL_DEVICE_AFFINITY_DOMAINS_EXT	.\CL\cl_ext.h	256;"	d
CL_DEVICE_AFFINITY_DOMAIN_L1_CACHE	.\CL\cl.h	332;"	d
CL_DEVICE_AFFINITY_DOMAIN_L2_CACHE	.\CL\cl.h	331;"	d
CL_DEVICE_AFFINITY_DOMAIN_L3_CACHE	.\CL\cl.h	330;"	d
CL_DEVICE_AFFINITY_DOMAIN_L4_CACHE	.\CL\cl.h	329;"	d
CL_DEVICE_AFFINITY_DOMAIN_NEXT_PARTITIONABLE	.\CL\cl.h	333;"	d
CL_DEVICE_AFFINITY_DOMAIN_NUMA	.\CL\cl.h	328;"	d
CL_DEVICE_AVAILABLE	.\CL\cl.h	246;"	d
CL_DEVICE_BOARD_NAME_AMD	.\CL\cl_ext.h	187;"	d
CL_DEVICE_BUILT_IN_KERNELS	.\CL\cl.h	270;"	d
CL_DEVICE_COMPILER_AVAILABLE	.\CL\cl.h	247;"	d
CL_DEVICE_COMPUTE_CAPABILITY_MAJOR_NV	.\CL\cl_ext.h	164;"	d
CL_DEVICE_COMPUTE_CAPABILITY_MINOR_NV	.\CL\cl_ext.h	165;"	d
CL_DEVICE_DOUBLE_FP_CONFIG	.\CL\cl.h	257;"	d
CL_DEVICE_ENDIAN_LITTLE	.\CL\cl.h	245;"	d
CL_DEVICE_ERROR_CORRECTION_SUPPORT	.\CL\cl.h	243;"	d
CL_DEVICE_EXECUTION_CAPABILITIES	.\CL\cl.h	248;"	d
CL_DEVICE_EXTENSIONS	.\CL\cl.h	255;"	d
CL_DEVICE_GLOBAL_FREE_MEMORY_AMD	.\CL\cl_ext.h	188;"	d
CL_DEVICE_GLOBAL_MEM_CACHELINE_SIZE	.\CL\cl.h	236;"	d
CL_DEVICE_GLOBAL_MEM_CACHE_SIZE	.\CL\cl.h	237;"	d
CL_DEVICE_GLOBAL_MEM_CACHE_TYPE	.\CL\cl.h	235;"	d
CL_DEVICE_GLOBAL_MEM_CHANNELS_AMD	.\CL\cl_ext.h	193;"	d
CL_DEVICE_GLOBAL_MEM_CHANNEL_BANKS_AMD	.\CL\cl_ext.h	194;"	d
CL_DEVICE_GLOBAL_MEM_CHANNEL_BANK_WIDTH_AMD	.\CL\cl_ext.h	195;"	d
CL_DEVICE_GLOBAL_MEM_SIZE	.\CL\cl.h	238;"	d
CL_DEVICE_GPU_OVERLAP_NV	.\CL\cl_ext.h	168;"	d
CL_DEVICE_HALF_FP_CONFIG	.\CL\cl_ext.h	44;"	d
CL_DEVICE_HOST_UNIFIED_MEMORY	.\CL\cl.h	260;"	d
CL_DEVICE_IMAGE2D_MAX_HEIGHT	.\CL\cl.h	225;"	d
CL_DEVICE_IMAGE2D_MAX_WIDTH	.\CL\cl.h	224;"	d
CL_DEVICE_IMAGE3D_MAX_DEPTH	.\CL\cl.h	228;"	d
CL_DEVICE_IMAGE3D_MAX_HEIGHT	.\CL\cl.h	227;"	d
CL_DEVICE_IMAGE3D_MAX_WIDTH	.\CL\cl.h	226;"	d
CL_DEVICE_IMAGE_BASE_ADDRESS_ALIGNMENT	.\CL\cl.h	282;"	d
CL_DEVICE_IMAGE_MAX_ARRAY_SIZE	.\CL\cl.h	272;"	d
CL_DEVICE_IMAGE_MAX_BUFFER_SIZE	.\CL\cl.h	271;"	d
CL_DEVICE_IMAGE_PITCH_ALIGNMENT	.\CL\cl.h	281;"	d
CL_DEVICE_IMAGE_SUPPORT	.\CL\cl.h	229;"	d
CL_DEVICE_INTEGRATED_MEMORY_NV	.\CL\cl_ext.h	170;"	d
CL_DEVICE_KERNEL_EXEC_TIMEOUT_NV	.\CL\cl_ext.h	169;"	d
CL_DEVICE_LINKER_AVAILABLE	.\CL\cl.h	269;"	d
CL_DEVICE_LOCAL_MEM_BANKS_AMD	.\CL\cl_ext.h	197;"	d
CL_DEVICE_LOCAL_MEM_SIZE	.\CL\cl.h	242;"	d
CL_DEVICE_LOCAL_MEM_SIZE_PER_COMPUTE_UNIT_AMD	.\CL\cl_ext.h	196;"	d
CL_DEVICE_LOCAL_MEM_TYPE	.\CL\cl.h	241;"	d
CL_DEVICE_MAX_ATOMIC_COUNTERS_EXT	.\CL\cl_ext.h	180;"	d
CL_DEVICE_MAX_ATOMIC_COUNTERS_EXT	.\CL\cl_ext.h	284;"	d
CL_DEVICE_MAX_CLOCK_FREQUENCY	.\CL\cl.h	219;"	d
CL_DEVICE_MAX_COMPUTE_UNITS	.\CL\cl.h	209;"	d
CL_DEVICE_MAX_CONSTANT_ARGS	.\CL\cl.h	240;"	d
CL_DEVICE_MAX_CONSTANT_BUFFER_SIZE	.\CL\cl.h	239;"	d
CL_DEVICE_MAX_MEM_ALLOC_SIZE	.\CL\cl.h	223;"	d
CL_DEVICE_MAX_PARAMETER_SIZE	.\CL\cl.h	230;"	d
CL_DEVICE_MAX_READ_IMAGE_ARGS	.\CL\cl.h	221;"	d
CL_DEVICE_MAX_SAMPLERS	.\CL\cl.h	231;"	d
CL_DEVICE_MAX_WORK_GROUP_SIZE	.\CL\cl.h	211;"	d
CL_DEVICE_MAX_WORK_ITEM_DIMENSIONS	.\CL\cl.h	210;"	d
CL_DEVICE_MAX_WORK_ITEM_SIZES	.\CL\cl.h	212;"	d
CL_DEVICE_MAX_WRITE_IMAGE_ARGS	.\CL\cl.h	222;"	d
CL_DEVICE_MEM_BASE_ADDR_ALIGN	.\CL\cl.h	232;"	d
CL_DEVICE_MIN_DATA_TYPE_ALIGN_SIZE	.\CL\cl.h	233;"	d
CL_DEVICE_NAME	.\CL\cl.h	250;"	d
CL_DEVICE_NATIVE_VECTOR_WIDTH_CHAR	.\CL\cl.h	261;"	d
CL_DEVICE_NATIVE_VECTOR_WIDTH_DOUBLE	.\CL\cl.h	266;"	d
CL_DEVICE_NATIVE_VECTOR_WIDTH_FLOAT	.\CL\cl.h	265;"	d
CL_DEVICE_NATIVE_VECTOR_WIDTH_HALF	.\CL\cl.h	267;"	d
CL_DEVICE_NATIVE_VECTOR_WIDTH_INT	.\CL\cl.h	263;"	d
CL_DEVICE_NATIVE_VECTOR_WIDTH_LONG	.\CL\cl.h	264;"	d
CL_DEVICE_NATIVE_VECTOR_WIDTH_SHORT	.\CL\cl.h	262;"	d
CL_DEVICE_NOT_AVAILABLE	.\CL\cl.h	121;"	d
CL_DEVICE_NOT_FOUND	.\CL\cl.h	120;"	d
CL_DEVICE_OPENCL_C_VERSION	.\CL\cl.h	268;"	d
CL_DEVICE_PARENT_DEVICE	.\CL\cl.h	273;"	d
CL_DEVICE_PARENT_DEVICE_EXT	.\CL\cl_ext.h	254;"	d
CL_DEVICE_PARTITION_AFFINITY_DOMAIN	.\CL\cl.h	276;"	d
CL_DEVICE_PARTITION_BY_AFFINITY_DOMAIN	.\CL\cl.h	325;"	d
CL_DEVICE_PARTITION_BY_AFFINITY_DOMAIN_EXT	.\CL\cl_ext.h	251;"	d
CL_DEVICE_PARTITION_BY_COUNTS	.\CL\cl.h	323;"	d
CL_DEVICE_PARTITION_BY_COUNTS_EXT	.\CL\cl_ext.h	249;"	d
CL_DEVICE_PARTITION_BY_COUNTS_LIST_END	.\CL\cl.h	324;"	d
CL_DEVICE_PARTITION_BY_NAMES_EXT	.\CL\cl_ext.h	250;"	d
CL_DEVICE_PARTITION_EQUALLY	.\CL\cl.h	322;"	d
CL_DEVICE_PARTITION_EQUALLY_EXT	.\CL\cl_ext.h	248;"	d
CL_DEVICE_PARTITION_FAILED	.\CL\cl.h	137;"	d
CL_DEVICE_PARTITION_FAILED_EXT	.\CL\cl_ext.h	264;"	d
CL_DEVICE_PARTITION_MAX_SUB_DEVICES	.\CL\cl.h	274;"	d
CL_DEVICE_PARTITION_PROPERTIES	.\CL\cl.h	275;"	d
CL_DEVICE_PARTITION_STYLE_EXT	.\CL\cl_ext.h	258;"	d
CL_DEVICE_PARTITION_TYPE	.\CL\cl.h	277;"	d
CL_DEVICE_PARTITION_TYPES_EXT	.\CL\cl_ext.h	255;"	d
CL_DEVICE_PLATFORM	.\CL\cl.h	256;"	d
CL_DEVICE_PREFERRED_INTEROP_USER_SYNC	.\CL\cl.h	279;"	d
CL_DEVICE_PREFERRED_VECTOR_WIDTH_CHAR	.\CL\cl.h	213;"	d
CL_DEVICE_PREFERRED_VECTOR_WIDTH_DOUBLE	.\CL\cl.h	218;"	d
CL_DEVICE_PREFERRED_VECTOR_WIDTH_FLOAT	.\CL\cl.h	217;"	d
CL_DEVICE_PREFERRED_VECTOR_WIDTH_HALF	.\CL\cl.h	259;"	d
CL_DEVICE_PREFERRED_VECTOR_WIDTH_INT	.\CL\cl.h	215;"	d
CL_DEVICE_PREFERRED_VECTOR_WIDTH_LONG	.\CL\cl.h	216;"	d
CL_DEVICE_PREFERRED_VECTOR_WIDTH_SHORT	.\CL\cl.h	214;"	d
CL_DEVICE_PRINTF_BUFFER_SIZE	.\CL\cl.h	280;"	d
CL_DEVICE_PROFILE	.\CL\cl.h	253;"	d
CL_DEVICE_PROFILING_TIMER_OFFSET_AMD	.\CL\cl_ext.h	185;"	d
CL_DEVICE_PROFILING_TIMER_RESOLUTION	.\CL\cl.h	244;"	d
CL_DEVICE_QUEUE_PROPERTIES	.\CL\cl.h	249;"	d
CL_DEVICE_REFERENCE_COUNT	.\CL\cl.h	278;"	d
CL_DEVICE_REFERENCE_COUNT_EXT	.\CL\cl_ext.h	257;"	d
CL_DEVICE_REGISTERS_PER_BLOCK_NV	.\CL\cl_ext.h	166;"	d
CL_DEVICE_SIMD_INSTRUCTION_WIDTH_AMD	.\CL\cl_ext.h	191;"	d
CL_DEVICE_SIMD_PER_COMPUTE_UNIT_AMD	.\CL\cl_ext.h	189;"	d
CL_DEVICE_SIMD_WIDTH_AMD	.\CL\cl_ext.h	190;"	d
CL_DEVICE_SINGLE_FP_CONFIG	.\CL\cl.h	234;"	d
CL_DEVICE_TERMINATE_CAPABILITY_KHR	.\CL\cl_ext.h	144;"	d
CL_DEVICE_THREAD_TRACE_SUPPORTED_AMD	.\CL\cl_ext.h	198;"	d
CL_DEVICE_TOPOLOGY_AMD	.\CL\cl_ext.h	186;"	d
CL_DEVICE_TOPOLOGY_TYPE_PCIE_AMD	.\CL\cl_ext.h	206;"	d
CL_DEVICE_TYPE	.\CL\cl.h	207;"	d
CL_DEVICE_TYPE_ACCELERATOR	.\CL\cl.h	202;"	d
CL_DEVICE_TYPE_ALL	.\CL\cl.h	204;"	d
CL_DEVICE_TYPE_CPU	.\CL\cl.h	200;"	d
CL_DEVICE_TYPE_CUSTOM	.\CL\cl.h	203;"	d
CL_DEVICE_TYPE_DEFAULT	.\CL\cl.h	199;"	d
CL_DEVICE_TYPE_GPU	.\CL\cl.h	201;"	d
CL_DEVICE_VENDOR	.\CL\cl.h	251;"	d
CL_DEVICE_VENDOR_ID	.\CL\cl.h	208;"	d
CL_DEVICE_VERSION	.\CL\cl.h	254;"	d
CL_DEVICE_WARP_SIZE_NV	.\CL\cl_ext.h	167;"	d
CL_DEVICE_WAVEFRONT_WIDTH_AMD	.\CL\cl_ext.h	192;"	d
CL_DRIVER_VERSION	.\CL\cl.h	252;"	d
CL_DX9_MEDIA_SURFACE_ALREADY_ACQUIRED_KHR	.\CL\cl_dx9_media_sharing.h	58;"	d
CL_DX9_MEDIA_SURFACE_NOT_ACQUIRED_KHR	.\CL\cl_dx9_media_sharing.h	59;"	d
CL_EGL_DISPLAY_KHR	.\CL\cl_gl.h	139;"	d
CL_EVENT_COMMAND_EXECUTION_STATUS	.\CL\cl.h	522;"	d
CL_EVENT_COMMAND_QUEUE	.\CL\cl.h	519;"	d
CL_EVENT_COMMAND_TYPE	.\CL\cl.h	520;"	d
CL_EVENT_CONTEXT	.\CL\cl.h	523;"	d
CL_EVENT_REFERENCE_COUNT	.\CL\cl.h	521;"	d
CL_EXEC_KERNEL	.\CL\cl.h	304;"	d
CL_EXEC_NATIVE_KERNEL	.\CL\cl.h	305;"	d
CL_EXEC_STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST	.\CL\cl.h	133;"	d
CL_EXTENSION_WEAK_LINK	.\CL\cl_platform.h	55;"	d
CL_EXTENSION_WEAK_LINK	.\CL\cl_platform.h	77;"	d
CL_EXT_PREFIX__VERSION_1_0_DEPRECATED	.\CL\cl_platform.h	104;"	d
CL_EXT_PREFIX__VERSION_1_0_DEPRECATED	.\CL\cl_platform.h	107;"	d
CL_EXT_PREFIX__VERSION_1_0_DEPRECATED	.\CL\cl_platform.h	119;"	d
CL_EXT_PREFIX__VERSION_1_0_DEPRECATED	.\CL\cl_platform.h	88;"	d
CL_EXT_PREFIX__VERSION_1_0_DEPRECATED	.\CL\cl_platform.h	91;"	d
CL_EXT_PREFIX__VERSION_1_1_DEPRECATED	.\CL\cl.hpp	191;"	d
CL_EXT_PREFIX__VERSION_1_1_DEPRECATED	.\CL\cl_platform.h	112;"	d
CL_EXT_PREFIX__VERSION_1_1_DEPRECATED	.\CL\cl_platform.h	115;"	d
CL_EXT_PREFIX__VERSION_1_1_DEPRECATED	.\CL\cl_platform.h	122;"	d
CL_EXT_PREFIX__VERSION_1_1_DEPRECATED	.\CL\cl_platform.h	67;"	d
CL_EXT_PREFIX__VERSION_1_1_DEPRECATED	.\CL\cl_platform.h	96;"	d
CL_EXT_PREFIX__VERSION_1_1_DEPRECATED	.\CL\cl_platform.h	99;"	d
CL_EXT_SUFFIX__VERSION_1_0	.\CL\cl_platform.h	57;"	d
CL_EXT_SUFFIX__VERSION_1_0	.\CL\cl_platform.h	79;"	d
CL_EXT_SUFFIX__VERSION_1_0_DEPRECATED	.\CL\cl_platform.h	103;"	d
CL_EXT_SUFFIX__VERSION_1_0_DEPRECATED	.\CL\cl_platform.h	106;"	d
CL_EXT_SUFFIX__VERSION_1_0_DEPRECATED	.\CL\cl_platform.h	118;"	d
CL_EXT_SUFFIX__VERSION_1_0_DEPRECATED	.\CL\cl_platform.h	61;"	d
CL_EXT_SUFFIX__VERSION_1_0_DEPRECATED	.\CL\cl_platform.h	87;"	d
CL_EXT_SUFFIX__VERSION_1_0_DEPRECATED	.\CL\cl_platform.h	90;"	d
CL_EXT_SUFFIX__VERSION_1_1	.\CL\cl_ext.h	/^                                                cl_uint * \/*num_devices*\/ ) CL_EXT_SUFFIX__VERSION_1_1;$/;"	t
CL_EXT_SUFFIX__VERSION_1_1	.\CL\cl_ext.h	/^    (CL_API_CALL *clReleaseDeviceEXT_fn)( cl_device_id \/*device*\/ ) CL_EXT_SUFFIX__VERSION_1_1;$/;"	t
CL_EXT_SUFFIX__VERSION_1_1	.\CL\cl_ext.h	/^    (CL_API_CALL *clRetainDeviceEXT_fn)( cl_device_id \/*device*\/ ) CL_EXT_SUFFIX__VERSION_1_1;$/;"	t
CL_EXT_SUFFIX__VERSION_1_1	.\CL\cl_platform.h	60;"	d
CL_EXT_SUFFIX__VERSION_1_1	.\CL\cl_platform.h	81;"	d
CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED	.\CL\cl.hpp	/^class CL_EXT_PREFIX__VERSION_1_1_DEPRECATED Image2DGL CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED : public Image2D$/;"	c	namespace:cl
CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED	.\CL\cl.hpp	/^class CL_EXT_PREFIX__VERSION_1_1_DEPRECATED string CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED$/;"	c	namespace:cl
CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED	.\CL\cl.hpp	/^class CL_EXT_PREFIX__VERSION_1_1_DEPRECATED vector CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED$/;"	c	namespace:cl
CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED	.\CL\cl.hpp	194;"	d
CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED	.\CL\cl_platform.h	111;"	d
CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED	.\CL\cl_platform.h	114;"	d
CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED	.\CL\cl_platform.h	121;"	d
CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED	.\CL\cl_platform.h	68;"	d
CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED	.\CL\cl_platform.h	74;"	d
CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED	.\CL\cl_platform.h	95;"	d
CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED	.\CL\cl_platform.h	98;"	d
CL_EXT_SUFFIX__VERSION_1_2	.\CL\cl_ext.h	/^                                                 cl_event * \/*event*\/) CL_EXT_SUFFIX__VERSION_1_2;$/;"	t
CL_EXT_SUFFIX__VERSION_1_2	.\CL\cl_ext.h	/^                                                cl_event * \/*event*\/) CL_EXT_SUFFIX__VERSION_1_2;$/;"	t
CL_EXT_SUFFIX__VERSION_1_2	.\CL\cl_ext.h	/^                                               cl_event * \/*event*\/) CL_EXT_SUFFIX__VERSION_1_2;$/;"	t
CL_EXT_SUFFIX__VERSION_1_2	.\CL\cl_ext.h	/^typedef CL_API_ENTRY cl_int (CL_API_CALL *clTerminateContextKHR_fn)(cl_context \/* context *\/) CL_EXT_SUFFIX__VERSION_1_2;$/;"	t
CL_EXT_SUFFIX__VERSION_1_2	.\CL\cl_platform.h	66;"	d
CL_EXT_SUFFIX__VERSION_1_2	.\CL\cl_platform.h	73;"	d
CL_EXT_SUFFIX__VERSION_1_2	.\CL\cl_platform.h	83;"	d
CL_FALSE	.\CL\cl.h	186;"	d
CL_FILTER_LINEAR	.\CL\cl.h	434;"	d
CL_FILTER_NEAREST	.\CL\cl.h	433;"	d
CL_FLOAT	.\CL\cl.h	389;"	d
CL_FLT_DIG	.\CL\cl_platform.h	170;"	d
CL_FLT_EPSILON	.\CL\cl_platform.h	179;"	d
CL_FLT_MANT_DIG	.\CL\cl_platform.h	171;"	d
CL_FLT_MAX	.\CL\cl_platform.h	177;"	d
CL_FLT_MAX_10_EXP	.\CL\cl_platform.h	172;"	d
CL_FLT_MAX_EXP	.\CL\cl_platform.h	173;"	d
CL_FLT_MIN	.\CL\cl_platform.h	178;"	d
CL_FLT_MIN_10_EXP	.\CL\cl_platform.h	174;"	d
CL_FLT_MIN_EXP	.\CL\cl_platform.h	175;"	d
CL_FLT_RADIX	.\CL\cl_platform.h	176;"	d
CL_FP_CORRECTLY_ROUNDED_DIVIDE_SQRT	.\CL\cl.h	292;"	d
CL_FP_DENORM	.\CL\cl.h	285;"	d
CL_FP_FMA	.\CL\cl.h	290;"	d
CL_FP_INF_NAN	.\CL\cl.h	286;"	d
CL_FP_ROUND_TO_INF	.\CL\cl.h	289;"	d
CL_FP_ROUND_TO_NEAREST	.\CL\cl.h	287;"	d
CL_FP_ROUND_TO_ZERO	.\CL\cl.h	288;"	d
CL_FP_SOFT_FLOAT	.\CL\cl.h	291;"	d
CL_GLOBAL	.\CL\cl.h	301;"	d
CL_GLX_DISPLAY_KHR	.\CL\cl_gl.h	140;"	d
CL_GL_CONTEXT_KHR	.\CL\cl_gl.h	138;"	d
CL_GL_MIPMAP_LEVEL	.\CL\cl_gl.h	54;"	d
CL_GL_NUM_SAMPLES	.\CL\cl_gl.h	55;"	d
CL_GL_OBJECT_BUFFER	.\CL\cl_gl.h	43;"	d
CL_GL_OBJECT_RENDERBUFFER	.\CL\cl_gl.h	46;"	d
CL_GL_OBJECT_TEXTURE1D	.\CL\cl_gl.h	48;"	d
CL_GL_OBJECT_TEXTURE1D_ARRAY	.\CL\cl_gl.h	49;"	d
CL_GL_OBJECT_TEXTURE2D	.\CL\cl_gl.h	44;"	d
CL_GL_OBJECT_TEXTURE2D_ARRAY	.\CL\cl_gl.h	47;"	d
CL_GL_OBJECT_TEXTURE3D	.\CL\cl_gl.h	45;"	d
CL_GL_OBJECT_TEXTURE_BUFFER	.\CL\cl_gl.h	50;"	d
CL_GL_TEXTURE_TARGET	.\CL\cl_gl.h	53;"	d
CL_HALF_FLOAT	.\CL\cl.h	388;"	d
CL_HAS_HI_LO_VECTOR_FIELDS	.\CL\cl_platform.h	390;"	d
CL_HAS_NAMED_VECTOR_FIELDS	.\CL\cl_platform.h	388;"	d
CL_HPP_	.\CL\cl.hpp	144;"	d
CL_HUGE_VAL	.\CL\cl_platform.h	222;"	d
CL_HUGE_VALF	.\CL\cl_platform.h	221;"	d
CL_IMAGE_ARRAY_SIZE	.\CL\cl.h	420;"	d
CL_IMAGE_BUFFER	.\CL\cl.h	421;"	d
CL_IMAGE_BYTE_PITCH_AMD	.\CL\cl_ext.h	261;"	d
CL_IMAGE_D3D10_SUBRESOURCE_KHR	.\CL\cl_d3d10.h	68;"	d
CL_IMAGE_D3D11_SUBRESOURCE_KHR	.\CL\cl_d3d11.h	68;"	d
CL_IMAGE_DEPTH	.\CL\cl.h	419;"	d
CL_IMAGE_DX9_MEDIA_PLANE_KHR	.\CL\cl_dx9_media_sharing.h	80;"	d
CL_IMAGE_ELEMENT_SIZE	.\CL\cl.h	414;"	d
CL_IMAGE_FORMAT	.\CL\cl.h	413;"	d
CL_IMAGE_FORMAT_MISMATCH	.\CL\cl.h	128;"	d
CL_IMAGE_FORMAT_NOT_SUPPORTED	.\CL\cl.h	129;"	d
CL_IMAGE_HEIGHT	.\CL\cl.h	418;"	d
CL_IMAGE_NUM_MIP_LEVELS	.\CL\cl.h	422;"	d
CL_IMAGE_NUM_SAMPLES	.\CL\cl.h	423;"	d
CL_IMAGE_ROW_PITCH	.\CL\cl.h	415;"	d
CL_IMAGE_SLICE_PITCH	.\CL\cl.h	416;"	d
CL_IMAGE_WIDTH	.\CL\cl.h	417;"	d
CL_INFINITY	.\CL\cl_platform.h	224;"	d
CL_INTENSITY	.\CL\cl.h	366;"	d
CL_INT_MAX	.\CL\cl_platform.h	163;"	d
CL_INT_MIN	.\CL\cl_platform.h	164;"	d
CL_INVALID_ARG_INDEX	.\CL\cl.h	159;"	d
CL_INVALID_ARG_SIZE	.\CL\cl.h	161;"	d
CL_INVALID_ARG_VALUE	.\CL\cl.h	160;"	d
CL_INVALID_BINARY	.\CL\cl.h	152;"	d
CL_INVALID_BUFFER_SIZE	.\CL\cl.h	171;"	d
CL_INVALID_BUILD_OPTIONS	.\CL\cl.h	153;"	d
CL_INVALID_COMMAND_QUEUE	.\CL\cl.h	146;"	d
CL_INVALID_COMPILER_OPTIONS	.\CL\cl.h	176;"	d
CL_INVALID_CONTEXT	.\CL\cl.h	144;"	d
CL_INVALID_D3D10_DEVICE_KHR	.\CL\cl_d3d10.h	47;"	d
CL_INVALID_D3D10_RESOURCE_KHR	.\CL\cl_d3d10.h	48;"	d
CL_INVALID_D3D11_DEVICE_KHR	.\CL\cl_d3d11.h	47;"	d
CL_INVALID_D3D11_RESOURCE_KHR	.\CL\cl_d3d11.h	48;"	d
CL_INVALID_DEVICE	.\CL\cl.h	143;"	d
CL_INVALID_DEVICE_PARTITION_COUNT	.\CL\cl.h	178;"	d
CL_INVALID_DEVICE_TYPE	.\CL\cl.h	141;"	d
CL_INVALID_DX9_MEDIA_ADAPTER_KHR	.\CL\cl_dx9_media_sharing.h	56;"	d
CL_INVALID_DX9_MEDIA_SURFACE_KHR	.\CL\cl_dx9_media_sharing.h	57;"	d
CL_INVALID_EVENT	.\CL\cl.h	168;"	d
CL_INVALID_EVENT_WAIT_LIST	.\CL\cl.h	167;"	d
CL_INVALID_GLOBAL_OFFSET	.\CL\cl.h	166;"	d
CL_INVALID_GLOBAL_WORK_SIZE	.\CL\cl.h	173;"	d
CL_INVALID_GL_OBJECT	.\CL\cl.h	170;"	d
CL_INVALID_GL_SHAREGROUP_REFERENCE_KHR	.\CL\cl_gl.h	131;"	d
CL_INVALID_HOST_PTR	.\CL\cl.h	147;"	d
CL_INVALID_IMAGE_DESCRIPTOR	.\CL\cl.h	175;"	d
CL_INVALID_IMAGE_FORMAT_DESCRIPTOR	.\CL\cl.h	149;"	d
CL_INVALID_IMAGE_SIZE	.\CL\cl.h	150;"	d
CL_INVALID_KERNEL	.\CL\cl.h	158;"	d
CL_INVALID_KERNEL_ARGS	.\CL\cl.h	162;"	d
CL_INVALID_KERNEL_DEFINITION	.\CL\cl.h	157;"	d
CL_INVALID_KERNEL_NAME	.\CL\cl.h	156;"	d
CL_INVALID_LINKER_OPTIONS	.\CL\cl.h	177;"	d
CL_INVALID_MEM_OBJECT	.\CL\cl.h	148;"	d
CL_INVALID_MIP_LEVEL	.\CL\cl.h	172;"	d
CL_INVALID_OPERATION	.\CL\cl.h	169;"	d
CL_INVALID_PARTITION_COUNT_EXT	.\CL\cl_ext.h	265;"	d
CL_INVALID_PARTITION_NAME_EXT	.\CL\cl_ext.h	266;"	d
CL_INVALID_PLATFORM	.\CL\cl.h	142;"	d
CL_INVALID_PROGRAM	.\CL\cl.h	154;"	d
CL_INVALID_PROGRAM_EXECUTABLE	.\CL\cl.h	155;"	d
CL_INVALID_PROPERTY	.\CL\cl.h	174;"	d
CL_INVALID_QUEUE_PROPERTIES	.\CL\cl.h	145;"	d
CL_INVALID_SAMPLER	.\CL\cl.h	151;"	d
CL_INVALID_VALUE	.\CL\cl.h	140;"	d
CL_INVALID_WORK_DIMENSION	.\CL\cl.h	163;"	d
CL_INVALID_WORK_GROUP_SIZE	.\CL\cl.h	164;"	d
CL_INVALID_WORK_ITEM_SIZE	.\CL\cl.h	165;"	d
CL_KERNEL_ARG_ACCESS_NONE	.\CL\cl.h	502;"	d
CL_KERNEL_ARG_ACCESS_QUALIFIER	.\CL\cl.h	487;"	d
CL_KERNEL_ARG_ACCESS_READ_ONLY	.\CL\cl.h	499;"	d
CL_KERNEL_ARG_ACCESS_READ_WRITE	.\CL\cl.h	501;"	d
CL_KERNEL_ARG_ACCESS_WRITE_ONLY	.\CL\cl.h	500;"	d
CL_KERNEL_ARG_ADDRESS_CONSTANT	.\CL\cl.h	495;"	d
CL_KERNEL_ARG_ADDRESS_GLOBAL	.\CL\cl.h	493;"	d
CL_KERNEL_ARG_ADDRESS_LOCAL	.\CL\cl.h	494;"	d
CL_KERNEL_ARG_ADDRESS_PRIVATE	.\CL\cl.h	496;"	d
CL_KERNEL_ARG_ADDRESS_QUALIFIER	.\CL\cl.h	486;"	d
CL_KERNEL_ARG_INFO_NOT_AVAILABLE	.\CL\cl.h	138;"	d
CL_KERNEL_ARG_NAME	.\CL\cl.h	490;"	d
CL_KERNEL_ARG_TYPE_CONST	.\CL\cl.h	506;"	d
CL_KERNEL_ARG_TYPE_NAME	.\CL\cl.h	488;"	d
CL_KERNEL_ARG_TYPE_NONE	.\CL\cl.h	505;"	d
CL_KERNEL_ARG_TYPE_QUALIFIER	.\CL\cl.h	489;"	d
CL_KERNEL_ARG_TYPE_RESTRICT	.\CL\cl.h	507;"	d
CL_KERNEL_ARG_TYPE_VOLATILE	.\CL\cl.h	508;"	d
CL_KERNEL_ATTRIBUTES	.\CL\cl.h	483;"	d
CL_KERNEL_COMPILE_WORK_GROUP_SIZE	.\CL\cl.h	512;"	d
CL_KERNEL_CONTEXT	.\CL\cl.h	481;"	d
CL_KERNEL_FUNCTION_NAME	.\CL\cl.h	478;"	d
CL_KERNEL_GLOBAL_WORK_SIZE	.\CL\cl.h	516;"	d
CL_KERNEL_LOCAL_MEM_SIZE	.\CL\cl.h	513;"	d
CL_KERNEL_NUM_ARGS	.\CL\cl.h	479;"	d
CL_KERNEL_PREFERRED_WORK_GROUP_SIZE_MULTIPLE	.\CL\cl.h	514;"	d
CL_KERNEL_PRIVATE_MEM_SIZE	.\CL\cl.h	515;"	d
CL_KERNEL_PROGRAM	.\CL\cl.h	482;"	d
CL_KERNEL_REFERENCE_COUNT	.\CL\cl.h	480;"	d
CL_KERNEL_WORK_GROUP_SIZE	.\CL\cl.h	511;"	d
CL_LINKER_NOT_AVAILABLE	.\CL\cl.h	135;"	d
CL_LINK_PROGRAM_FAILURE	.\CL\cl.h	136;"	d
CL_LOCAL	.\CL\cl.h	300;"	d
CL_LONG_MAX	.\CL\cl_platform.h	166;"	d
CL_LONG_MIN	.\CL\cl_platform.h	167;"	d
CL_LUMINANCE	.\CL\cl.h	367;"	d
CL_MAP_FAILURE	.\CL\cl.h	131;"	d
CL_MAP_READ	.\CL\cl.h	444;"	d
CL_MAP_WRITE	.\CL\cl.h	445;"	d
CL_MAP_WRITE_INVALIDATE_REGION	.\CL\cl.h	446;"	d
CL_MAXFLOAT	.\CL\cl_platform.h	223;"	d
CL_MEM_ALLOC_HOST_PTR	.\CL\cl.h	346;"	d
CL_MEM_ASSOCIATED_MEMOBJECT	.\CL\cl.h	409;"	d
CL_MEM_BUS_ADDRESSABLE_AMD	.\CL\cl_ext.h	294;"	d
CL_MEM_CONTEXT	.\CL\cl.h	408;"	d
CL_MEM_COPY_HOST_PTR	.\CL\cl.h	347;"	d
CL_MEM_COPY_OVERLAP	.\CL\cl.h	127;"	d
CL_MEM_D3D10_RESOURCE_KHR	.\CL\cl_d3d10.h	65;"	d
CL_MEM_D3D11_RESOURCE_KHR	.\CL\cl_d3d11.h	65;"	d
CL_MEM_DX9_MEDIA_ADAPTER_TYPE_KHR	.\CL\cl_dx9_media_sharing.h	76;"	d
CL_MEM_DX9_MEDIA_SURFACE_INFO_KHR	.\CL\cl_dx9_media_sharing.h	77;"	d
CL_MEM_EXTERNAL_PHYSICAL_AMD	.\CL\cl_ext.h	295;"	d
CL_MEM_FLAGS	.\CL\cl.h	403;"	d
CL_MEM_HOST_NO_ACCESS	.\CL\cl.h	351;"	d
CL_MEM_HOST_PTR	.\CL\cl.h	405;"	d
CL_MEM_HOST_READ_ONLY	.\CL\cl.h	350;"	d
CL_MEM_HOST_WRITE_ONLY	.\CL\cl.h	349;"	d
CL_MEM_MAP_COUNT	.\CL\cl.h	406;"	d
CL_MEM_OBJECT_ALLOCATION_FAILURE	.\CL\cl.h	123;"	d
CL_MEM_OBJECT_BUFFER	.\CL\cl.h	393;"	d
CL_MEM_OBJECT_IMAGE1D	.\CL\cl.h	397;"	d
CL_MEM_OBJECT_IMAGE1D_ARRAY	.\CL\cl.h	398;"	d
CL_MEM_OBJECT_IMAGE1D_BUFFER	.\CL\cl.h	399;"	d
CL_MEM_OBJECT_IMAGE2D	.\CL\cl.h	394;"	d
CL_MEM_OBJECT_IMAGE2D_ARRAY	.\CL\cl.h	396;"	d
CL_MEM_OBJECT_IMAGE3D	.\CL\cl.h	395;"	d
CL_MEM_OFFSET	.\CL\cl.h	410;"	d
CL_MEM_READ_ONLY	.\CL\cl.h	344;"	d
CL_MEM_READ_WRITE	.\CL\cl.h	342;"	d
CL_MEM_REFERENCE_COUNT	.\CL\cl.h	407;"	d
CL_MEM_SIZE	.\CL\cl.h	404;"	d
CL_MEM_TYPE	.\CL\cl.h	402;"	d
CL_MEM_USE_HOST_PTR	.\CL\cl.h	345;"	d
CL_MEM_USE_PERSISTENT_MEM_AMD	.\CL\cl_ext.h	177;"	d
CL_MEM_WRITE_ONLY	.\CL\cl.h	343;"	d
CL_MIGRATE_MEM_OBJECT_CONTENT_UNDEFINED	.\CL\cl.h	355;"	d
CL_MIGRATE_MEM_OBJECT_HOST	.\CL\cl.h	354;"	d
CL_MISALIGNED_SUB_BUFFER_OFFSET	.\CL\cl.h	132;"	d
CL_M_1_PI	.\CL\cl_platform.h	200;"	d
CL_M_1_PI_F	.\CL\cl_platform.h	214;"	d
CL_M_2_PI	.\CL\cl_platform.h	201;"	d
CL_M_2_PI_F	.\CL\cl_platform.h	215;"	d
CL_M_2_SQRTPI	.\CL\cl_platform.h	202;"	d
CL_M_2_SQRTPI_F	.\CL\cl_platform.h	216;"	d
CL_M_E	.\CL\cl_platform.h	192;"	d
CL_M_E_F	.\CL\cl_platform.h	206;"	d
CL_M_LN10	.\CL\cl_platform.h	196;"	d
CL_M_LN10_F	.\CL\cl_platform.h	210;"	d
CL_M_LN2	.\CL\cl_platform.h	195;"	d
CL_M_LN2_F	.\CL\cl_platform.h	209;"	d
CL_M_LOG10E	.\CL\cl_platform.h	194;"	d
CL_M_LOG10E_F	.\CL\cl_platform.h	208;"	d
CL_M_LOG2E	.\CL\cl_platform.h	193;"	d
CL_M_LOG2E_F	.\CL\cl_platform.h	207;"	d
CL_M_PI	.\CL\cl_platform.h	197;"	d
CL_M_PI_2	.\CL\cl_platform.h	198;"	d
CL_M_PI_2_F	.\CL\cl_platform.h	212;"	d
CL_M_PI_4	.\CL\cl_platform.h	199;"	d
CL_M_PI_4_F	.\CL\cl_platform.h	213;"	d
CL_M_PI_F	.\CL\cl_platform.h	211;"	d
CL_M_SQRT1_2	.\CL\cl_platform.h	204;"	d
CL_M_SQRT1_2_F	.\CL\cl_platform.h	218;"	d
CL_M_SQRT2	.\CL\cl_platform.h	203;"	d
CL_M_SQRT2_F	.\CL\cl_platform.h	217;"	d
CL_NAN	.\CL\cl_platform.h	220;"	d
CL_NONE	.\CL\cl.h	295;"	d
CL_NON_BLOCKING	.\CL\cl.h	189;"	d
CL_OUT_OF_HOST_MEMORY	.\CL\cl.h	125;"	d
CL_OUT_OF_RESOURCES	.\CL\cl.h	124;"	d
CL_PARTITION_BY_COUNTS_LIST_END_EXT	.\CL\cl_ext.h	278;"	d
CL_PARTITION_BY_NAMES_LIST_END_EXT	.\CL\cl_ext.h	279;"	d
CL_PLATFORM_EXTENSIONS	.\CL\cl.h	196;"	d
CL_PLATFORM_ICD_SUFFIX_KHR	.\CL\cl_ext.h	102;"	d
CL_PLATFORM_NAME	.\CL\cl.h	194;"	d
CL_PLATFORM_NOT_FOUND_KHR	.\CL\cl_ext.h	105;"	d
CL_PLATFORM_PROFILE	.\CL\cl.h	192;"	d
CL_PLATFORM_VENDOR	.\CL\cl.h	195;"	d
CL_PLATFORM_VERSION	.\CL\cl.h	193;"	d
CL_PREFERRED_DEVICES_FOR_D3D10_KHR	.\CL\cl_d3d10.h	57;"	d
CL_PREFERRED_DEVICES_FOR_D3D11_KHR	.\CL\cl_d3d11.h	57;"	d
CL_PREFERRED_DEVICES_FOR_DX9_MEDIA_ADAPTER_KHR	.\CL\cl_dx9_media_sharing.h	67;"	d
CL_PROFILING_COMMAND_END	.\CL\cl.h	565;"	d
CL_PROFILING_COMMAND_QUEUED	.\CL\cl.h	562;"	d
CL_PROFILING_COMMAND_START	.\CL\cl.h	564;"	d
CL_PROFILING_COMMAND_SUBMIT	.\CL\cl.h	563;"	d
CL_PROFILING_INFO_NOT_AVAILABLE	.\CL\cl.h	126;"	d
CL_PROGRAM_BINARIES	.\CL\cl.h	455;"	d
CL_PROGRAM_BINARY_SIZES	.\CL\cl.h	454;"	d
CL_PROGRAM_BINARY_TYPE	.\CL\cl.h	463;"	d
CL_PROGRAM_BINARY_TYPE_COMPILED_OBJECT	.\CL\cl.h	467;"	d
CL_PROGRAM_BINARY_TYPE_EXECUTABLE	.\CL\cl.h	469;"	d
CL_PROGRAM_BINARY_TYPE_LIBRARY	.\CL\cl.h	468;"	d
CL_PROGRAM_BINARY_TYPE_NONE	.\CL\cl.h	466;"	d
CL_PROGRAM_BUILD_LOG	.\CL\cl.h	462;"	d
CL_PROGRAM_BUILD_OPTIONS	.\CL\cl.h	461;"	d
CL_PROGRAM_BUILD_STATUS	.\CL\cl.h	460;"	d
CL_PROGRAM_CONTEXT	.\CL\cl.h	450;"	d
CL_PROGRAM_DEVICES	.\CL\cl.h	452;"	d
CL_PROGRAM_KERNEL_NAMES	.\CL\cl.h	457;"	d
CL_PROGRAM_NUM_DEVICES	.\CL\cl.h	451;"	d
CL_PROGRAM_NUM_KERNELS	.\CL\cl.h	456;"	d
CL_PROGRAM_REFERENCE_COUNT	.\CL\cl.h	449;"	d
CL_PROGRAM_SOURCE	.\CL\cl.h	453;"	d
CL_PROGRAM_STRING_DEBUG_INFO	.\CL\cl_platform.h	1165;"	d
CL_PROPERTIES_LIST_END_EXT	.\CL\cl_ext.h	277;"	d
CL_QUEUED	.\CL\cl.h	556;"	d
CL_QUEUE_CONTEXT	.\CL\cl.h	336;"	d
CL_QUEUE_DEVICE	.\CL\cl.h	337;"	d
CL_QUEUE_OUT_OF_ORDER_EXEC_MODE_ENABLE	.\CL\cl.h	308;"	d
CL_QUEUE_PROFILING_ENABLE	.\CL\cl.h	309;"	d
CL_QUEUE_PROPERTIES	.\CL\cl.h	339;"	d
CL_QUEUE_REFERENCE_COUNT	.\CL\cl.h	338;"	d
CL_R	.\CL\cl.h	358;"	d
CL_RA	.\CL\cl.h	361;"	d
CL_READ_ONLY_CACHE	.\CL\cl.h	296;"	d
CL_READ_WRITE_CACHE	.\CL\cl.h	297;"	d
CL_RG	.\CL\cl.h	360;"	d
CL_RGB	.\CL\cl.h	362;"	d
CL_RGBA	.\CL\cl.h	363;"	d
CL_RGBx	.\CL\cl.h	370;"	d
CL_RGx	.\CL\cl.h	369;"	d
CL_RUNNING	.\CL\cl.h	554;"	d
CL_Rx	.\CL\cl.h	368;"	d
CL_SAMPLER_ADDRESSING_MODE	.\CL\cl.h	440;"	d
CL_SAMPLER_CONTEXT	.\CL\cl.h	438;"	d
CL_SAMPLER_FILTER_MODE	.\CL\cl.h	441;"	d
CL_SAMPLER_NORMALIZED_COORDS	.\CL\cl.h	439;"	d
CL_SAMPLER_REFERENCE_COUNT	.\CL\cl.h	437;"	d
CL_SCHAR_MAX	.\CL\cl_platform.h	155;"	d
CL_SCHAR_MIN	.\CL\cl_platform.h	156;"	d
CL_SHRT_MAX	.\CL\cl_platform.h	160;"	d
CL_SHRT_MIN	.\CL\cl_platform.h	161;"	d
CL_SIGNED_INT16	.\CL\cl.h	383;"	d
CL_SIGNED_INT32	.\CL\cl.h	384;"	d
CL_SIGNED_INT8	.\CL\cl.h	382;"	d
CL_SNORM_INT16	.\CL\cl.h	376;"	d
CL_SNORM_INT8	.\CL\cl.h	375;"	d
CL_SUBMITTED	.\CL\cl.h	555;"	d
CL_SUCCESS	.\CL\cl.h	119;"	d
CL_TRUE	.\CL\cl.h	187;"	d
CL_UCHAR_MAX	.\CL\cl_platform.h	159;"	d
CL_UINT_MAX	.\CL\cl_platform.h	165;"	d
CL_ULONG_MAX	.\CL\cl_platform.h	168;"	d
CL_UNORM_INT16	.\CL\cl.h	378;"	d
CL_UNORM_INT24	.\CL\cl.h	390;"	d
CL_UNORM_INT8	.\CL\cl.h	377;"	d
CL_UNORM_INT_101010	.\CL\cl.h	381;"	d
CL_UNORM_SHORT_555	.\CL\cl.h	380;"	d
CL_UNORM_SHORT_565	.\CL\cl.h	379;"	d
CL_UNSIGNED_INT16	.\CL\cl.h	386;"	d
CL_UNSIGNED_INT32	.\CL\cl.h	387;"	d
CL_UNSIGNED_INT8	.\CL\cl.h	385;"	d
CL_USHRT_MAX	.\CL\cl_platform.h	162;"	d
CL_VERSION_1_0	.\CL\cl.h	181;"	d
CL_VERSION_1_1	.\CL\cl.h	182;"	d
CL_VERSION_1_2	.\CL\cl.h	183;"	d
CL_WGL_HDC_KHR	.\CL\cl_gl.h	141;"	d
CmdArgsEnum	.\SDKUtil\SDKUtil.hpp	/^enum CmdArgsEnum$/;"	g	namespace:appsdk
CmdArgsEnum	.\SDKUtil\include\SDKCommandArgs.hpp	/^	enum CmdArgsEnum$/;"	g	namespace:streamsdk
ColorPalette	.\SDKUtil\include\SDKBitMap.hpp	/^typedef uchar4 ColorPalette;$/;"	t	namespace:streamsdk
CommandQueue	.\CL\cl.hpp	/^    CommandQueue($/;"	f	class:cl::CommandQueue
CommandQueue	.\CL\cl.hpp	/^    CommandQueue() { }$/;"	f	class:cl::CommandQueue
CommandQueue	.\CL\cl.hpp	/^    CommandQueue(const CommandQueue& commandQueue) : detail::Wrapper<cl_type>(commandQueue) { }$/;"	f	class:cl::CommandQueue
CommandQueue	.\CL\cl.hpp	/^    CommandQueue(const cl_command_queue& commandQueue) : detail::Wrapper<cl_type>(commandQueue) { }$/;"	f	class:cl::CommandQueue
CommandQueue	.\CL\cl.hpp	/^   CommandQueue($/;"	f	class:cl::CommandQueue
CommandQueue	.\CL\cl.hpp	/^class CommandQueue : public detail::Wrapper<cl_command_queue>$/;"	c	namespace:cl
CondVar	.\SDKUtil\SDKThread.cpp	/^    CondVar::CondVar()$/;"	f	class:streamsdk::CondVar
CondVar	.\SDKUtil\include\SDKThread.hpp	/^    class EXPORT CondVar$/;"	c	namespace:streamsdk
CondVarImpl	.\SDKUtil\SDKThread.cpp	/^    CondVarImpl::CondVarImpl() : _count(0xFFFFFFFF), _maxThreads(0xFFFFFFFF)$/;"	f	class:streamsdk::CondVarImpl
CondVarImpl	.\SDKUtil\include\SDKThread.hpp	/^    class CondVarImpl$/;"	c	namespace:streamsdk
Context	.\CL\cl.hpp	/^    Context($/;"	f	class:cl::Context
Context	.\CL\cl.hpp	/^    Context() : detail::Wrapper<cl_type>() { }$/;"	f	class:cl::Context
Context	.\CL\cl.hpp	/^    Context(const Context& context) : detail::Wrapper<cl_type>(context) { }$/;"	f	class:cl::Context
Context	.\CL\cl.hpp	/^    __CL_EXPLICIT_CONSTRUCTORS Context(const cl_context& context) : detail::Wrapper<cl_type>(context) { }$/;"	f	class:cl::Context
Context	.\CL\cl.hpp	/^class Context $/;"	c	namespace:cl
DeleteOption	.\SDKUtil\SDKCommandArgs.cpp	/^int SDKCommandArgs::DeleteOption(Option* op)$/;"	f	class:streamsdk::SDKCommandArgs
DeleteOption	.\SDKUtil\SDKUtil.hpp	/^        int DeleteOption(Option* op)$/;"	f	class:appsdk::SDKCmdArgsParser
Device	.\CL\cl.hpp	/^    Device() : detail::Wrapper<cl_type>() { }$/;"	f	class:cl::Device
Device	.\CL\cl.hpp	/^    Device(const Device& device) : detail::Wrapper<cl_type>(device) { }$/;"	f	class:cl::Device
Device	.\CL\cl.hpp	/^    Device(const cl_device_id &device) : detail::Wrapper<cl_type>(device) { }$/;"	f	class:cl::Device
Device	.\CL\cl.hpp	/^class Device : public detail::Wrapper<cl_device_id>$/;"	c	namespace:cl
EXPORT	.\SDKUtil\include\SDKThread.hpp	20;"	d
EXPORT	.\SDKUtil\include\SDKThread.hpp	24;"	d
EnqueueArgs	.\CL\cl.hpp	/^    EnqueueArgs(CommandQueue &queue, Event e, NDRange global) : $/;"	f	struct:cl::EnqueueArgs
EnqueueArgs	.\CL\cl.hpp	/^    EnqueueArgs(CommandQueue &queue, Event e, NDRange global, NDRange local) : $/;"	f	struct:cl::EnqueueArgs
EnqueueArgs	.\CL\cl.hpp	/^    EnqueueArgs(CommandQueue &queue, Event e, NDRange offset, NDRange global, NDRange local) : $/;"	f	struct:cl::EnqueueArgs
EnqueueArgs	.\CL\cl.hpp	/^    EnqueueArgs(CommandQueue &queue, NDRange global) : $/;"	f	struct:cl::EnqueueArgs
EnqueueArgs	.\CL\cl.hpp	/^    EnqueueArgs(CommandQueue &queue, NDRange global, NDRange local) : $/;"	f	struct:cl::EnqueueArgs
EnqueueArgs	.\CL\cl.hpp	/^    EnqueueArgs(CommandQueue &queue, NDRange offset, NDRange global, NDRange local) : $/;"	f	struct:cl::EnqueueArgs
EnqueueArgs	.\CL\cl.hpp	/^    EnqueueArgs(CommandQueue &queue, const VECTOR_CLASS<Event> &events, NDRange global) : $/;"	f	struct:cl::EnqueueArgs
EnqueueArgs	.\CL\cl.hpp	/^    EnqueueArgs(CommandQueue &queue, const VECTOR_CLASS<Event> &events, NDRange global, NDRange local) : $/;"	f	struct:cl::EnqueueArgs
EnqueueArgs	.\CL\cl.hpp	/^    EnqueueArgs(CommandQueue &queue, const VECTOR_CLASS<Event> &events, NDRange offset, NDRange global, NDRange local) : $/;"	f	struct:cl::EnqueueArgs
EnqueueArgs	.\CL\cl.hpp	/^    EnqueueArgs(Event e, NDRange global) : $/;"	f	struct:cl::EnqueueArgs
EnqueueArgs	.\CL\cl.hpp	/^    EnqueueArgs(Event e, NDRange global, NDRange local) : $/;"	f	struct:cl::EnqueueArgs
EnqueueArgs	.\CL\cl.hpp	/^    EnqueueArgs(Event e, NDRange offset, NDRange global, NDRange local) : $/;"	f	struct:cl::EnqueueArgs
EnqueueArgs	.\CL\cl.hpp	/^    EnqueueArgs(NDRange global) : $/;"	f	struct:cl::EnqueueArgs
EnqueueArgs	.\CL\cl.hpp	/^    EnqueueArgs(NDRange global, NDRange local) : $/;"	f	struct:cl::EnqueueArgs
EnqueueArgs	.\CL\cl.hpp	/^    EnqueueArgs(NDRange offset, NDRange global, NDRange local) : $/;"	f	struct:cl::EnqueueArgs
EnqueueArgs	.\CL\cl.hpp	/^    EnqueueArgs(const VECTOR_CLASS<Event> &events, NDRange global) : $/;"	f	struct:cl::EnqueueArgs
EnqueueArgs	.\CL\cl.hpp	/^    EnqueueArgs(const VECTOR_CLASS<Event> &events, NDRange global, NDRange local) : $/;"	f	struct:cl::EnqueueArgs
EnqueueArgs	.\CL\cl.hpp	/^    EnqueueArgs(const VECTOR_CLASS<Event> &events, NDRange offset, NDRange global, NDRange local) : $/;"	f	struct:cl::EnqueueArgs
EnqueueArgs	.\CL\cl.hpp	/^struct EnqueueArgs$/;"	s	namespace:cl
Error	.\CL\cl.hpp	/^    Error(cl_int err, const char * errStr = NULL) : err_(err), errStr_(errStr)$/;"	f	class:cl::Error
Error	.\CL\cl.hpp	/^class Error : public std::exception$/;"	c	namespace:cl
Event	.\CL\cl.hpp	/^    Event() : detail::Wrapper<cl_type>() { }$/;"	f	class:cl::Event
Event	.\CL\cl.hpp	/^    Event(const Event& event) : detail::Wrapper<cl_type>(event) { }$/;"	f	class:cl::Event
Event	.\CL\cl.hpp	/^    Event(const cl_event& event) : detail::Wrapper<cl_type>(event) { }$/;"	f	class:cl::Event
Event	.\CL\cl.hpp	/^class Event : public detail::Wrapper<cl_event>$/;"	c	namespace:cl
FREE	.\SDKUtil\SDKUtil.hpp	92;"	d
FREE	.\SDKUtil\include\SDKCommon.hpp	108;"	d
FunctorType	.\CL\cl.hpp	/^		NullType> FunctorType;$/;"	t	struct:cl::detail::functionImplementation_
FunctorType	.\CL\cl.hpp	/^		T31> FunctorType;$/;"	t	struct:cl::detail::functionImplementation_
FunctorType	.\CL\cl.hpp	/^    > FunctorType;$/;"	t	struct:cl::make_kernel
GCL_API_SUFFIX__VERSION_1_1	.\CL\cl_platform.h	59;"	d
GCL_API_SUFFIX__VERSION_1_2	.\CL\cl_platform.h	65;"	d
GCL_API_SUFFIX__VERSION_1_2	.\CL\cl_platform.h	72;"	d
GETCWD	.\SDKUtil\SDKFile.cpp	10;"	d	file:
GETCWD	.\SDKUtil\SDKFile.cpp	5;"	d	file:
GETCWD	.\SDKUtil\SDKFile.hpp	30;"	d
GETCWD	.\SDKUtil\SDKFile.hpp	35;"	d
GetInfoFunctor0	.\CL\cl.hpp	/^struct GetInfoFunctor0$/;"	s	namespace:cl::detail
GetInfoFunctor1	.\CL\cl.hpp	/^struct GetInfoFunctor1$/;"	s	namespace:cl::detail
GetInfoHelper	.\CL\cl.hpp	/^struct GetInfoHelper$/;"	s	namespace:cl::detail
GetInfoHelper	.\CL\cl.hpp	/^struct GetInfoHelper<Func, STRING_CLASS>$/;"	s	namespace:cl::detail
GetInfoHelper	.\CL\cl.hpp	/^struct GetInfoHelper<Func, VECTOR_CLASS<T> >$/;"	s	namespace:cl::detail
GetInfoHelper	.\CL\cl.hpp	/^struct GetInfoHelper<Func, VECTOR_CLASS<char *> >$/;"	s	namespace:cl::detail
GetInfoHelper	.\CL\cl.hpp	/^struct GetInfoHelper<Func, VECTOR_CLASS<cl::Device> >$/;"	s	namespace:cl::detail
GetInfoHelper	.\CL\cl.hpp	/^struct GetInfoHelper<Func, size_t<N> >$/;"	s	namespace:cl::detail
Image	.\CL\cl.hpp	/^    Image() : Memory() { }$/;"	f	class:cl::Image
Image	.\CL\cl.hpp	/^    Image(const Image& image) : Memory(image) { }$/;"	f	class:cl::Image
Image	.\CL\cl.hpp	/^    __CL_EXPLICIT_CONSTRUCTORS Image(const cl_mem& image) : Memory(image) { }$/;"	f	class:cl::Image
Image	.\CL\cl.hpp	/^class Image : public Memory$/;"	c	namespace:cl
Image1D	.\CL\cl.hpp	/^    Image1D($/;"	f	class:cl::Image1D
Image1D	.\CL\cl.hpp	/^    Image1D() { }$/;"	f	class:cl::Image1D
Image1D	.\CL\cl.hpp	/^    Image1D(const Image1D& image1D) : Image(image1D) { }$/;"	f	class:cl::Image1D
Image1D	.\CL\cl.hpp	/^    __CL_EXPLICIT_CONSTRUCTORS Image1D(const cl_mem& image1D) : Image(image1D) { }$/;"	f	class:cl::Image1D
Image1D	.\CL\cl.hpp	/^class Image1D : public Image$/;"	c	namespace:cl
Image1DArray	.\CL\cl.hpp	/^    Image1DArray($/;"	f	class:cl::Image1DArray
Image1DArray	.\CL\cl.hpp	/^    Image1DArray() { }$/;"	f	class:cl::Image1DArray
Image1DArray	.\CL\cl.hpp	/^    Image1DArray(const Image1DArray& imageArray) : Image(imageArray) { }$/;"	f	class:cl::Image1DArray
Image1DArray	.\CL\cl.hpp	/^    __CL_EXPLICIT_CONSTRUCTORS Image1DArray(const cl_mem& imageArray) : Image(imageArray) { }$/;"	f	class:cl::Image1DArray
Image1DArray	.\CL\cl.hpp	/^class Image1DArray : public Image$/;"	c	namespace:cl
Image1DBuffer	.\CL\cl.hpp	/^    Image1DBuffer($/;"	f	class:cl::Image1DBuffer
Image1DBuffer	.\CL\cl.hpp	/^    Image1DBuffer() { }$/;"	f	class:cl::Image1DBuffer
Image1DBuffer	.\CL\cl.hpp	/^    Image1DBuffer(const Image1DBuffer& image1D) : Image(image1D) { }$/;"	f	class:cl::Image1DBuffer
Image1DBuffer	.\CL\cl.hpp	/^    __CL_EXPLICIT_CONSTRUCTORS Image1DBuffer(const cl_mem& image1D) : Image(image1D) { }$/;"	f	class:cl::Image1DBuffer
Image1DBuffer	.\CL\cl.hpp	/^class Image1DBuffer : public Image$/;"	c	namespace:cl
Image2D	.\CL\cl.hpp	/^    Image2D($/;"	f	class:cl::Image2D
Image2D	.\CL\cl.hpp	/^    Image2D() { }$/;"	f	class:cl::Image2D
Image2D	.\CL\cl.hpp	/^    Image2D(const Image2D& image2D) : Image(image2D) { }$/;"	f	class:cl::Image2D
Image2D	.\CL\cl.hpp	/^    __CL_EXPLICIT_CONSTRUCTORS Image2D(const cl_mem& image2D) : Image(image2D) { }$/;"	f	class:cl::Image2D
Image2D	.\CL\cl.hpp	/^class Image2D : public Image$/;"	c	namespace:cl
Image2DArray	.\CL\cl.hpp	/^    Image2DArray($/;"	f	class:cl::Image2DArray
Image2DArray	.\CL\cl.hpp	/^    Image2DArray() { }$/;"	f	class:cl::Image2DArray
Image2DArray	.\CL\cl.hpp	/^    Image2DArray(const Image2DArray& imageArray) : Image(imageArray) { }$/;"	f	class:cl::Image2DArray
Image2DArray	.\CL\cl.hpp	/^    __CL_EXPLICIT_CONSTRUCTORS Image2DArray(const cl_mem& imageArray) : Image(imageArray) { }$/;"	f	class:cl::Image2DArray
Image2DArray	.\CL\cl.hpp	/^class Image2DArray : public Image$/;"	c	namespace:cl
Image2DGL	.\CL\cl.hpp	/^    Image2DGL($/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
Image2DGL	.\CL\cl.hpp	/^    Image2DGL() : Image2D() { }$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
Image2DGL	.\CL\cl.hpp	/^    Image2DGL(const Image2DGL& image) : Image2D(image) { }$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
Image2DGL	.\CL\cl.hpp	/^    __CL_EXPLICIT_CONSTRUCTORS Image2DGL(const cl_mem& image) : Image2D(image) { }$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
Image3D	.\CL\cl.hpp	/^    Image3D($/;"	f	class:cl::Image3D
Image3D	.\CL\cl.hpp	/^    Image3D() { }$/;"	f	class:cl::Image3D
Image3D	.\CL\cl.hpp	/^    Image3D(const Image3D& image3D) : Image(image3D) { }$/;"	f	class:cl::Image3D
Image3D	.\CL\cl.hpp	/^    __CL_EXPLICIT_CONSTRUCTORS Image3D(const cl_mem& image3D) : Image(image3D) { }$/;"	f	class:cl::Image3D
Image3D	.\CL\cl.hpp	/^class Image3D : public Image$/;"	c	namespace:cl
Image3DGL	.\CL\cl.hpp	/^    Image3DGL($/;"	f	class:cl::Image3DGL
Image3DGL	.\CL\cl.hpp	/^    Image3DGL() : Image3D() { }$/;"	f	class:cl::Image3DGL
Image3DGL	.\CL\cl.hpp	/^    Image3DGL(const Image3DGL& image) : Image3D(image) { }$/;"	f	class:cl::Image3DGL
Image3DGL	.\CL\cl.hpp	/^    __CL_EXPLICIT_CONSTRUCTORS Image3DGL(const cl_mem& image) : Image3D(image) { }$/;"	f	class:cl::Image3DGL
Image3DGL	.\CL\cl.hpp	/^class Image3DGL : public Image3D$/;"	c	namespace:cl
ImageFormat	.\CL\cl.hpp	/^    ImageFormat(){}$/;"	f	struct:cl::ImageFormat
ImageFormat	.\CL\cl.hpp	/^    ImageFormat(cl_channel_order order, cl_channel_type type)$/;"	f	struct:cl::ImageFormat
ImageFormat	.\CL\cl.hpp	/^struct ImageFormat : public cl_image_format$/;"	s	namespace:cl
ImageGL	.\CL\cl.hpp	/^    ImageGL($/;"	f	class:cl::ImageGL
ImageGL	.\CL\cl.hpp	/^    ImageGL() : Image() { }$/;"	f	class:cl::ImageGL
ImageGL	.\CL\cl.hpp	/^    ImageGL(const ImageGL& image) : Image(image) { }$/;"	f	class:cl::ImageGL
ImageGL	.\CL\cl.hpp	/^    __CL_EXPLICIT_CONSTRUCTORS ImageGL(const cl_mem& image) : Image(image) { }$/;"	f	class:cl::ImageGL
ImageGL	.\CL\cl.hpp	/^class ImageGL : public Image$/;"	c	namespace:cl
Kernel	.\CL\cl.hpp	/^    Kernel() { }$/;"	f	class:cl::Kernel
Kernel	.\CL\cl.hpp	/^    Kernel(const Kernel& kernel) : detail::Wrapper<cl_type>(kernel) { }$/;"	f	class:cl::Kernel
Kernel	.\CL\cl.hpp	/^    __CL_EXPLICIT_CONSTRUCTORS Kernel(const cl_kernel& kernel) : detail::Wrapper<cl_type>(kernel) { }$/;"	f	class:cl::Kernel
Kernel	.\CL\cl.hpp	/^class Kernel : public detail::Wrapper<cl_kernel>$/;"	c	namespace:cl
Kernel	.\CL\cl.hpp	/^inline Kernel::Kernel(const Program& program, const char* name, cl_int* err)$/;"	f	class:cl::Kernel
KernelArgumentHandler	.\CL\cl.hpp	/^struct KernelArgumentHandler$/;"	s	namespace:cl::detail
KernelArgumentHandler	.\CL\cl.hpp	/^struct KernelArgumentHandler<LocalSpaceArg>$/;"	s	namespace:cl::detail
KernelFunctorGlobal	.\CL\cl.hpp	/^   KernelFunctorGlobal($/;"	f	class:cl::detail::KernelFunctorGlobal
KernelFunctorGlobal	.\CL\cl.hpp	/^class KernelFunctorGlobal$/;"	c	namespace:cl::detail
KernelWorkGroupInfo	.\SDKUtil\CLUtil.hpp	/^        KernelWorkGroupInfo():$/;"	f	class:appsdk::KernelWorkGroupInfo
KernelWorkGroupInfo	.\SDKUtil\CLUtil.hpp	/^class KernelWorkGroupInfo$/;"	c	namespace:appsdk
KernelWorkGroupInfo	.\SDKUtil\include\SDKCommon.hpp	/^		KernelWorkGroupInfo():$/;"	f	class:streamsdk::KernelWorkGroupInfo
KernelWorkGroupInfo	.\SDKUtil\include\SDKCommon.hpp	/^	class KernelWorkGroupInfo$/;"	c	namespace:streamsdk
Local	.\CL\cl.hpp	/^Local(::size_t size)$/;"	f	namespace:cl
LocalSpaceArg	.\CL\cl.hpp	/^struct LocalSpaceArg$/;"	s	namespace:cl
Memory	.\CL\cl.hpp	/^    Memory() : detail::Wrapper<cl_type>() { }$/;"	f	class:cl::Memory
Memory	.\CL\cl.hpp	/^    Memory(const Memory& memory) : detail::Wrapper<cl_type>(memory) { }$/;"	f	class:cl::Memory
Memory	.\CL\cl.hpp	/^    __CL_EXPLICIT_CONSTRUCTORS Memory(const cl_mem& memory) : detail::Wrapper<cl_type>(memory) { }$/;"	f	class:cl::Memory
Memory	.\CL\cl.hpp	/^class Memory : public detail::Wrapper<cl_mem>$/;"	c	namespace:cl
NDRange	.\CL\cl.hpp	/^    NDRange()$/;"	f	class:cl::NDRange
NDRange	.\CL\cl.hpp	/^    NDRange(::size_t size0)$/;"	f	class:cl::NDRange
NDRange	.\CL\cl.hpp	/^    NDRange(::size_t size0, ::size_t size1)$/;"	f	class:cl::NDRange
NDRange	.\CL\cl.hpp	/^    NDRange(::size_t size0, ::size_t size1, ::size_t size2)$/;"	f	class:cl::NDRange
NDRange	.\CL\cl.hpp	/^class NDRange$/;"	c	namespace:cl
NullRange	.\CL\cl.hpp	/^static const NDRange NullRange;$/;"	v
NullType	.\CL\cl.hpp	/^class NullType {};$/;"	c	namespace:cl::detail
OPENCL_EXPECTED_ERROR	.\SDKUtil\CLUtil.hpp	36;"	d
OPENCL_EXPECTED_ERROR	.\SDKUtil\include\SDKCommon.hpp	89;"	d
OPENVIDEO_EXPECTED_ERROR	.\SDKUtil\CLUtil.hpp	49;"	d
OPENVIDEO_EXPECTED_ERROR	.\SDKUtil\include\SDKCommon.hpp	102;"	d
Option	.\SDKUtil\SDKUtil.hpp	/^struct Option$/;"	s	namespace:appsdk
Option	.\SDKUtil\include\SDKCommandArgs.hpp	/^	struct Option$/;"	s	namespace:streamsdk
PFN_clCreateFromD3D10BufferKHR	.\CL\cl.hpp	/^    typedef CL_API_ENTRY cl_mem (CL_API_CALL *PFN_clCreateFromD3D10BufferKHR)($/;"	t	class:cl::BufferD3D10
PFN_clEnqueueAcquireD3D10ObjectsKHR	.\CL\cl.hpp	/^typedef CL_API_ENTRY cl_int (CL_API_CALL *PFN_clEnqueueAcquireD3D10ObjectsKHR)($/;"	t	class:cl::CommandQueue
PFN_clEnqueueReleaseD3D10ObjectsKHR	.\CL\cl.hpp	/^typedef CL_API_ENTRY cl_int (CL_API_CALL *PFN_clEnqueueReleaseD3D10ObjectsKHR)($/;"	t	class:cl::CommandQueue
PRINT_ERROR_MSG	.\SDKUtil\include\SDKThread.hpp	36;"	d
PRINT_ERROR_MSG	.\SDKUtil\include\SDKThread.hpp	40;"	d
Platform	.\CL\cl.hpp	/^    Platform() : detail::Wrapper<cl_type>()  { }$/;"	f	class:cl::Platform
Platform	.\CL\cl.hpp	/^    Platform(const Platform& platform) : detail::Wrapper<cl_type>(platform) { }$/;"	f	class:cl::Platform
Platform	.\CL\cl.hpp	/^    Platform(const cl_platform_id &platform) : detail::Wrapper<cl_type>(platform) { }$/;"	f	class:cl::Platform
Platform	.\CL\cl.hpp	/^class Platform : public detail::Wrapper<cl_platform_id>$/;"	c	namespace:cl
Program	.\CL\cl.hpp	/^    Program($/;"	f	class:cl::Program
Program	.\CL\cl.hpp	/^    Program() { }$/;"	f	class:cl::Program
Program	.\CL\cl.hpp	/^    Program(const Program& program) : detail::Wrapper<cl_type>(program) { }$/;"	f	class:cl::Program
Program	.\CL\cl.hpp	/^    __CL_EXPLICIT_CONSTRUCTORS Program(const cl_program& program) : detail::Wrapper<cl_type>(program) { }$/;"	f	class:cl::Program
Program	.\CL\cl.hpp	/^class Program : public detail::Wrapper<cl_program>$/;"	c	namespace:cl
ReferenceHandler	.\CL\cl.hpp	/^struct ReferenceHandler$/;"	s	namespace:cl::detail
ReferenceHandler	.\CL\cl.hpp	/^struct ReferenceHandler<cl_command_queue>$/;"	s	namespace:cl::detail
ReferenceHandler	.\CL\cl.hpp	/^struct ReferenceHandler<cl_context>$/;"	s	namespace:cl::detail
ReferenceHandler	.\CL\cl.hpp	/^struct ReferenceHandler<cl_device_id>$/;"	s	namespace:cl::detail
ReferenceHandler	.\CL\cl.hpp	/^struct ReferenceHandler<cl_event>$/;"	s	namespace:cl::detail
ReferenceHandler	.\CL\cl.hpp	/^struct ReferenceHandler<cl_kernel>$/;"	s	namespace:cl::detail
ReferenceHandler	.\CL\cl.hpp	/^struct ReferenceHandler<cl_mem>$/;"	s	namespace:cl::detail
ReferenceHandler	.\CL\cl.hpp	/^struct ReferenceHandler<cl_platform_id>$/;"	s	namespace:cl::detail
ReferenceHandler	.\CL\cl.hpp	/^struct ReferenceHandler<cl_program>$/;"	s	namespace:cl::detail
ReferenceHandler	.\CL\cl.hpp	/^struct ReferenceHandler<cl_sampler>$/;"	s	namespace:cl::detail
SDKAPPLICATION_H_	.\SDKUtil\include\SDKApplication.hpp	7;"	d
SDKApplication	.\SDKUtil\include\SDKApplication.hpp	/^class SDKApplication$/;"	c
SDKBITMAP_H_	.\SDKUtil\include\SDKBitMap.hpp	2;"	d
SDKBitMap	.\SDKUtil\include\SDKBitMap.hpp	/^    SDKBitMap()$/;"	f	class:streamsdk::SDKBitMap
SDKBitMap	.\SDKUtil\include\SDKBitMap.hpp	/^    SDKBitMap(const SDKBitMap& rhs)$/;"	f	class:streamsdk::SDKBitMap
SDKBitMap	.\SDKUtil\include\SDKBitMap.hpp	/^    SDKBitMap(const char * filename)$/;"	f	class:streamsdk::SDKBitMap
SDKBitMap	.\SDKUtil\include\SDKBitMap.hpp	/^class SDKBitMap : public BitMapHeader, public BitMapInfoHeader$/;"	c	namespace:streamsdk
SDKCOMMANDARGS_HPP_	.\SDKUtil\include\SDKCommandArgs.hpp	2;"	d
SDKCOMMON_HPP_	.\SDKUtil\include\SDKCommon.hpp	2;"	d
SDKCmdArgsParser	.\SDKUtil\SDKUtil.hpp	/^        SDKCmdArgsParser (void)$/;"	f	class:appsdk::SDKCmdArgsParser
SDKCmdArgsParser	.\SDKUtil\SDKUtil.hpp	/^class SDKCmdArgsParser$/;"	c	namespace:appsdk
SDKCommandArgs	.\SDKUtil\include\SDKCommandArgs.hpp	/^			SDKCommandArgs(int numArgs,Option * options) $/;"	f	class:streamsdk::SDKCommandArgs
SDKCommandArgs	.\SDKUtil\include\SDKCommandArgs.hpp	/^			SDKCommandArgs(void)$/;"	f	class:streamsdk::SDKCommandArgs
SDKCommandArgs	.\SDKUtil\include\SDKCommandArgs.hpp	/^	class SDKCommandArgs$/;"	c	namespace:streamsdk
SDKCommon	.\SDKUtil\SDKCommon.cpp	/^SDKCommon::SDKCommon()$/;"	f	class:streamsdk::SDKCommon
SDKCommon	.\SDKUtil\include\SDKCommon.hpp	/^	class SDKCommon$/;"	c	namespace:streamsdk
SDKDeviceInfo	.\SDKUtil\CLUtil.hpp	/^        SDKDeviceInfo()$/;"	f	class:appsdk::SDKDeviceInfo
SDKDeviceInfo	.\SDKUtil\CLUtil.hpp	/^class SDKDeviceInfo$/;"	c	namespace:appsdk
SDKDeviceInfo	.\SDKUtil\include\SDKCommon.hpp	/^		SDKDeviceInfo()$/;"	f	class:streamsdk::SDKDeviceInfo
SDKDeviceInfo	.\SDKUtil\include\SDKCommon.hpp	/^	class SDKDeviceInfo$/;"	c	namespace:streamsdk
SDKFILE_HPP_	.\SDKUtil\SDKFile.hpp	17;"	d
SDKFILE_HPP_	.\SDKUtil\include\SDKFile.hpp	2;"	d
SDKFile	.\SDKUtil\SDKFile.hpp	/^        SDKFile(): source_("") {}$/;"	f	class:appsdk::SDKFile
SDKFile	.\SDKUtil\SDKFile.hpp	/^class SDKFile$/;"	c	namespace:appsdk
SDKFile	.\SDKUtil\include\SDKFile.hpp	/^    SDKFile(): source_(""){}$/;"	f	class:streamsdk::SDKFile
SDKFile	.\SDKUtil\include\SDKFile.hpp	/^class SDKFile$/;"	c	namespace:streamsdk
SDKSample	.\SDKUtil\SDKApplication.cpp	/^SDKSample::SDKSample(const char* sampleName, bool enableMultiDevice)$/;"	f	class:SDKSample
SDKSample	.\SDKUtil\SDKApplication.cpp	/^SDKSample::SDKSample(std::string sampleName, bool enableMultiDevice)$/;"	f	class:SDKSample
SDKSample	.\SDKUtil\include\SDKApplication.hpp	/^class SDKSample : public SDKApplication$/;"	c
SDKThread	.\SDKUtil\SDKThread.cpp	/^    SDKThread::SDKThread() : _tid(0), _data(0)$/;"	f	class:streamsdk::SDKThread
SDKThread	.\SDKUtil\include\SDKThread.hpp	/^	class EXPORT SDKThread$/;"	c	namespace:streamsdk
SDKTimer	.\SDKUtil\SDKUtil.hpp	/^        SDKTimer()$/;"	f	class:appsdk::SDKTimer
SDKTimer	.\SDKUtil\SDKUtil.hpp	/^class SDKTimer$/;"	c	namespace:appsdk
SDKUTIL_HPP_	.\SDKUtil\SDKUtil.hpp	19;"	d
SDK_EXPECTED_FAILURE	.\SDKUtil\SDKUtil.hpp	67;"	d
SDK_EXPECTED_FAILURE	.\SDKUtil\include\SDKCommon.hpp	58;"	d
SDK_FAILURE	.\SDKUtil\SDKUtil.hpp	66;"	d
SDK_FAILURE	.\SDKUtil\include\SDKCommon.hpp	57;"	d
SDK_SUCCESS	.\SDKUtil\SDKUtil.hpp	65;"	d
SDK_SUCCESS	.\SDKUtil\include\SDKCommon.hpp	56;"	d
SDK_VERSION_BUILD	.\SDKUtil\SDKUtil.hpp	72;"	d
SDK_VERSION_BUILD	.\SDKUtil\include\SDKCommon.hpp	62;"	d
SDK_VERSION_MAJOR	.\SDKUtil\SDKUtil.hpp	69;"	d
SDK_VERSION_MAJOR	.\SDKUtil\include\SDKCommon.hpp	60;"	d
SDK_VERSION_MINOR	.\SDKUtil\SDKUtil.hpp	70;"	d
SDK_VERSION_MINOR	.\SDKUtil\include\SDKCommon.hpp	61;"	d
SDK_VERSION_REVISION	.\SDKUtil\SDKUtil.hpp	73;"	d
SDK_VERSION_REVISION	.\SDKUtil\include\SDKCommon.hpp	63;"	d
SDK_VERSION_SUB_MINOR	.\SDKUtil\SDKUtil.hpp	71;"	d
STRING_CLASS	.\CL\cl.hpp	/^typedef cl::string STRING_CLASS;$/;"	t	namespace:cl
STRING_CLASS	.\CL\cl.hpp	/^typedef std::string STRING_CLASS;$/;"	t	namespace:cl
Sampler	.\CL\cl.hpp	/^    Sampler($/;"	f	class:cl::Sampler
Sampler	.\CL\cl.hpp	/^    Sampler() { }$/;"	f	class:cl::Sampler
Sampler	.\CL\cl.hpp	/^    Sampler(const Sampler& sampler) : detail::Wrapper<cl_type>(sampler) { }$/;"	f	class:cl::Sampler
Sampler	.\CL\cl.hpp	/^    Sampler(const cl_sampler& sampler) : detail::Wrapper<cl_type>(sampler) { }$/;"	f	class:cl::Sampler
Sampler	.\CL\cl.hpp	/^class Sampler : public detail::Wrapper<cl_sampler>$/;"	c	namespace:cl
SetArg	.\CL\cl.hpp	/^struct SetArg$/;"	s	namespace:cl::detail
SetArg	.\CL\cl.hpp	/^struct SetArg<index, NullType>$/;"	s	namespace:cl::detail
Sources	.\CL\cl.hpp	/^    typedef VECTOR_CLASS<std::pair<const char*, ::size_t> > Sources;$/;"	t	class:cl::Program
Table	.\SDKUtil\include\SDKCommon.hpp	/^	struct Table$/;"	s	namespace:streamsdk
ThreadLock	.\SDKUtil\SDKThread.cpp	/^    ThreadLock::ThreadLock()$/;"	f	class:streamsdk::ThreadLock
ThreadLock	.\SDKUtil\include\SDKThread.hpp	/^	class EXPORT ThreadLock$/;"	c	namespace:streamsdk
Timer	.\SDKUtil\SDKUtil.hpp	/^        struct Timer$/;"	s	class:appsdk::SDKTimer
Timer	.\SDKUtil\include\SDKCommon.hpp	/^	struct Timer$/;"	s	namespace:streamsdk
UNUSED	.\SDKUtil\CLUtil.hpp	55;"	d
UnloadCompiler	.\CL\cl.hpp	/^UnloadCompiler()$/;"	f	namespace:cl
UserEvent	.\CL\cl.hpp	/^    UserEvent($/;"	f	class:cl::UserEvent
UserEvent	.\CL\cl.hpp	/^    UserEvent() : Event() { }$/;"	f	class:cl::UserEvent
UserEvent	.\CL\cl.hpp	/^    UserEvent(const UserEvent& event) : Event(event) { }$/;"	f	class:cl::UserEvent
UserEvent	.\CL\cl.hpp	/^class UserEvent : public Event$/;"	c	namespace:cl
VECTOR_CLASS	.\CL\cl.hpp	645;"	d
VECTOR_CLASS	.\CL\cl.hpp	647;"	d
WaitForEvents	.\CL\cl.hpp	/^WaitForEvents(const VECTOR_CLASS<Event>& events)$/;"	f	namespace:cl
Wrapper	.\CL\cl.hpp	/^    Wrapper() : object_(NULL) { }$/;"	f	class:cl::detail::Wrapper
Wrapper	.\CL\cl.hpp	/^    Wrapper() : object_(NULL), referenceCountable_(false) $/;"	f	class:cl::detail::Wrapper
Wrapper	.\CL\cl.hpp	/^    Wrapper(const Wrapper<cl_type>& rhs)$/;"	f	class:cl::detail::Wrapper
Wrapper	.\CL\cl.hpp	/^    Wrapper(const cl_type &obj) : object_(obj) { }$/;"	f	class:cl::detail::Wrapper
Wrapper	.\CL\cl.hpp	/^    Wrapper(const cl_type &obj) : object_(obj), referenceCountable_(false) $/;"	f	class:cl::detail::Wrapper
Wrapper	.\CL\cl.hpp	/^class Wrapper$/;"	c	namespace:cl::detail
Wrapper	.\CL\cl.hpp	/^class Wrapper<cl_device_id>$/;"	c	namespace:cl::detail
_CL_STRINGIFY	.\CL\cl_platform.h	1164;"	d
_SDK_THREAD_H	.\SDKUtil\include\SDKThread.hpp	2;"	d
_WIN32_WINNT	.\SDKUtil\include\SDKThread.hpp	6;"	d
__BUILD_PROGRAM_ERR	.\CL\cl.hpp	12168;"	d
__BUILD_PROGRAM_ERR	.\CL\cl.hpp	386;"	d
__CL_CHAR16__	.\CL\cl_platform.h	260;"	d
__CL_CHAR16__	.\CL\cl_platform.h	310;"	d
__CL_CHAR8__	.\CL\cl_platform.h	344;"	d
__CL_DECLARE_PARAM_TRAITS	.\CL\cl.hpp	/^__PARAM_NAME_DEVICE_FISSION(__CL_DECLARE_PARAM_TRAITS);$/;"	v
__CL_DECLARE_PARAM_TRAITS	.\CL\cl.hpp	1402;"	d
__CL_DOUBLE2__	.\CL\cl_platform.h	317;"	d
__CL_DOUBLE4__	.\CL\cl_platform.h	368;"	d
__CL_EXPLICIT_CONSTRUCTORS	.\CL\cl.hpp	12191;"	d
__CL_EXPLICIT_CONSTRUCTORS	.\CL\cl.hpp	183;"	d
__CL_EXPLICIT_CONSTRUCTORS	.\CL\cl.hpp	185;"	d
__CL_EXT_H	.\CL\cl_ext.h	30;"	d
__CL_FLOAT2__	.\CL\cl_platform.h	351;"	d
__CL_FLOAT4__	.\CL\cl_platform.h	265;"	d
__CL_FLOAT4__	.\CL\cl_platform.h	279;"	d
__CL_FLOAT8__	.\CL\cl_platform.h	367;"	d
__CL_FUNCTION_TYPE	.\CL\cl.hpp	12198;"	d
__CL_INT2__	.\CL\cl_platform.h	347;"	d
__CL_INT4__	.\CL\cl_platform.h	264;"	d
__CL_INT4__	.\CL\cl_platform.h	313;"	d
__CL_LONG1__	.\CL\cl_platform.h	350;"	d
__CL_LONG2__	.\CL\cl_platform.h	316;"	d
__CL_PLATFORM_H	.\CL\cl_platform.h	27;"	d
__CL_SHORT4__	.\CL\cl_platform.h	346;"	d
__CL_SHORT8__	.\CL\cl_platform.h	262;"	d
__CL_SHORT8__	.\CL\cl_platform.h	312;"	d
__CL_STRINGIFY	.\CL\cl_platform.h	1163;"	d
__CL_UCHAR16__	.\CL\cl_platform.h	259;"	d
__CL_UCHAR16__	.\CL\cl_platform.h	309;"	d
__CL_UCHAR8__	.\CL\cl_platform.h	343;"	d
__CL_UINT2__	.\CL\cl_platform.h	348;"	d
__CL_UINT4__	.\CL\cl_platform.h	263;"	d
__CL_UINT4__	.\CL\cl_platform.h	314;"	d
__CL_ULONG1__	.\CL\cl_platform.h	349;"	d
__CL_ULONG2__	.\CL\cl_platform.h	315;"	d
__CL_USHORT4__	.\CL\cl_platform.h	345;"	d
__CL_USHORT8__	.\CL\cl_platform.h	261;"	d
__CL_USHORT8__	.\CL\cl_platform.h	311;"	d
__COMPILE_PROGRAM_ERR	.\CL\cl.hpp	388;"	d
__COPY_ERR	.\CL\cl.hpp	361;"	d
__CREATE_BUFFER_ERR	.\CL\cl.hpp	12149;"	d
__CREATE_BUFFER_ERR	.\CL\cl.hpp	360;"	d
__CREATE_COMMAND_QUEUE_ERR	.\CL\cl.hpp	12171;"	d
__CREATE_COMMAND_QUEUE_ERR	.\CL\cl.hpp	393;"	d
__CREATE_CONTEXT_ERR	.\CL\cl.hpp	12145;"	d
__CREATE_CONTEXT_ERR	.\CL\cl.hpp	356;"	d
__CREATE_CONTEXT_FROM_TYPE_ERR	.\CL\cl.hpp	12146;"	d
__CREATE_CONTEXT_FROM_TYPE_ERR	.\CL\cl.hpp	357;"	d
__CREATE_GL_BUFFER_ERR	.\CL\cl.hpp	363;"	d
__CREATE_GL_RENDER_BUFFER_ERR	.\CL\cl.hpp	364;"	d
__CREATE_GL_TEXTURE_2D_ERR	.\CL\cl.hpp	445;"	d
__CREATE_GL_TEXTURE_3D_ERR	.\CL\cl.hpp	446;"	d
__CREATE_GL_TEXTURE_ERR	.\CL\cl.hpp	368;"	d
__CREATE_IMAGE2D_ERR	.\CL\cl.hpp	12151;"	d
__CREATE_IMAGE2D_ERR	.\CL\cl.hpp	447;"	d
__CREATE_IMAGE3D_ERR	.\CL\cl.hpp	12152;"	d
__CREATE_IMAGE3D_ERR	.\CL\cl.hpp	448;"	d
__CREATE_IMAGE_ERR	.\CL\cl.hpp	367;"	d
__CREATE_KERNELS_IN_PROGRAM_ERR	.\CL\cl.hpp	12169;"	d
__CREATE_KERNELS_IN_PROGRAM_ERR	.\CL\cl.hpp	391;"	d
__CREATE_KERNEL_ERR	.\CL\cl.hpp	12163;"	d
__CREATE_KERNEL_ERR	.\CL\cl.hpp	379;"	d
__CREATE_PROGRAM_WITH_BINARY_ERR	.\CL\cl.hpp	12166;"	d
__CREATE_PROGRAM_WITH_BINARY_ERR	.\CL\cl.hpp	382;"	d
__CREATE_PROGRAM_WITH_BUILT_IN_KERNELS_ERR	.\CL\cl.hpp	12167;"	d
__CREATE_PROGRAM_WITH_BUILT_IN_KERNELS_ERR	.\CL\cl.hpp	384;"	d
__CREATE_PROGRAM_WITH_SOURCE_ERR	.\CL\cl.hpp	12165;"	d
__CREATE_PROGRAM_WITH_SOURCE_ERR	.\CL\cl.hpp	381;"	d
__CREATE_SAMPLER_ERR	.\CL\cl.hpp	12153;"	d
__CREATE_SAMPLER_ERR	.\CL\cl.hpp	371;"	d
__CREATE_SUBBUFFER_ERR	.\CL\cl.hpp	12150;"	d
__CREATE_SUBBUFFER_ERR	.\CL\cl.hpp	362;"	d
__CREATE_SUB_DEVICES	.\CL\cl.hpp	12207;"	d
__CREATE_SUB_DEVICES	.\CL\cl.hpp	432;"	d
__CREATE_SUB_DEVICES	.\CL\cl.hpp	434;"	d
__CREATE_USER_EVENT_ERR	.\CL\cl.hpp	12156;"	d
__CREATE_USER_EVENT_ERR	.\CL\cl.hpp	374;"	d
__DEFAULT_BEING_INITIALIZED	.\CL\cl.hpp	1015;"	d
__DEFAULT_BEING_INITIALIZED	.\CL\cl.hpp	12214;"	d
__DEFAULT_INITIALIZED	.\CL\cl.hpp	1016;"	d
__DEFAULT_INITIALIZED	.\CL\cl.hpp	12215;"	d
__DEFAULT_NOT_INITIALIZED	.\CL\cl.hpp	1014;"	d
__DEFAULT_NOT_INITIALIZED	.\CL\cl.hpp	12213;"	d
__ENQEUE_COPY_BUFFER_ERR	.\CL\cl.hpp	12177;"	d
__ENQEUE_COPY_BUFFER_ERR	.\CL\cl.hpp	399;"	d
__ENQEUE_COPY_BUFFER_RECT_ERR	.\CL\cl.hpp	12178;"	d
__ENQEUE_COPY_BUFFER_RECT_ERR	.\CL\cl.hpp	400;"	d
__ENQUEUE_ACQUIRE_GL_ERR	.\CL\cl.hpp	418;"	d
__ENQUEUE_BARRIER_ERR	.\CL\cl.hpp	443;"	d
__ENQUEUE_BARRIER_WAIT_LIST_ERR	.\CL\cl.hpp	459;"	d
__ENQUEUE_COPY_BUFFER_TO_IMAGE_ERR	.\CL\cl.hpp	12183;"	d
__ENQUEUE_COPY_BUFFER_TO_IMAGE_ERR	.\CL\cl.hpp	407;"	d
__ENQUEUE_COPY_IMAGE_ERR	.\CL\cl.hpp	12181;"	d
__ENQUEUE_COPY_IMAGE_ERR	.\CL\cl.hpp	404;"	d
__ENQUEUE_COPY_IMAGE_TO_BUFFER_ERR	.\CL\cl.hpp	12182;"	d
__ENQUEUE_COPY_IMAGE_TO_BUFFER_ERR	.\CL\cl.hpp	406;"	d
__ENQUEUE_FILL_BUFFER_ERR	.\CL\cl.hpp	401;"	d
__ENQUEUE_FILL_IMAGE_ERR	.\CL\cl.hpp	405;"	d
__ENQUEUE_MAP_BUFFER_ERR	.\CL\cl.hpp	12184;"	d
__ENQUEUE_MAP_BUFFER_ERR	.\CL\cl.hpp	408;"	d
__ENQUEUE_MAP_IMAGE_ERR	.\CL\cl.hpp	12185;"	d
__ENQUEUE_MAP_IMAGE_ERR	.\CL\cl.hpp	409;"	d
__ENQUEUE_MARKER_ERR	.\CL\cl.hpp	441;"	d
__ENQUEUE_MARKER_WAIT_LIST_ERR	.\CL\cl.hpp	458;"	d
__ENQUEUE_MIGRATE_MEM_OBJECTS_ERR	.\CL\cl.hpp	415;"	d
__ENQUEUE_NATIVE_KERNEL	.\CL\cl.hpp	12189;"	d
__ENQUEUE_NATIVE_KERNEL	.\CL\cl.hpp	413;"	d
__ENQUEUE_NDRANGE_KERNEL_ERR	.\CL\cl.hpp	12187;"	d
__ENQUEUE_NDRANGE_KERNEL_ERR	.\CL\cl.hpp	411;"	d
__ENQUEUE_READ_BUFFER_ERR	.\CL\cl.hpp	12173;"	d
__ENQUEUE_READ_BUFFER_ERR	.\CL\cl.hpp	395;"	d
__ENQUEUE_READ_BUFFER_RECT_ERR	.\CL\cl.hpp	12175;"	d
__ENQUEUE_READ_BUFFER_RECT_ERR	.\CL\cl.hpp	396;"	d
__ENQUEUE_READ_IMAGE_ERR	.\CL\cl.hpp	12179;"	d
__ENQUEUE_READ_IMAGE_ERR	.\CL\cl.hpp	402;"	d
__ENQUEUE_RELEASE_GL_ERR	.\CL\cl.hpp	419;"	d
__ENQUEUE_TASK_ERR	.\CL\cl.hpp	12188;"	d
__ENQUEUE_TASK_ERR	.\CL\cl.hpp	412;"	d
__ENQUEUE_UNMAP_MEM_OBJECT_ERR	.\CL\cl.hpp	12186;"	d
__ENQUEUE_UNMAP_MEM_OBJECT_ERR	.\CL\cl.hpp	410;"	d
__ENQUEUE_WAIT_FOR_EVENTS_ERR	.\CL\cl.hpp	442;"	d
__ENQUEUE_WRITE_BUFFER_ERR	.\CL\cl.hpp	12174;"	d
__ENQUEUE_WRITE_BUFFER_ERR	.\CL\cl.hpp	397;"	d
__ENQUEUE_WRITE_BUFFER_RECT_ERR	.\CL\cl.hpp	12176;"	d
__ENQUEUE_WRITE_BUFFER_RECT_ERR	.\CL\cl.hpp	398;"	d
__ENQUEUE_WRITE_IMAGE_ERR	.\CL\cl.hpp	12180;"	d
__ENQUEUE_WRITE_IMAGE_ERR	.\CL\cl.hpp	403;"	d
__ERR_STR	.\CL\cl.hpp	12127;"	d
__ERR_STR	.\CL\cl.hpp	306;"	d
__ERR_STR	.\CL\cl.hpp	308;"	d
__FINISH_ERR	.\CL\cl.hpp	425;"	d
__FLUSH_ERR	.\CL\cl.hpp	424;"	d
__GET_COMMAND_QUEUE_INFO_ERR	.\CL\cl.hpp	12143;"	d
__GET_COMMAND_QUEUE_INFO_ERR	.\CL\cl.hpp	354;"	d
__GET_CONTEXT_INFO_ERR	.\CL\cl.hpp	12132;"	d
__GET_CONTEXT_INFO_ERR	.\CL\cl.hpp	341;"	d
__GET_DEVICE_IDS_ERR	.\CL\cl.hpp	12131;"	d
__GET_DEVICE_IDS_ERR	.\CL\cl.hpp	339;"	d
__GET_DEVICE_INFO_ERR	.\CL\cl.hpp	12129;"	d
__GET_DEVICE_INFO_ERR	.\CL\cl.hpp	337;"	d
__GET_EVENT_INFO_ERR	.\CL\cl.hpp	12133;"	d
__GET_EVENT_INFO_ERR	.\CL\cl.hpp	342;"	d
__GET_EVENT_PROFILE_INFO_ERR	.\CL\cl.hpp	12134;"	d
__GET_EVENT_PROFILE_INFO_ERR	.\CL\cl.hpp	343;"	d
__GET_GL_OBJECT_INFO_ERR	.\CL\cl.hpp	365;"	d
__GET_IMAGE_INFO_ERR	.\CL\cl.hpp	12136;"	d
__GET_IMAGE_INFO_ERR	.\CL\cl.hpp	345;"	d
__GET_INFO_HELPER_WITH_RETAIN	.\CL\cl.hpp	1202;"	d
__GET_INFO_HELPER_WITH_RETAIN	.\CL\cl.hpp	12196;"	d
__GET_KERNEL_ARG_INFO_ERR	.\CL\cl.hpp	12139;"	d
__GET_KERNEL_ARG_INFO_ERR	.\CL\cl.hpp	349;"	d
__GET_KERNEL_INFO_ERR	.\CL\cl.hpp	12138;"	d
__GET_KERNEL_INFO_ERR	.\CL\cl.hpp	347;"	d
__GET_KERNEL_WORK_GROUP_INFO_ERR	.\CL\cl.hpp	12140;"	d
__GET_KERNEL_WORK_GROUP_INFO_ERR	.\CL\cl.hpp	351;"	d
__GET_MEM_OBJECT_INFO_ERR	.\CL\cl.hpp	12135;"	d
__GET_MEM_OBJECT_INFO_ERR	.\CL\cl.hpp	344;"	d
__GET_PLATFORM_IDS_ERR	.\CL\cl.hpp	340;"	d
__GET_PLATFORM_INFO_ERR	.\CL\cl.hpp	12130;"	d
__GET_PLATFORM_INFO_ERR	.\CL\cl.hpp	338;"	d
__GET_PROGRAM_BUILD_INFO_ERR	.\CL\cl.hpp	12142;"	d
__GET_PROGRAM_BUILD_INFO_ERR	.\CL\cl.hpp	353;"	d
__GET_PROGRAM_INFO_ERR	.\CL\cl.hpp	12141;"	d
__GET_PROGRAM_INFO_ERR	.\CL\cl.hpp	352;"	d
__GET_SAMPLER_INFO_ERR	.\CL\cl.hpp	12137;"	d
__GET_SAMPLER_INFO_ERR	.\CL\cl.hpp	346;"	d
__GET_SUPPORTED_IMAGE_FORMATS_ERR	.\CL\cl.hpp	12147;"	d
__GET_SUPPORTED_IMAGE_FORMATS_ERR	.\CL\cl.hpp	358;"	d
__IMAGE_DIMENSION_ERR	.\CL\cl.hpp	369;"	d
__INIT_CL_EXT_FCN_PTR	.\CL\cl.hpp	12205;"	d
__INIT_CL_EXT_FCN_PTR	.\CL\cl.hpp	235;"	d
__INIT_CL_EXT_FCN_PTR_PLATFORM	.\CL\cl.hpp	245;"	d
__MAX_DEFAULT_VECTOR_SIZE	.\CL\cl.hpp	650;"	d
__OPENCL_CL_D3D10_H	.\CL\cl_d3d10.h	27;"	d
__OPENCL_CL_D3D11_H	.\CL\cl_d3d11.h	27;"	d
__OPENCL_CL_DX9_MEDIA_SHARING_H	.\CL\cl_dx9_media_sharing.h	27;"	d
__OPENCL_CL_GL_EXT_H	.\CL\cl_gl_ext.h	30;"	d
__OPENCL_CL_GL_H	.\CL\cl_gl.h	25;"	d
__OPENCL_CL_H	.\CL\cl.h	25;"	d
__OPENCL_H	.\CL\opencl.h	27;"	d
__PARAM_NAME_DEVICE_FISSION	.\CL\cl.hpp	12210;"	d
__PARAM_NAME_DEVICE_FISSION	.\CL\cl.hpp	1391;"	d
__PARAM_NAME_INFO_1_0	.\CL\cl.hpp	1220;"	d
__PARAM_NAME_INFO_1_1	.\CL\cl.hpp	1342;"	d
__PARAM_NAME_INFO_1_2	.\CL\cl.hpp	1368;"	d
__RELEASE_ERR	.\CL\cl.hpp	423;"	d
__RETAIN_ERR	.\CL\cl.hpp	422;"	d
__SET_COMMAND_QUEUE_PROPERTY_ERR	.\CL\cl.hpp	12172;"	d
__SET_COMMAND_QUEUE_PROPERTY_ERR	.\CL\cl.hpp	394;"	d
__SET_EVENT_CALLBACK_ERR	.\CL\cl.hpp	12158;"	d
__SET_EVENT_CALLBACK_ERR	.\CL\cl.hpp	376;"	d
__SET_KERNEL_ARGS_ERR	.\CL\cl.hpp	12164;"	d
__SET_KERNEL_ARGS_ERR	.\CL\cl.hpp	380;"	d
__SET_MEM_OBJECT_DESTRUCTOR_CALLBACK_ERR	.\CL\cl.hpp	12154;"	d
__SET_MEM_OBJECT_DESTRUCTOR_CALLBACK_ERR	.\CL\cl.hpp	372;"	d
__SET_PRINTF_CALLBACK_ERR	.\CL\cl.hpp	12159;"	d
__SET_USER_EVENT_STATUS_ERR	.\CL\cl.hpp	12157;"	d
__SET_USER_EVENT_STATUS_ERR	.\CL\cl.hpp	375;"	d
__UNLOAD_COMPILER_ERR	.\CL\cl.hpp	12193;"	d
__UNLOAD_COMPILER_ERR	.\CL\cl.hpp	444;"	d
__VECTOR_CAPACITY_ERR	.\CL\cl.hpp	426;"	d
__WAIT_FOR_EVENTS_ERR	.\CL\cl.hpp	12161;"	d
__WAIT_FOR_EVENTS_ERR	.\CL\cl.hpp	377;"	d
__argsToThreadFunc	.\SDKUtil\SDKThread.cpp	/^    typedef struct __argsToThreadFunc$/;"	s	namespace:streamsdk	file:
__cl_char16	.\CL\cl_platform.h	/^        typedef __m128i __cl_char16;$/;"	t
__cl_char16	.\CL\cl_platform.h	/^        typedef cl_char     __cl_char16     __attribute__((vector_size(16)));$/;"	t
__cl_char16	.\CL\cl_platform.h	/^   typedef vector signed char       __cl_char16;$/;"	t
__cl_char8	.\CL\cl_platform.h	/^        typedef __m64       __cl_char8;$/;"	t
__cl_char8	.\CL\cl_platform.h	/^        typedef cl_char     __cl_char8      __attribute__((vector_size(8)));$/;"	t
__cl_double2	.\CL\cl_platform.h	/^        typedef __m128d __cl_double2;$/;"	t
__cl_double2	.\CL\cl_platform.h	/^        typedef cl_double   __cl_double2    __attribute__((vector_size(16)));$/;"	t
__cl_double4	.\CL\cl_platform.h	/^        typedef __m256d     __cl_double4;$/;"	t
__cl_double4	.\CL\cl_platform.h	/^        typedef cl_double   __cl_double4    __attribute__((vector_size(32)));$/;"	t
__cl_float2	.\CL\cl_platform.h	/^        typedef __m64       __cl_float2;$/;"	t
__cl_float2	.\CL\cl_platform.h	/^        typedef cl_float    __cl_float2     __attribute__((vector_size(8)));$/;"	t
__cl_float4	.\CL\cl_platform.h	/^        typedef __m128 __cl_float4;$/;"	t
__cl_float4	.\CL\cl_platform.h	/^        typedef float __cl_float4   __attribute__((vector_size(16)));$/;"	t
__cl_float4	.\CL\cl_platform.h	/^   typedef vector float             __cl_float4;$/;"	t
__cl_float8	.\CL\cl_platform.h	/^        typedef __m256      __cl_float8;$/;"	t
__cl_float8	.\CL\cl_platform.h	/^        typedef cl_float    __cl_float8     __attribute__((vector_size(32)));$/;"	t
__cl_int2	.\CL\cl_platform.h	/^        typedef __m64       __cl_int2;$/;"	t
__cl_int2	.\CL\cl_platform.h	/^        typedef cl_int      __cl_int2       __attribute__((vector_size(8)));$/;"	t
__cl_int4	.\CL\cl_platform.h	/^        typedef __m128i __cl_int4;$/;"	t
__cl_int4	.\CL\cl_platform.h	/^        typedef cl_int      __cl_int4       __attribute__((vector_size(16)));$/;"	t
__cl_int4	.\CL\cl_platform.h	/^   typedef vector signed int        __cl_int4;$/;"	t
__cl_long1	.\CL\cl_platform.h	/^        typedef __m64       __cl_long1;$/;"	t
__cl_long1	.\CL\cl_platform.h	/^        typedef cl_long     __cl_long1      __attribute__((vector_size(8)));$/;"	t
__cl_long2	.\CL\cl_platform.h	/^        typedef __m128i __cl_long2;$/;"	t
__cl_long2	.\CL\cl_platform.h	/^        typedef cl_long     __cl_long2      __attribute__((vector_size(16)));$/;"	t
__cl_short4	.\CL\cl_platform.h	/^        typedef __m64       __cl_short4;$/;"	t
__cl_short4	.\CL\cl_platform.h	/^        typedef cl_short    __cl_short4     __attribute__((vector_size(8)));$/;"	t
__cl_short8	.\CL\cl_platform.h	/^        typedef __m128i __cl_short8;$/;"	t
__cl_short8	.\CL\cl_platform.h	/^        typedef cl_short    __cl_short8     __attribute__((vector_size(16)));$/;"	t
__cl_short8	.\CL\cl_platform.h	/^   typedef vector signed short      __cl_short8;$/;"	t
__cl_uchar16	.\CL\cl_platform.h	/^        typedef __m128i __cl_uchar16;$/;"	t
__cl_uchar16	.\CL\cl_platform.h	/^        typedef cl_uchar    __cl_uchar16    __attribute__((vector_size(16)));$/;"	t
__cl_uchar16	.\CL\cl_platform.h	/^   typedef vector unsigned char     __cl_uchar16;$/;"	t
__cl_uchar8	.\CL\cl_platform.h	/^        typedef __m64       __cl_uchar8;$/;"	t
__cl_uchar8	.\CL\cl_platform.h	/^        typedef cl_uchar    __cl_uchar8     __attribute__((vector_size(8)));$/;"	t
__cl_uint2	.\CL\cl_platform.h	/^        typedef __m64       __cl_uint2;$/;"	t
__cl_uint2	.\CL\cl_platform.h	/^        typedef cl_uint     __cl_uint2      __attribute__((vector_size(8)));$/;"	t
__cl_uint4	.\CL\cl_platform.h	/^        typedef __m128i __cl_uint4;$/;"	t
__cl_uint4	.\CL\cl_platform.h	/^        typedef cl_uint     __cl_uint4      __attribute__((vector_size(16)));$/;"	t
__cl_uint4	.\CL\cl_platform.h	/^   typedef vector unsigned int      __cl_uint4;$/;"	t
__cl_ulong1	.\CL\cl_platform.h	/^        typedef __m64       __cl_ulong1;$/;"	t
__cl_ulong1	.\CL\cl_platform.h	/^        typedef cl_ulong    __cl_ulong1     __attribute__((vector_size(8)));$/;"	t
__cl_ulong2	.\CL\cl_platform.h	/^        typedef __m128i __cl_ulong2;$/;"	t
__cl_ulong2	.\CL\cl_platform.h	/^        typedef cl_ulong    __cl_ulong2     __attribute__((vector_size(16)));$/;"	t
__cl_ushort4	.\CL\cl_platform.h	/^        typedef __m64       __cl_ushort4;$/;"	t
__cl_ushort4	.\CL\cl_platform.h	/^        typedef cl_ushort   __cl_ushort4    __attribute__((vector_size(8)));$/;"	t
__cl_ushort8	.\CL\cl_platform.h	/^        typedef __m128i __cl_ushort8;$/;"	t
__cl_ushort8	.\CL\cl_platform.h	/^        typedef cl_ushort   __cl_ushort8    __attribute__((vector_size(16)));$/;"	t
__cl_ushort8	.\CL\cl_platform.h	/^   typedef vector unsigned short    __cl_ushort8;$/;"	t
__local	.\CL\cl.hpp	/^__local(::size_t size)$/;"	f	namespace:cl
__spacer4	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon17::__anon18
__spacer4	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon161::__anon162
__spacer4	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon145::__anon146
__spacer4	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon81::__anon82
__spacer4	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon113::__anon114
__spacer4	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon49::__anon50
__spacer4	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon33::__anon34
__spacer4	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon97::__anon98
__spacer4	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon129::__anon130
__spacer4	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon65::__anon66
__spacer5	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon17::__anon18
__spacer5	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon161::__anon162
__spacer5	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon145::__anon146
__spacer5	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon81::__anon82
__spacer5	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon113::__anon114
__spacer5	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon49::__anon50
__spacer5	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon33::__anon34
__spacer5	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon97::__anon98
__spacer5	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon129::__anon130
__spacer5	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon65::__anon66
__spacer6	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon17::__anon18
__spacer6	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon161::__anon162
__spacer6	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon145::__anon146
__spacer6	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon81::__anon82
__spacer6	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon113::__anon114
__spacer6	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon49::__anon50
__spacer6	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon33::__anon34
__spacer6	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon97::__anon98
__spacer6	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon129::__anon130
__spacer6	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon65::__anon66
__spacer7	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon17::__anon18
__spacer7	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon161::__anon162
__spacer7	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon145::__anon146
__spacer7	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon81::__anon82
__spacer7	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon113::__anon114
__spacer7	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon49::__anon50
__spacer7	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon33::__anon34
__spacer7	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon97::__anon98
__spacer7	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon129::__anon130
__spacer7	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon65::__anon66
__spacer8	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon17::__anon18
__spacer8	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon161::__anon162
__spacer8	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon145::__anon146
__spacer8	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon81::__anon82
__spacer8	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon113::__anon114
__spacer8	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon49::__anon50
__spacer8	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon33::__anon34
__spacer8	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon97::__anon98
__spacer8	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon129::__anon130
__spacer8	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon65::__anon66
__spacer9	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon17::__anon18
__spacer9	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon161::__anon162
__spacer9	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon145::__anon146
__spacer9	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon81::__anon82
__spacer9	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon113::__anon114
__spacer9	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon49::__anon50
__spacer9	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon33::__anon34
__spacer9	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon97::__anon98
__spacer9	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon129::__anon130
__spacer9	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon65::__anon66
_aligned_free	.\SDKUtil\SDKUtil.hpp	44;"	d
_aligned_free	.\SDKUtil\include\SDKCommon.hpp	33;"	d
_aligned_malloc	.\SDKUtil\SDKUtil.hpp	43;"	d
_aligned_malloc	.\SDKUtil\include\SDKCommon.hpp	32;"	d
_argc	.\SDKUtil\SDKUtil.hpp	/^        int _argc;                  \/**< number of arguments *\/$/;"	m	class:appsdk::SDKCmdArgsParser
_argc	.\SDKUtil\include\SDKCommandArgs.hpp	/^			int _argc;					\/**< number of arguments *\/$/;"	m	class:streamsdk::SDKCommandArgs
_argv	.\SDKUtil\SDKUtil.hpp	/^        char ** _argv;              \/**< array of char* holding CmdLine Options *\/$/;"	m	class:appsdk::SDKCmdArgsParser
_argv	.\SDKUtil\include\SDKCommandArgs.hpp	/^			char ** _argv;				\/**< array of char* holding CmdLine Options *\/$/;"	m	class:streamsdk::SDKCommandArgs
_cl_buffer_region	.\CL\cl.h	/^typedef struct _cl_buffer_region {$/;"	s
_cl_dx9_surface_info_khr	.\CL\cl_dx9_media_sharing.h	/^typedef struct _cl_dx9_surface_info_khr$/;"	s
_cl_image_desc	.\CL\cl.h	/^typedef struct _cl_image_desc {$/;"	s
_cl_image_format	.\CL\cl.h	/^typedef struct _cl_image_format {$/;"	s
_clocks	.\SDKUtil\SDKUtil.hpp	/^            long long _clocks;  \/**< _clocks number of ticks at end*\/$/;"	m	struct:appsdk::SDKTimer::Timer
_clocks	.\SDKUtil\include\SDKCommon.hpp	/^		long long _clocks;	\/**< _clocks number of ticks at end*\/$/;"	m	struct:streamsdk::Timer
_columnWidth	.\SDKUtil\include\SDKCommon.hpp	/^		int _columnWidth;		\/**< _columnWidth  width of columns *\/$/;"	m	struct:streamsdk::Table
_condVar	.\SDKUtil\include\SDKThread.hpp	/^            pthread_cond_t _condVar;$/;"	m	class:streamsdk::CondVarImpl
_condVarImpl	.\SDKUtil\include\SDKThread.hpp	/^            CondVarImpl* _condVarImpl;$/;"	m	class:streamsdk::CondVar
_condVarLock	.\SDKUtil\include\SDKThread.hpp	/^            CRITICAL_SECTION _condVarLock;$/;"	m	class:streamsdk::CondVarImpl
_condVarLock	.\SDKUtil\include\SDKThread.hpp	/^            pthread_mutex_t _condVarLock;$/;"	m	class:streamsdk::CondVarImpl
_count	.\SDKUtil\include\SDKThread.hpp	/^            unsigned int _count;$/;"	m	class:streamsdk::CondVarImpl
_critsecWaitSetProtection	.\SDKUtil\include\SDKThread.hpp	/^            CRITICAL_SECTION _critsecWaitSetProtection;$/;"	m	class:streamsdk::CondVarImpl
_cs	.\SDKUtil\include\SDKThread.hpp	/^           CRITICAL_SECTION _cs;$/;"	m	class:streamsdk::ThreadLock
_data	.\SDKUtil\include\SDKThread.hpp	/^           void *_data;$/;"	m	class:streamsdk::SDKThread
_dataItems	.\SDKUtil\include\SDKCommon.hpp	/^		std::string _dataItems; \/**< _dataItems  string of data item *\/$/;"	m	struct:streamsdk::Table
_delim	.\SDKUtil\include\SDKCommon.hpp	/^		std::string _delim;		\/**< _delim  delimiter *\/$/;"	m	struct:streamsdk::Table
_deqWaitSet	.\SDKUtil\include\SDKThread.hpp	/^            std::deque<HANDLE> _deqWaitSet;$/;"	m	class:streamsdk::CondVarImpl
_description	.\SDKUtil\SDKUtil.hpp	/^    std::string  _description;$/;"	m	struct:appsdk::Option
_description	.\SDKUtil\include\SDKCommandArgs.hpp	/^	  std::string  _description;$/;"	m	struct:streamsdk::Option
_freq	.\SDKUtil\SDKUtil.hpp	/^            long long _freq;    \/**< _freq frequency*\/$/;"	m	struct:appsdk::SDKTimer::Timer
_freq	.\SDKUtil\include\SDKCommon.hpp	/^		long long _freq;	\/**< _freq frequency*\/$/;"	m	struct:streamsdk::Timer
_lVersion	.\SDKUtil\SDKUtil.hpp	/^    std::string  _lVersion;$/;"	m	struct:appsdk::Option
_lVersion	.\SDKUtil\include\SDKCommandArgs.hpp	/^	  std::string  _lVersion;$/;"	m	struct:streamsdk::Option
_lock	.\SDKUtil\include\SDKThread.hpp	/^           pthread_mutex_t _lock;$/;"	m	class:streamsdk::ThreadLock
_lockHeldByCallingThread	.\SDKUtil\SDKThread.cpp	/^    BOOL CondVarImpl::_lockHeldByCallingThread()$/;"	f	class:streamsdk::CondVarImpl
_maxThreads	.\SDKUtil\include\SDKThread.hpp	/^            unsigned int _maxThreads;$/;"	m	class:streamsdk::CondVarImpl
_nLockCount	.\SDKUtil\include\SDKThread.hpp	/^            int _nLockCount;$/;"	m	class:streamsdk::CondVarImpl
_numArgs	.\SDKUtil\SDKUtil.hpp	/^        int _numArgs;               \/**< number of arguments *\/$/;"	m	class:appsdk::SDKCmdArgsParser
_numArgs	.\SDKUtil\include\SDKCommandArgs.hpp	/^			int _numArgs;				\/**< number of arguments *\/$/;"	m	class:streamsdk::SDKCommandArgs
_numColumns	.\SDKUtil\include\SDKCommon.hpp	/^		int _numColumns;		\/**< _numColumns  number of columns *\/$/;"	m	struct:streamsdk::Table
_numRows	.\SDKUtil\include\SDKCommon.hpp	/^		int _numRows;			\/**< _numRows  number of rows *\/$/;"	m	struct:streamsdk::Table
_options	.\SDKUtil\SDKUtil.hpp	/^        Option * _options;          \/**< struct option object *\/$/;"	m	class:appsdk::SDKCmdArgsParser
_options	.\SDKUtil\include\SDKCommandArgs.hpp	/^			Option * _options;			\/**< struct option object *\/$/;"	m	class:streamsdk::SDKCommandArgs
_pop	.\SDKUtil\SDKThread.cpp	/^    HANDLE CondVarImpl::_pop()$/;"	f	class:streamsdk::CondVarImpl
_push	.\SDKUtil\SDKThread.cpp	/^    HANDLE CondVarImpl::_push()$/;"	f	class:streamsdk::CondVarImpl
_sVersion	.\SDKUtil\SDKUtil.hpp	/^    std::string  _sVersion;$/;"	m	struct:appsdk::Option
_sVersion	.\SDKUtil\include\SDKCommandArgs.hpp	/^	  std::string  _sVersion;$/;"	m	struct:streamsdk::Option
_seed	.\SDKUtil\SDKUtil.hpp	/^        int _seed;                  \/**< seed value *\/$/;"	m	class:appsdk::SDKCmdArgsParser
_seed	.\SDKUtil\include\SDKCommandArgs.hpp	/^			int _seed;					\/**< seed value *\/$/;"	m	class:streamsdk::SDKCommandArgs
_start	.\SDKUtil\SDKUtil.hpp	/^            long long _start;   \/**< _start start point ticks*\/$/;"	m	struct:appsdk::SDKTimer::Timer
_start	.\SDKUtil\include\SDKCommon.hpp	/^		long long _start;	\/**< _start start point ticks*\/$/;"	m	struct:streamsdk::Timer
_tid	.\SDKUtil\include\SDKThread.hpp	/^           HANDLE _tid;$/;"	m	class:streamsdk::SDKThread
_tid	.\SDKUtil\include\SDKThread.hpp	/^           pthread_t _tid;$/;"	m	class:streamsdk::SDKThread
_timers	.\SDKUtil\SDKUtil.hpp	/^        std::vector<Timer*> _timers;      \/**< _timers vector to Timer objects *\/$/;"	m	class:appsdk::SDKTimer
_timers	.\SDKUtil\include\SDKCommon.hpp	/^		std::vector<Timer*> _timers;      \/**< _timers vector to Timer objects *\/$/;"	m	class:streamsdk::SDKCommon
_type	.\SDKUtil\SDKUtil.hpp	/^    CmdArgsEnum  _type;$/;"	m	struct:appsdk::Option
_type	.\SDKUtil\include\SDKCommandArgs.hpp	/^	  CmdArgsEnum  _type;$/;"	m	struct:streamsdk::Option
_usage	.\SDKUtil\SDKUtil.hpp	/^    std::string  _usage;$/;"	m	struct:appsdk::Option
_value	.\SDKUtil\SDKUtil.hpp	/^    void *       _value;$/;"	m	struct:appsdk::Option
_value	.\SDKUtil\include\SDKCommandArgs.hpp	/^	  void *       _value;$/;"	m	struct:streamsdk::Option
addressBits	.\SDKUtil\CLUtil.hpp	/^        cl_uint addressBits;                \/**< addressBits address Bits of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
addressBits	.\SDKUtil\include\SDKCommon.hpp	/^		cl_uint addressBits;				\/**< addressBits address Bits of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
amdPlatform	.\SDKUtil\CLUtil.hpp	/^        bool amdPlatform;              \/**< If AMD Platform Used *\/$/;"	m	class:appsdk::CLCommandArgs
amdPlatform	.\SDKUtil\include\SDKApplication.hpp	/^    bool amdPlatform;                       \/**< If AMD Platform Used *\/$/;"	m	class:SDKSample
appsdk	.\SDKUtil\CLUtil.hpp	/^namespace appsdk$/;"	n
appsdk	.\SDKUtil\SDKFile.hpp	/^namespace appsdk$/;"	n
appsdk	.\SDKUtil\SDKUtil.hpp	/^namespace appsdk$/;"	n
arg0_	.\CL\cl.hpp	/^    Func f_; const Arg0& arg0_; const Arg1& arg1_;$/;"	m	struct:cl::detail::GetInfoFunctor1
arg0_	.\CL\cl.hpp	/^    Func f_; const Arg0& arg0_;$/;"	m	struct:cl::detail::GetInfoFunctor0
arg1_	.\CL\cl.hpp	/^    Func f_; const Arg0& arg0_; const Arg1& arg1_;$/;"	m	struct:cl::detail::GetInfoFunctor1
argsToThreadFunc	.\SDKUtil\SDKThread.cpp	/^    } argsToThreadFunc;$/;"	t	namespace:streamsdk	typeref:struct:streamsdk::__argsToThreadFunc	file:
assign	.\CL\cl.hpp	/^    void assign(I start, I end)$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
available	.\SDKUtil\CLUtil.hpp	/^        cl_bool available;                  \/**< available available of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
available	.\SDKUtil\include\SDKCommon.hpp	/^		cl_bool available;					\/**< available available of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
back	.\CL\cl.hpp	/^    T& back(void)$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
back	.\CL\cl.hpp	/^    const T& back(void) const$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
begin	.\CL\cl.hpp	/^        static iterator begin(const cl::vector<T,N> &vec)$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED::iterator
begin	.\CL\cl.hpp	/^    iterator begin(void) const$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
begin	.\CL\cl.hpp	/^    iterator begin(void)$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
beginSynchronized	.\SDKUtil\SDKThread.cpp	/^    void CondVarImpl::beginSynchronized()$/;"	f	class:streamsdk::CondVarImpl
bifData	.\SDKUtil\CLUtil.hpp	/^    bifData()$/;"	f	struct:appsdk::bifData
bifData	.\SDKUtil\CLUtil.hpp	/^struct bifData$/;"	s	namespace:appsdk
bifData	.\SDKUtil\include\SDKCommon.hpp	/^		bifData()$/;"	f	struct:streamsdk::bifData
bifData	.\SDKUtil\include\SDKCommon.hpp	/^	struct bifData$/;"	s	namespace:streamsdk
binaryName	.\SDKUtil\CLUtil.hpp	/^    std::string binaryName;             \/**< binaryName name of the binary *\/$/;"	m	struct:appsdk::buildProgramData
binaryName	.\SDKUtil\CLUtil.hpp	/^    std::string binaryName;         \/**< binaryName name of the binary *\/$/;"	m	struct:appsdk::bifData
binaryName	.\SDKUtil\include\SDKCommon.hpp	/^		std::string binaryName;				\/**< binaryName name of the binary *\/$/;"	m	struct:streamsdk::buildProgramData
binaryName	.\SDKUtil\include\SDKCommon.hpp	/^		std::string binaryName;			\/**< binaryName name of the binary *\/$/;"	m	struct:streamsdk::bifData
bitMapID	.\SDKUtil\SDKBitMap.cpp	/^static const short bitMapID = 19778;$/;"	v	file:
bitsPerPixel	.\SDKUtil\include\SDKBitMap.hpp	/^    short bitsPerPixel;$/;"	m	struct:streamsdk::__anon167
broadcast	.\SDKUtil\SDKThread.cpp	/^    BOOL CondVarImpl::broadcast()$/;"	f	class:streamsdk::CondVarImpl
buffer	.\CL\cl.h	/^    cl_mem                  buffer;$/;"	m	struct:_cl_image_desc
build	.\CL\cl.hpp	/^    cl_int build($/;"	f	class:cl::Program
build	.\SDKUtil\SDKUtil.hpp	/^    int build;      \/**< SDK build number *\/$/;"	m	struct:appsdk::sdkVersionStr
build	.\SDKUtil\include\SDKCommon.hpp	/^		int build;		\/**< SDK build number *\/$/;"	m	struct:streamsdk::sdkVersionStr
buildOpenCLProgram	.\SDKUtil\CLUtil.hpp	/^static int buildOpenCLProgram(cl_program &program, const cl_context& context,$/;"	f	namespace:appsdk
buildOpenCLProgram	.\SDKUtil\SDKCommon.cpp	/^SDKCommon::buildOpenCLProgram(cl_program &program, const cl_context& context, const buildProgramData &buildData)$/;"	f	class:streamsdk::SDKCommon
buildProgramData	.\SDKUtil\CLUtil.hpp	/^    buildProgramData()$/;"	f	struct:appsdk::buildProgramData
buildProgramData	.\SDKUtil\CLUtil.hpp	/^struct buildProgramData$/;"	s	namespace:appsdk
buildProgramData	.\SDKUtil\include\SDKCommon.hpp	/^		buildProgramData()$/;"	f	struct:streamsdk::buildProgramData
buildProgramData	.\SDKUtil\include\SDKCommon.hpp	/^	struct buildProgramData$/;"	s	namespace:streamsdk
bus	.\CL\cl_ext.h	/^    struct { cl_uint type; cl_char unused[17]; cl_char bus; cl_char device; cl_char function; } pcie;$/;"	m	struct:__anon1::__anon3
c_str	.\CL\cl.hpp	/^    const char * c_str(void) const { return (str_) ? str_ : "";}$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
capacity	.\CL\cl.hpp	/^    unsigned int capacity () const$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
checkVal	.\SDKUtil\CLUtil.hpp	/^        int checkVal(T input, T reference, std::string message,$/;"	f	class:appsdk::KernelWorkGroupInfo
checkVal	.\SDKUtil\CLUtil.hpp	/^        int checkVal(T input, T reference, std::string message,$/;"	f	class:appsdk::SDKDeviceInfo
checkVal	.\SDKUtil\CLUtil.hpp	/^static int checkVal($/;"	f	namespace:appsdk
checkVal	.\SDKUtil\SDKCommon.cpp	/^int KernelWorkGroupInfo::checkVal($/;"	f	class:streamsdk::KernelWorkGroupInfo
checkVal	.\SDKUtil\SDKCommon.cpp	/^int SDKCommon::checkVal($/;"	f	class:streamsdk::SDKCommon
checkVal	.\SDKUtil\SDKCommon.cpp	/^int SDKDeviceInfo::checkVal($/;"	f	class:streamsdk::SDKDeviceInfo
cl	.\CL\cl.hpp	/^namespace cl {$/;"	n
clGetGLContextInfoKHR_fn	.\CL\cl_gl.h	/^typedef CL_API_ENTRY cl_int (CL_API_CALL *clGetGLContextInfoKHR_fn)($/;"	t
clIcdGetPlatformIDsKHR_fn	.\CL\cl_ext.h	/^typedef CL_API_ENTRY cl_int (CL_API_CALL *clIcdGetPlatformIDsKHR_fn)($/;"	t
cl_APPLE_ContextLoggingFunctions	.\CL\cl_ext.h	77;"	d
cl_APPLE_SetMemObjectDestructor	.\CL\cl_ext.h	63;"	d
cl_GLenum	.\CL\cl_platform.h	/^typedef unsigned int cl_GLenum;$/;"	t
cl_GLint	.\CL\cl_platform.h	/^typedef int          cl_GLint;$/;"	t
cl_GLsync	.\CL\cl_gl.h	/^typedef struct __GLsync *cl_GLsync;$/;"	t	typeref:struct:__GLsync
cl_GLuint	.\CL\cl_platform.h	/^typedef unsigned int cl_GLuint;$/;"	t
cl_addressing_mode	.\CL\cl.h	/^typedef cl_uint             cl_addressing_mode;$/;"	t
cl_amd_device_memory_flags	.\CL\cl_ext.h	175;"	d
cl_bitfield	.\CL\cl.h	/^typedef cl_ulong            cl_bitfield;$/;"	t
cl_bool	.\CL\cl.h	/^typedef cl_uint             cl_bool;                     \/* WARNING!  Unlike cl_ types in cl_platform.h, cl_bool is not guaranteed to be the same size as the bool in kernels. *\/ $/;"	t
cl_buffer_create_type	.\CL\cl.h	/^typedef cl_uint             cl_buffer_create_type;$/;"	t
cl_buffer_region	.\CL\cl.h	/^} cl_buffer_region;$/;"	t	typeref:struct:_cl_buffer_region
cl_build_status	.\CL\cl.h	/^typedef cl_int              cl_build_status;$/;"	t
cl_bus_address_amd	.\CL\cl_ext.h	/^    } cl_bus_address_amd;$/;"	t	typeref:struct:__anon4
cl_channel_order	.\CL\cl.h	/^typedef cl_uint             cl_channel_order;$/;"	t
cl_channel_type	.\CL\cl.h	/^typedef cl_uint             cl_channel_type;$/;"	t
cl_char	.\CL\cl_platform.h	/^typedef int8_t    cl_char;$/;"	t
cl_char	.\CL\cl_platform.h	/^typedef signed   __int8         cl_char;$/;"	t
cl_char16	.\CL\cl_platform.h	/^}cl_char16;$/;"	t	typeref:union:__anon17
cl_char2	.\CL\cl_platform.h	/^}cl_char2;$/;"	t	typeref:union:__anon5
cl_char3	.\CL\cl_platform.h	/^typedef  cl_char4  cl_char3;$/;"	t
cl_char4	.\CL\cl_platform.h	/^}cl_char4;$/;"	t	typeref:union:__anon9
cl_char8	.\CL\cl_platform.h	/^}cl_char8;$/;"	t	typeref:union:__anon13
cl_command_queue	.\CL\cl.h	/^typedef struct _cl_command_queue *  cl_command_queue;$/;"	t	typeref:struct:_cl_command_queue
cl_command_queue_info	.\CL\cl.h	/^typedef cl_uint             cl_command_queue_info;$/;"	t
cl_command_queue_properties	.\CL\cl.h	/^typedef cl_bitfield         cl_command_queue_properties;$/;"	t
cl_command_type	.\CL\cl.h	/^typedef cl_uint             cl_command_type;$/;"	t
cl_context	.\CL\cl.h	/^typedef struct _cl_context *        cl_context;$/;"	t	typeref:struct:_cl_context
cl_context_info	.\CL\cl.h	/^typedef cl_uint             cl_context_info;$/;"	t
cl_context_properties	.\CL\cl.h	/^typedef intptr_t            cl_context_properties;$/;"	t
cl_d3d10_device_set_khr	.\CL\cl_d3d10.h	/^typedef cl_uint cl_d3d10_device_set_khr;$/;"	t
cl_d3d10_device_source_khr	.\CL\cl_d3d10.h	/^typedef cl_uint cl_d3d10_device_source_khr;$/;"	t
cl_d3d11_device_set_khr	.\CL\cl_d3d11.h	/^typedef cl_uint cl_d3d11_device_set_khr;$/;"	t
cl_d3d11_device_source_khr	.\CL\cl_d3d11.h	/^typedef cl_uint cl_d3d11_device_source_khr;$/;"	t
cl_device_affinity_domain	.\CL\cl.h	/^typedef cl_bitfield         cl_device_affinity_domain;$/;"	t
cl_device_exec_capabilities	.\CL\cl.h	/^typedef cl_bitfield         cl_device_exec_capabilities;$/;"	t
cl_device_fp_config	.\CL\cl.h	/^typedef cl_bitfield         cl_device_fp_config;$/;"	t
cl_device_id	.\CL\cl.h	/^typedef struct _cl_device_id *      cl_device_id;$/;"	t	typeref:struct:_cl_device_id
cl_device_info	.\CL\cl.h	/^typedef cl_uint             cl_device_info;$/;"	t
cl_device_local_mem_type	.\CL\cl.h	/^typedef cl_uint             cl_device_local_mem_type;$/;"	t
cl_device_mem_cache_type	.\CL\cl.h	/^typedef cl_uint             cl_device_mem_cache_type;$/;"	t
cl_device_partition_property	.\CL\cl.h	/^typedef intptr_t            cl_device_partition_property;$/;"	t
cl_device_partition_property_ext	.\CL\cl_ext.h	/^    typedef cl_ulong  cl_device_partition_property_ext;$/;"	t
cl_device_topology_amd	.\CL\cl_ext.h	/^} cl_device_topology_amd;$/;"	t	typeref:union:__anon1
cl_device_type	.\CL\cl.h	/^typedef cl_bitfield         cl_device_type;$/;"	t
cl_double	.\CL\cl_platform.h	/^typedef double                  cl_double;$/;"	t
cl_double16	.\CL\cl_platform.h	/^}cl_double16;$/;"	t	typeref:union:__anon161
cl_double2	.\CL\cl_platform.h	/^}cl_double2;$/;"	t	typeref:union:__anon149
cl_double3	.\CL\cl_platform.h	/^typedef  cl_double4  cl_double3;$/;"	t
cl_double4	.\CL\cl_platform.h	/^}cl_double4;$/;"	t	typeref:union:__anon153
cl_double8	.\CL\cl_platform.h	/^}cl_double8;$/;"	t	typeref:union:__anon157
cl_dx9_media_adapter_set_khr	.\CL\cl_dx9_media_sharing.h	/^typedef cl_uint             cl_dx9_media_adapter_set_khr;$/;"	t
cl_dx9_media_adapter_type_khr	.\CL\cl_dx9_media_sharing.h	/^typedef cl_uint             cl_dx9_media_adapter_type_khr;$/;"	t
cl_dx9_surface_info_khr	.\CL\cl_dx9_media_sharing.h	/^} cl_dx9_surface_info_khr;$/;"	t	typeref:struct:_cl_dx9_surface_info_khr
cl_event	.\CL\cl.h	/^typedef struct _cl_event *          cl_event;$/;"	t	typeref:struct:_cl_event
cl_event_info	.\CL\cl.h	/^typedef cl_uint             cl_event_info;$/;"	t
cl_ext_device_fission	.\CL\cl_ext.h	218;"	d
cl_filter_mode	.\CL\cl.h	/^typedef cl_uint             cl_filter_mode;$/;"	t
cl_float	.\CL\cl_platform.h	/^typedef float                   cl_float;$/;"	t
cl_float16	.\CL\cl_platform.h	/^}cl_float16;$/;"	t	typeref:union:__anon145
cl_float2	.\CL\cl_platform.h	/^}cl_float2;$/;"	t	typeref:union:__anon133
cl_float3	.\CL\cl_platform.h	/^typedef  cl_float4  cl_float3;$/;"	t
cl_float4	.\CL\cl_platform.h	/^}cl_float4;$/;"	t	typeref:union:__anon137
cl_float8	.\CL\cl_platform.h	/^}cl_float8;$/;"	t	typeref:union:__anon141
cl_gl_context_info	.\CL\cl_gl.h	/^typedef cl_uint     cl_gl_context_info;$/;"	t
cl_gl_object_type	.\CL\cl_gl.h	/^typedef cl_uint     cl_gl_object_type;$/;"	t
cl_gl_platform_info	.\CL\cl_gl.h	/^typedef cl_uint     cl_gl_platform_info;$/;"	t
cl_gl_texture_info	.\CL\cl_gl.h	/^typedef cl_uint     cl_gl_texture_info;$/;"	t
cl_half	.\CL\cl_platform.h	/^typedef uint16_t  cl_half;$/;"	t
cl_half	.\CL\cl_platform.h	/^typedef unsigned __int16        cl_half;$/;"	t
cl_image_desc	.\CL\cl.h	/^} cl_image_desc;$/;"	t	typeref:struct:_cl_image_desc
cl_image_format	.\CL\cl.h	/^} cl_image_format;$/;"	t	typeref:struct:_cl_image_format
cl_image_info	.\CL\cl.h	/^typedef cl_uint             cl_image_info;$/;"	t
cl_int	.\CL\cl_platform.h	/^typedef int32_t   cl_int;$/;"	t
cl_int	.\CL\cl_platform.h	/^typedef signed   __int32        cl_int;$/;"	t
cl_int16	.\CL\cl_platform.h	/^}cl_int16;$/;"	t	typeref:union:__anon81
cl_int2	.\CL\cl_platform.h	/^}cl_int2;$/;"	t	typeref:union:__anon69
cl_int3	.\CL\cl_platform.h	/^typedef  cl_int4  cl_int3;$/;"	t
cl_int4	.\CL\cl_platform.h	/^}cl_int4;$/;"	t	typeref:union:__anon73
cl_int8	.\CL\cl_platform.h	/^}cl_int8;$/;"	t	typeref:union:__anon77
cl_kernel	.\CL\cl.h	/^typedef struct _cl_kernel *         cl_kernel;$/;"	t	typeref:struct:_cl_kernel
cl_kernel_arg_access_qualifier	.\CL\cl.h	/^typedef cl_uint             cl_kernel_arg_access_qualifier;$/;"	t
cl_kernel_arg_address_qualifier	.\CL\cl.h	/^typedef cl_uint             cl_kernel_arg_address_qualifier;$/;"	t
cl_kernel_arg_info	.\CL\cl.h	/^typedef cl_uint             cl_kernel_arg_info;$/;"	t
cl_kernel_arg_type_qualifier	.\CL\cl.h	/^typedef cl_bitfield         cl_kernel_arg_type_qualifier;$/;"	t
cl_kernel_info	.\CL\cl.h	/^typedef cl_uint             cl_kernel_info;$/;"	t
cl_kernel_work_group_info	.\CL\cl.h	/^typedef cl_uint             cl_kernel_work_group_info;$/;"	t
cl_khr_d3d10_sharing	.\CL\cl_d3d10.h	39;"	d
cl_khr_d3d11_sharing	.\CL\cl_d3d11.h	39;"	d
cl_khr_dx9_media_sharing	.\CL\cl_dx9_media_sharing.h	38;"	d
cl_khr_gl_sharing	.\CL\cl_gl.h	126;"	d
cl_khr_icd	.\CL\cl_ext.h	99;"	d
cl_khr_terminate_context	.\CL\cl_ext.h	147;"	d
cl_long	.\CL\cl_platform.h	/^typedef int64_t   cl_long;$/;"	t
cl_long	.\CL\cl_platform.h	/^typedef signed   __int64        cl_long;$/;"	t
cl_long16	.\CL\cl_platform.h	/^}cl_long16;$/;"	t	typeref:union:__anon113
cl_long2	.\CL\cl_platform.h	/^}cl_long2;$/;"	t	typeref:union:__anon101
cl_long3	.\CL\cl_platform.h	/^typedef  cl_long4  cl_long3;$/;"	t
cl_long4	.\CL\cl_platform.h	/^}cl_long4;$/;"	t	typeref:union:__anon105
cl_long8	.\CL\cl_platform.h	/^}cl_long8;$/;"	t	typeref:union:__anon109
cl_map_flags	.\CL\cl.h	/^typedef cl_bitfield         cl_map_flags;$/;"	t
cl_mem	.\CL\cl.h	/^typedef struct _cl_mem *            cl_mem;$/;"	t	typeref:struct:_cl_mem
cl_mem_flags	.\CL\cl.h	/^typedef cl_bitfield         cl_mem_flags;$/;"	t
cl_mem_info	.\CL\cl.h	/^typedef cl_uint             cl_mem_info;$/;"	t
cl_mem_migration_flags	.\CL\cl.h	/^typedef cl_bitfield         cl_mem_migration_flags;$/;"	t
cl_mem_object_type	.\CL\cl.h	/^typedef cl_uint             cl_mem_object_type;$/;"	t
cl_platform_id	.\CL\cl.h	/^typedef struct _cl_platform_id *    cl_platform_id;$/;"	t	typeref:struct:_cl_platform_id
cl_platform_info	.\CL\cl.h	/^typedef cl_uint             cl_platform_info;$/;"	t
cl_profiling_info	.\CL\cl.h	/^typedef cl_uint             cl_profiling_info;$/;"	t
cl_program	.\CL\cl.h	/^typedef struct _cl_program *        cl_program;$/;"	t	typeref:struct:_cl_program
cl_program_binary_type	.\CL\cl.h	/^typedef cl_uint             cl_program_binary_type;$/;"	t
cl_program_build_info	.\CL\cl.h	/^typedef cl_uint             cl_program_build_info;$/;"	t
cl_program_info	.\CL\cl.h	/^typedef cl_uint             cl_program_info;$/;"	t
cl_sampler	.\CL\cl.h	/^typedef struct _cl_sampler *        cl_sampler;$/;"	t	typeref:struct:_cl_sampler
cl_sampler_info	.\CL\cl.h	/^typedef cl_uint             cl_sampler_info;$/;"	t
cl_short	.\CL\cl_platform.h	/^typedef int16_t   cl_short;$/;"	t
cl_short	.\CL\cl_platform.h	/^typedef signed   __int16        cl_short;$/;"	t
cl_short16	.\CL\cl_platform.h	/^}cl_short16;$/;"	t	typeref:union:__anon49
cl_short2	.\CL\cl_platform.h	/^}cl_short2;$/;"	t	typeref:union:__anon37
cl_short3	.\CL\cl_platform.h	/^typedef  cl_short4  cl_short3;$/;"	t
cl_short4	.\CL\cl_platform.h	/^}cl_short4;$/;"	t	typeref:union:__anon41
cl_short8	.\CL\cl_platform.h	/^}cl_short8;$/;"	t	typeref:union:__anon45
cl_type	.\CL\cl.hpp	/^    typedef T cl_type;$/;"	t	class:cl::detail::Wrapper
cl_type	.\CL\cl.hpp	/^    typedef cl_device_id cl_type;$/;"	t	class:cl::detail::Wrapper
cl_uchar	.\CL\cl_platform.h	/^typedef uint8_t   cl_uchar;$/;"	t
cl_uchar	.\CL\cl_platform.h	/^typedef unsigned __int8         cl_uchar;$/;"	t
cl_uchar16	.\CL\cl_platform.h	/^}cl_uchar16;$/;"	t	typeref:union:__anon33
cl_uchar2	.\CL\cl_platform.h	/^}cl_uchar2;$/;"	t	typeref:union:__anon21
cl_uchar3	.\CL\cl_platform.h	/^typedef  cl_uchar4  cl_uchar3;$/;"	t
cl_uchar4	.\CL\cl_platform.h	/^}cl_uchar4;$/;"	t	typeref:union:__anon25
cl_uchar8	.\CL\cl_platform.h	/^}cl_uchar8;$/;"	t	typeref:union:__anon29
cl_uint	.\CL\cl_platform.h	/^typedef uint32_t  cl_uint;$/;"	t
cl_uint	.\CL\cl_platform.h	/^typedef unsigned __int32        cl_uint;$/;"	t
cl_uint16	.\CL\cl_platform.h	/^}cl_uint16;$/;"	t	typeref:union:__anon97
cl_uint2	.\CL\cl_platform.h	/^}cl_uint2;$/;"	t	typeref:union:__anon85
cl_uint3	.\CL\cl_platform.h	/^typedef  cl_uint4  cl_uint3;$/;"	t
cl_uint4	.\CL\cl_platform.h	/^}cl_uint4;$/;"	t	typeref:union:__anon89
cl_uint8	.\CL\cl_platform.h	/^}cl_uint8;$/;"	t	typeref:union:__anon93
cl_ulong	.\CL\cl_platform.h	/^typedef uint64_t  cl_ulong;$/;"	t
cl_ulong	.\CL\cl_platform.h	/^typedef unsigned __int64        cl_ulong;$/;"	t
cl_ulong16	.\CL\cl_platform.h	/^}cl_ulong16;$/;"	t	typeref:union:__anon129
cl_ulong2	.\CL\cl_platform.h	/^}cl_ulong2;$/;"	t	typeref:union:__anon117
cl_ulong3	.\CL\cl_platform.h	/^typedef  cl_ulong4  cl_ulong3;$/;"	t
cl_ulong4	.\CL\cl_platform.h	/^}cl_ulong4;$/;"	t	typeref:union:__anon121
cl_ulong8	.\CL\cl_platform.h	/^}cl_ulong8;$/;"	t	typeref:union:__anon125
cl_ushort	.\CL\cl_platform.h	/^typedef uint16_t  cl_ushort;$/;"	t
cl_ushort	.\CL\cl_platform.h	/^typedef unsigned __int16        cl_ushort;$/;"	t
cl_ushort16	.\CL\cl_platform.h	/^}cl_ushort16;$/;"	t	typeref:union:__anon65
cl_ushort2	.\CL\cl_platform.h	/^}cl_ushort2;$/;"	t	typeref:union:__anon53
cl_ushort3	.\CL\cl_platform.h	/^typedef  cl_ushort4  cl_ushort3;$/;"	t
cl_ushort4	.\CL\cl_platform.h	/^}cl_ushort4;$/;"	t	typeref:union:__anon57
cl_ushort8	.\CL\cl_platform.h	/^}cl_ushort8;$/;"	t	typeref:union:__anon61
clear	.\CL\cl.hpp	/^    void clear()$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
clrImportant	.\SDKUtil\include\SDKBitMap.hpp	/^    int clrImportant;$/;"	m	struct:streamsdk::__anon167
clrUsed	.\SDKUtil\include\SDKBitMap.hpp	/^    int clrUsed;$/;"	m	struct:streamsdk::__anon167
colorIndex	.\SDKUtil\SDKBitMap.cpp	/^SDKBitMap::colorIndex(uchar4 color)$/;"	f	class:streamsdk::SDKBitMap
colors_	.\SDKUtil\include\SDKBitMap.hpp	/^    ColorPalette * colors_;			\/**< Color Data *\/$/;"	m	class:streamsdk::SDKBitMap
compare	.\SDKUtil\SDKCommon.cpp	/^SDKCommon::compare(const double *refData, const double *data, $/;"	f	class:streamsdk::SDKCommon
compare	.\SDKUtil\SDKCommon.cpp	/^SDKCommon::compare(const float *refData, const float *data, $/;"	f	class:streamsdk::SDKCommon
compare	.\SDKUtil\SDKUtil.hpp	/^static bool compare(const double *refData, const double *data,$/;"	f	namespace:appsdk
compare	.\SDKUtil\SDKUtil.hpp	/^static bool compare(const float *refData, const float *data,$/;"	f	namespace:appsdk
compare_exchange	.\CL\cl.hpp	/^    inline int compare_exchange(volatile int * dest, int exchange, int comparand)$/;"	f	namespace:cl::detail
compile	.\CL\cl.hpp	/^	cl_int compile($/;"	f	class:cl::Program
compileWorkGroupSize	.\SDKUtil\CLUtil.hpp	/^        size_t compileWorkGroupSize[3];     \/**< compileWorkGroupSize WorkGroup size as mentioned in kernel source *\/$/;"	m	class:appsdk::KernelWorkGroupInfo
compileWorkGroupSize	.\SDKUtil\include\SDKCommon.hpp	/^		size_t compileWorkGroupSize[3];		\/**< compileWorkGroupSize WorkGroup size as mentioned in kernel source *\/$/;"	m	class:streamsdk::KernelWorkGroupInfo
compilerAvailable	.\SDKUtil\CLUtil.hpp	/^        cl_bool compilerAvailable;          \/**< compilerAvailable compilerAvailable of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
compilerAvailable	.\SDKUtil\include\SDKCommon.hpp	/^		cl_bool compilerAvailable;			\/**< compilerAvailable compilerAvailable of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
compression	.\SDKUtil\include\SDKBitMap.hpp	/^    unsigned compression;$/;"	m	struct:streamsdk::__anon167
copy	.\CL\cl.hpp	/^inline cl_int copy( IteratorType startIterator, IteratorType endIterator, cl::Buffer &buffer )$/;"	f	namespace:cl
copy	.\CL\cl.hpp	/^inline cl_int copy( cl::Buffer &buffer, IteratorType startIterator, IteratorType endIterator )$/;"	f	namespace:cl
create	.\SDKUtil\SDKThread.cpp	/^    SDKThread::create(threadFunc func, void *arg)$/;"	f	class:streamsdk::SDKThread
createKernels	.\CL\cl.hpp	/^    cl_int createKernels(VECTOR_CLASS<Kernel>* kernels)$/;"	f	class:cl::Program
createSubBuffer	.\CL\cl.hpp	/^    Buffer createSubBuffer($/;"	f	class:cl::Buffer
createSubDevices	.\CL\cl.hpp	/^    cl_int createSubDevices($/;"	f	class:cl::Device
createTimer	.\SDKUtil\SDKCommon.cpp	/^int SDKCommon::createTimer()$/;"	f	class:streamsdk::SDKCommon
createTimer	.\SDKUtil\SDKUtil.hpp	/^        int createTimer()$/;"	f	class:appsdk::SDKTimer
dType	.\SDKUtil\CLUtil.hpp	/^        cl_device_type dType;               \/**< dType device type*\/$/;"	m	class:appsdk::SDKDeviceInfo
dType	.\SDKUtil\include\SDKCommon.hpp	/^		cl_device_type dType;				\/**< dType device type*\/$/;"	m	class:streamsdk::SDKDeviceInfo
data	.\CL\cl_ext.h	/^    struct { cl_uint type; cl_uint data[5]; } raw;$/;"	m	struct:__anon1::__anon2
data	.\SDKUtil\SDKThread.cpp	/^        void* data;$/;"	m	struct:streamsdk::__argsToThreadFunc	file:
data_	.\CL\cl.hpp	/^    ::size_t data_[N];$/;"	m	class:cl::size_t
data_	.\CL\cl.hpp	/^    T data_[N];$/;"	m	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
default_	.\CL\cl.hpp	/^    static CommandQueue default_;$/;"	m	class:cl::CommandQueue
default_	.\CL\cl.hpp	/^    static Context default_;$/;"	m	class:cl::Context
default_	.\CL\cl.hpp	/^__attribute__((weak)) Context Context::default_;$/;"	m	class:cl::Context
default_	.\CL\cl.hpp	/^__declspec(selectany) CommandQueue CommandQueue::default_;$/;"	m	class:cl::CommandQueue
default_	.\CL\cl.hpp	/^__declspec(selectany) Context Context::default_;$/;"	m	class:cl::Context
default_error_	.\CL\cl.hpp	/^    static volatile cl_int default_error_;$/;"	m	class:cl::CommandQueue
default_error_	.\CL\cl.hpp	/^    static volatile cl_int default_error_;$/;"	m	class:cl::Context
default_error_	.\CL\cl.hpp	/^__attribute__((weak)) volatile cl_int Context::default_error_ = CL_SUCCESS;$/;"	m	class:cl::Context
default_error_	.\CL\cl.hpp	/^__declspec(selectany) volatile cl_int CommandQueue::default_error_ = CL_SUCCESS;$/;"	m	class:cl::CommandQueue
default_error_	.\CL\cl.hpp	/^__declspec(selectany) volatile cl_int Context::default_error_ = CL_SUCCESS;$/;"	m	class:cl::Context
default_initialized_	.\CL\cl.hpp	/^    static volatile int default_initialized_;$/;"	m	class:cl::CommandQueue
default_initialized_	.\CL\cl.hpp	/^    static volatile int default_initialized_;$/;"	m	class:cl::Context
default_initialized_	.\CL\cl.hpp	/^__attribute__((weak)) volatile int Context::default_initialized_ = __DEFAULT_NOT_INITIALIZED;$/;"	m	class:cl::Context
default_initialized_	.\CL\cl.hpp	/^__declspec(selectany) volatile int CommandQueue::default_initialized_ = __DEFAULT_NOT_INITIALIZED;$/;"	m	class:cl::CommandQueue
default_initialized_	.\CL\cl.hpp	/^__declspec(selectany) volatile int Context::default_initialized_ = __DEFAULT_NOT_INITIALIZED;$/;"	m	class:cl::Context
destroy	.\SDKUtil\SDKThread.cpp	/^    CondVar::destroy()$/;"	f	class:streamsdk::CondVar
destroy	.\SDKUtil\SDKThread.cpp	/^    CondVarImpl::destroy()$/;"	f	class:streamsdk::CondVarImpl
detail	.\CL\cl.hpp	/^namespace detail {$/;"	n	namespace:cl
detail	.\CL\cl.hpp	/^namespace detail$/;"	n	namespace:cl
device	.\CL\cl_ext.h	/^    struct { cl_uint type; cl_char unused[17]; cl_char bus; cl_char device; cl_char function; } pcie;$/;"	m	struct:__anon1::__anon3
deviceId	.\SDKUtil\CLUtil.hpp	/^        unsigned int deviceId;         \/**< Cmd Line Option- device number *\/$/;"	m	class:appsdk::CLCommandArgs
deviceId	.\SDKUtil\CLUtil.hpp	/^    int deviceId;                       \/**< deviceId Id of the device to buid kernel for *\/$/;"	m	struct:appsdk::buildProgramData
deviceId	.\SDKUtil\include\SDKApplication.hpp	/^    unsigned int deviceId;                  \/**< Cmd Line Option- device number *\/$/;"	m	class:SDKSample
deviceId	.\SDKUtil\include\SDKCommon.hpp	/^		int deviceId;						\/**< deviceId Id of the device to buid kernel for *\/$/;"	m	struct:streamsdk::buildProgramData
deviceType	.\SDKUtil\CLUtil.hpp	/^        std::string deviceType;        \/**< Cmd Line Option- set device type(cpu|gpu) *\/$/;"	m	class:appsdk::CLCommandArgs
deviceType	.\SDKUtil\include\SDKApplication.hpp	/^    std::string deviceType;                 \/**< Cmd Line Option- set device type(cpu|gpu) *\/$/;"	m	class:SDKSample
deviceVersion	.\SDKUtil\CLUtil.hpp	/^        char* deviceVersion;                \/**< deviceVersion device Version of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
deviceVersion	.\SDKUtil\include\SDKCommon.hpp	/^		char* deviceVersion;				\/**< deviceVersion device Version of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
devices	.\SDKUtil\CLUtil.hpp	/^    devices;              \/**< devices array of device to build kernel for *\/$/;"	m	struct:appsdk::buildProgramData
devices	.\SDKUtil\include\SDKCommon.hpp	/^		cl_device_id* devices;				\/**< devices array of device to build kernel for *\/$/;"	m	struct:streamsdk::buildProgramData
dimensions	.\CL\cl.hpp	/^    ::size_t dimensions() const { return dimensions_; }$/;"	f	class:cl::NDRange
dimensions_	.\CL\cl.hpp	/^    cl_uint dimensions_;$/;"	m	class:cl::NDRange
displayDevices	.\SDKUtil\CLUtil.hpp	/^static int displayDevices(cl_platform_id platform, cl_device_type deviceType)$/;"	f	namespace:appsdk
displayDevices	.\SDKUtil\SDKCommon.cpp	/^int SDKCommon::displayDevices(cl_platform_id platform, cl_device_type deviceType)$/;"	f	class:streamsdk::SDKCommon
displayPlatformAndDevices	.\SDKUtil\CLUtil.hpp	/^static int displayPlatformAndDevices(cl_platform_id platform,$/;"	f	namespace:appsdk
displayPlatformAndDevices	.\SDKUtil\SDKCommon.cpp	/^SDKCommon::displayPlatformAndDevices($/;"	f	class:streamsdk::SDKCommon
doubleFpConfig	.\SDKUtil\CLUtil.hpp	/^        doubleFpConfig; \/**< doubleFpConfig doubleFpConfig of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
doubleFpConfig	.\SDKUtil\include\SDKCommon.hpp	/^		cl_device_fp_config doubleFpConfig; \/**< doubleFpConfig doubleFpConfig of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
driverVersion	.\SDKUtil\CLUtil.hpp	/^        char* driverVersion;                \/**< driverVersion driver Version of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
driverVersion	.\SDKUtil\include\SDKCommon.hpp	/^		char* driverVersion;				\/**< driverVersion driver Version of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
dumpBinary	.\SDKUtil\CLUtil.hpp	/^        std::string dumpBinary;        \/**< Cmd Line Option- Dump Binary with name *\/$/;"	m	class:appsdk::CLCommandArgs
dumpBinary	.\SDKUtil\include\SDKApplication.hpp	/^    std::string dumpBinary;                 \/**< Cmd Line Option- Dump Binary with name *\/$/;"	m	class:SDKSample
empty	.\CL\cl.hpp	/^    bool empty (void) const$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
enableDeviceId	.\SDKUtil\CLUtil.hpp	/^        bool enableDeviceId;           \/**< If deviceId used *\/$/;"	m	class:appsdk::CLCommandArgs
enableDeviceId	.\SDKUtil\include\SDKApplication.hpp	/^    bool enableDeviceId;                    \/**< If deviceId used *\/$/;"	m	class:SDKSample
enablePlatform	.\SDKUtil\CLUtil.hpp	/^        bool enablePlatform;           \/**< If platformId Used *\/$/;"	m	class:appsdk::CLCommandArgs
enablePlatform	.\SDKUtil\include\SDKApplication.hpp	/^    bool enablePlatform;                    \/**< If platformId Used *\/$/;"	m	class:SDKSample
end	.\CL\cl.hpp	/^        static iterator end(const cl::vector<T,N> &vec)$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED::iterator
end	.\CL\cl.hpp	/^    iterator end(void) const$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
end	.\CL\cl.hpp	/^    iterator end(void)$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
endSynchronized	.\SDKUtil\SDKThread.cpp	/^    int CondVarImpl::endSynchronized()$/;"	f	class:streamsdk::CondVarImpl
endianLittle	.\SDKUtil\CLUtil.hpp	/^        cl_bool endianLittle;               \/**< endianLittle endian Little of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
endianLittle	.\SDKUtil\include\SDKCommon.hpp	/^		cl_bool endianLittle;				\/**< endianLittle endian Little of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
enqueueAcquireD3D10Objects	.\CL\cl.hpp	/^    cl_int enqueueAcquireD3D10Objects($/;"	f	class:cl::CommandQueue
enqueueAcquireGLObjects	.\CL\cl.hpp	/^    cl_int enqueueAcquireGLObjects($/;"	f	class:cl::CommandQueue
enqueueBarrierWithWaitList	.\CL\cl.hpp	/^    cl_int enqueueBarrierWithWaitList($/;"	f	class:cl::CommandQueue
enqueueCopyBuffer	.\CL\cl.hpp	/^    cl_int enqueueCopyBuffer($/;"	f	class:cl::CommandQueue
enqueueCopyBuffer	.\CL\cl.hpp	/^inline cl_int enqueueCopyBuffer($/;"	f	namespace:cl
enqueueCopyBufferRect	.\CL\cl.hpp	/^    cl_int enqueueCopyBufferRect($/;"	f	class:cl::CommandQueue
enqueueCopyBufferRect	.\CL\cl.hpp	/^inline cl_int enqueueCopyBufferRect($/;"	f	namespace:cl
enqueueCopyBufferToImage	.\CL\cl.hpp	/^    cl_int enqueueCopyBufferToImage($/;"	f	class:cl::CommandQueue
enqueueCopyBufferToImage	.\CL\cl.hpp	/^inline cl_int enqueueCopyBufferToImage($/;"	f	namespace:cl
enqueueCopyImage	.\CL\cl.hpp	/^    cl_int enqueueCopyImage($/;"	f	class:cl::CommandQueue
enqueueCopyImage	.\CL\cl.hpp	/^inline cl_int enqueueCopyImage($/;"	f	namespace:cl
enqueueCopyImageToBuffer	.\CL\cl.hpp	/^    cl_int enqueueCopyImageToBuffer($/;"	f	class:cl::CommandQueue
enqueueCopyImageToBuffer	.\CL\cl.hpp	/^inline cl_int enqueueCopyImageToBuffer($/;"	f	namespace:cl
enqueueFillBuffer	.\CL\cl.hpp	/^    cl_int enqueueFillBuffer($/;"	f	class:cl::CommandQueue
enqueueFillImage	.\CL\cl.hpp	/^    cl_int enqueueFillImage($/;"	f	class:cl::CommandQueue
enqueueMapBuffer	.\CL\cl.hpp	/^    void* enqueueMapBuffer($/;"	f	class:cl::CommandQueue
enqueueMapBuffer	.\CL\cl.hpp	/^inline void* enqueueMapBuffer($/;"	f	namespace:cl
enqueueMapImage	.\CL\cl.hpp	/^    void* enqueueMapImage($/;"	f	class:cl::CommandQueue
enqueueMarkerWithWaitList	.\CL\cl.hpp	/^    cl_int enqueueMarkerWithWaitList($/;"	f	class:cl::CommandQueue
enqueueMigrateMemObjects	.\CL\cl.hpp	/^    cl_int enqueueMigrateMemObjects($/;"	f	class:cl::CommandQueue
enqueueNDRangeKernel	.\CL\cl.hpp	/^    cl_int enqueueNDRangeKernel($/;"	f	class:cl::CommandQueue
enqueueNativeKernel	.\CL\cl.hpp	/^    cl_int enqueueNativeKernel($/;"	f	class:cl::CommandQueue
enqueueReadBuffer	.\CL\cl.hpp	/^    cl_int enqueueReadBuffer($/;"	f	class:cl::CommandQueue
enqueueReadBuffer	.\CL\cl.hpp	/^inline cl_int enqueueReadBuffer($/;"	f	namespace:cl
enqueueReadBufferRect	.\CL\cl.hpp	/^    cl_int enqueueReadBufferRect($/;"	f	class:cl::CommandQueue
enqueueReadBufferRect	.\CL\cl.hpp	/^inline cl_int enqueueReadBufferRect($/;"	f	namespace:cl
enqueueReadImage	.\CL\cl.hpp	/^    cl_int enqueueReadImage($/;"	f	class:cl::CommandQueue
enqueueReadImage	.\CL\cl.hpp	/^inline cl_int enqueueReadImage($/;"	f	namespace:cl
enqueueReleaseD3D10Objects	.\CL\cl.hpp	/^    cl_int enqueueReleaseD3D10Objects($/;"	f	class:cl::CommandQueue
enqueueReleaseGLObjects	.\CL\cl.hpp	/^    cl_int enqueueReleaseGLObjects($/;"	f	class:cl::CommandQueue
enqueueTask	.\CL\cl.hpp	/^    cl_int enqueueTask($/;"	f	class:cl::CommandQueue
enqueueUnmapMemObject	.\CL\cl.hpp	/^    cl_int enqueueUnmapMemObject($/;"	f	class:cl::CommandQueue
enqueueUnmapMemObject	.\CL\cl.hpp	/^inline cl_int enqueueUnmapMemObject($/;"	f	namespace:cl
enqueueWriteBuffer	.\CL\cl.hpp	/^    cl_int enqueueWriteBuffer($/;"	f	class:cl::CommandQueue
enqueueWriteBuffer	.\CL\cl.hpp	/^inline cl_int enqueueWriteBuffer($/;"	f	namespace:cl
enqueueWriteBufferRect	.\CL\cl.hpp	/^    cl_int enqueueWriteBufferRect($/;"	f	class:cl::CommandQueue
enqueueWriteBufferRect	.\CL\cl.hpp	/^inline cl_int enqueueWriteBufferRect($/;"	f	namespace:cl
enqueueWriteImage	.\CL\cl.hpp	/^    cl_int enqueueWriteImage($/;"	f	class:cl::CommandQueue
enqueueWriteImage	.\CL\cl.hpp	/^inline cl_int enqueueWriteImage($/;"	f	namespace:cl
err	.\CL\cl.hpp	/^    cl_int err(void) const { return err_; }$/;"	f	class:cl::Error
errCorrectionSupport	.\SDKUtil\CLUtil.hpp	/^        cl_bool errCorrectionSupport;       \/**< errCorrectionSupport errCorrectionSupport of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
errCorrectionSupport	.\SDKUtil\include\SDKCommon.hpp	/^		cl_bool errCorrectionSupport;		\/**< errCorrectionSupport errCorrectionSupport of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
errHandler	.\CL\cl.hpp	/^static inline cl_int errHandler ($/;"	f	namespace:cl::detail
errStr_	.\CL\cl.hpp	/^    const char * errStr_;$/;"	m	class:cl::Error
err_	.\CL\cl.hpp	/^    cl_int err_;$/;"	m	class:cl::Error
error	.\SDKUtil\SDKCommon.cpp	/^SDKCommon::error(const char* errorMsg)$/;"	f	class:streamsdk::SDKCommon
error	.\SDKUtil\SDKCommon.cpp	/^SDKCommon::error(std::string errorMsg)$/;"	f	class:streamsdk::SDKCommon
error	.\SDKUtil\SDKUtil.hpp	/^static void error(std::string errorMsg)$/;"	f	namespace:appsdk
events_	.\CL\cl.hpp	/^    VECTOR_CLASS<Event> events_;$/;"	m	struct:cl::EnqueueArgs
execCapabilities	.\SDKUtil\CLUtil.hpp	/^        execCapabilities;\/**< execCapabilities exec Capabilities of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
execCapabilities	.\SDKUtil\include\SDKCommon.hpp	/^		cl_device_exec_capabilities execCapabilities;\/**< execCapabilities exec Capabilities of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
expectedError	.\SDKUtil\SDKCommon.cpp	/^SDKCommon::expectedError(const char* errorMsg)$/;"	f	class:streamsdk::SDKCommon
expectedError	.\SDKUtil\SDKCommon.cpp	/^SDKCommon::expectedError(std::string errorMsg)$/;"	f	class:streamsdk::SDKCommon
expectedError	.\SDKUtil\SDKUtil.hpp	/^static void expectedError(const char* errorMsg)$/;"	f	namespace:appsdk
expectedError	.\SDKUtil\SDKUtil.hpp	/^static void expectedError(std::string errorMsg)$/;"	f	namespace:appsdk
extensions	.\SDKUtil\CLUtil.hpp	/^        char* extensions;                   \/**< extensions extensions of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
extensions	.\SDKUtil\include\SDKCommon.hpp	/^		char* extensions;					\/**< extensions extensions of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
f_	.\CL\cl.hpp	/^    Func f_; const Arg0& arg0_; const Arg1& arg1_;$/;"	m	struct:cl::detail::GetInfoFunctor1
f_	.\CL\cl.hpp	/^    Func f_; const Arg0& arg0_;$/;"	m	struct:cl::detail::GetInfoFunctor0
fence	.\CL\cl.hpp	/^    inline void fence() { _mm_mfence(); }$/;"	f	namespace:cl::detail
fileToString	.\SDKUtil\SDKCommon.cpp	/^SDKCommon::fileToString(std::string &fileName, std::string &str)$/;"	f	class:streamsdk::SDKCommon
fileToString	.\SDKUtil\SDKUtil.hpp	/^static int fileToString(std::string &fileName, std::string &str)$/;"	f	namespace:appsdk
fillConstant	.\SDKUtil\SDKCommon.cpp	/^int SDKCommon::fillConstant($/;"	f	class:streamsdk::SDKCommon
fillConstant	.\SDKUtil\SDKUtil.hpp	/^int fillConstant($/;"	f	namespace:appsdk
fillPos	.\SDKUtil\SDKCommon.cpp	/^int SDKCommon::fillPos($/;"	f	class:streamsdk::SDKCommon
fillPos	.\SDKUtil\SDKUtil.hpp	/^int fillPos($/;"	f	namespace:appsdk
fillRandom	.\SDKUtil\SDKCommon.cpp	/^int SDKCommon::fillRandom($/;"	f	class:streamsdk::SDKCommon
fillRandom	.\SDKUtil\SDKUtil.hpp	/^int fillRandom($/;"	f	namespace:appsdk
finish	.\CL\cl.hpp	/^    cl_int finish() const$/;"	f	class:cl::CommandQueue
finish	.\CL\cl.hpp	/^inline cl_int finish(void)$/;"	f	namespace:cl
flags	.\SDKUtil\CLUtil.hpp	/^        std::string flags;             \/**< Cmd Line Option- compiler flags *\/$/;"	m	class:appsdk::CLCommandArgs
flags	.\SDKUtil\include\SDKApplication.hpp	/^    std::string flags;                      \/**< Cmd Line Option- compiler flags *\/$/;"	m	class:SDKSample
flagsFileName	.\SDKUtil\CLUtil.hpp	/^    flagsFileName;          \/**< flagFileName name of the file of flags *\/$/;"	m	struct:appsdk::buildProgramData
flagsFileName	.\SDKUtil\CLUtil.hpp	/^    std::string flagsFileName;      \/**< flagFileName flags file for the kernel *\/$/;"	m	struct:appsdk::bifData
flagsFileName	.\SDKUtil\include\SDKCommon.hpp	/^		std::string flagsFileName;			\/**< flagFileName name of the file of flags *\/$/;"	m	struct:streamsdk::buildProgramData
flagsFileName	.\SDKUtil\include\SDKCommon.hpp	/^		std::string flagsFileName;		\/**< flagFileName flags file for the kernel *\/$/;"	m	struct:streamsdk::bifData
flagsStr	.\SDKUtil\CLUtil.hpp	/^    std::string flagsStr;               \/**< flagsStr flags string *\/$/;"	m	struct:appsdk::buildProgramData
flagsStr	.\SDKUtil\CLUtil.hpp	/^    std::string flagsStr;           \/**< flagsStr flags string *\/$/;"	m	struct:appsdk::bifData
flagsStr	.\SDKUtil\include\SDKCommon.hpp	/^		std::string flagsStr;				\/**< flagsStr flags string *\/$/;"	m	struct:streamsdk::buildProgramData
flagsStr	.\SDKUtil\include\SDKCommon.hpp	/^		std::string flagsStr;			\/**< flagsStr flags string *\/$/;"	m	struct:streamsdk::bifData
flush	.\CL\cl.hpp	/^    cl_int flush() const$/;"	f	class:cl::CommandQueue
flush	.\CL\cl.hpp	/^inline cl_int flush(void)$/;"	f	namespace:cl
front	.\CL\cl.hpp	/^    T& front(void)$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
front	.\CL\cl.hpp	/^    const T& front(void) const$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
func	.\SDKUtil\SDKThread.cpp	/^        threadFunc func;$/;"	m	struct:streamsdk::__argsToThreadFunc	file:
function	.\CL\cl_ext.h	/^    struct { cl_uint type; cl_char unused[17]; cl_char bus; cl_char device; cl_char function; } pcie;$/;"	m	struct:__anon1::__anon3
functionImplementation_	.\CL\cl.hpp	/^    functionImplementation_(const FunctorType &functor) :$/;"	f	struct:cl::detail::functionImplementation_
functionImplementation_	.\CL\cl.hpp	/^struct functionImplementation_$/;"	s	namespace:cl::detail
functor_	.\CL\cl.hpp	/^    FunctorType functor_;$/;"	m	struct:cl::detail::functionImplementation_
generateBinaryImage	.\SDKUtil\CLUtil.hpp	/^static int generateBinaryImage(const bifData &binaryData)$/;"	f	namespace:appsdk
generateBinaryImage	.\SDKUtil\SDKCommon.cpp	/^SDKCommon::generateBinaryImage(const bifData &binaryData)$/;"	f	class:streamsdk::SDKCommon
get	.\CL\cl.hpp	/^    get(Func f, cl_uint name, VECTOR_CLASS<char *>* param)$/;"	f	struct:cl::detail::GetInfoHelper
get	.\CL\cl.hpp	/^    get(Functor f, cl_uint name, T* param)$/;"	f	struct:cl::detail::GetInfoHelper
get	.\CL\cl.hpp	/^    static Platform get($/;"	f	class:cl::Platform
get	.\CL\cl.hpp	/^    static cl_int get($/;"	f	class:cl::Platform
get	.\CL\cl.hpp	/^    static cl_int get(Func f, cl_uint name, STRING_CLASS* param)$/;"	f	struct:cl::detail::GetInfoHelper
get	.\CL\cl.hpp	/^    static cl_int get(Func f, cl_uint name, VECTOR_CLASS<T>* param)$/;"	f	struct:cl::detail::GetInfoHelper
get	.\CL\cl.hpp	/^    static cl_int get(Func f, cl_uint name, VECTOR_CLASS<cl::Device>* param)$/;"	f	struct:cl::detail::GetInfoHelper
get	.\CL\cl.hpp	/^    static cl_int get(Func f, cl_uint name, size_t<N>* param)$/;"	f	struct:cl::detail::GetInfoHelper
getArgInfo	.\CL\cl.hpp	/^    cl_int getArgInfo(cl_uint argIndex, cl_kernel_arg_info name, T* param) const$/;"	f	class:cl::Kernel
getArgInfo	.\CL\cl.hpp	/^    getArgInfo(cl_uint argIndex, cl_int* err = NULL) const$/;"	f	class:cl::Kernel
getBuildInfo	.\CL\cl.hpp	/^    cl_int getBuildInfo($/;"	f	class:cl::Program
getBuildInfo	.\CL\cl.hpp	/^    getBuildInfo(const Device& device, cl_int* err = NULL) const$/;"	f	class:cl::Program
getCurrentDir	.\SDKUtil\SDKFile.cpp	/^getCurrentDir()$/;"	f	namespace:streamsdk
getCurrentDir	.\SDKUtil\SDKFile.hpp	/^static std::string getCurrentDir()$/;"	f	namespace:appsdk
getData	.\SDKUtil\include\SDKThread.hpp	/^           void* getData() { return _data; }$/;"	f	class:streamsdk::SDKThread
getDefault	.\CL\cl.hpp	/^    static CommandQueue getDefault(cl_int * err = NULL) $/;"	f	class:cl::CommandQueue
getDefault	.\CL\cl.hpp	/^    static Context getDefault(cl_int * err = NULL) $/;"	f	class:cl::Context
getDefault	.\CL\cl.hpp	/^    static Platform getDefault( $/;"	f	class:cl::Platform
getDefault	.\CL\cl.hpp	/^inline Device Device::getDefault(cl_int * err)$/;"	f	class:cl::Device
getDevices	.\CL\cl.hpp	/^    cl_int getDevices($/;"	f	class:cl::Platform
getDevices	.\SDKUtil\CLUtil.hpp	/^static int getDevices(cl_context &context, cl_device_id **devices, int deviceId,$/;"	f	namespace:appsdk
getDevices	.\SDKUtil\SDKCommon.cpp	/^int SDKCommon::getDevices(cl_context &context, cl_device_id **devices, cl_int deviceId, bool deviceIdEnabled)$/;"	f	class:streamsdk::SDKCommon
getExactVerStr	.\SDKUtil\CLUtil.hpp	/^inline std::string getExactVerStr(std::string clVerStr)$/;"	f	namespace:appsdk
getExactVerStr	.\SDKUtil\SDKApplication.cpp	/^std::string SDKSample::getExactVerStr(std::string clVerStr)$/;"	f	class:SDKSample
getHeight	.\SDKUtil\include\SDKBitMap.hpp	/^    getHeight(void) const$/;"	f	class:streamsdk::SDKBitMap
getID	.\SDKUtil\SDKThread.cpp	/^    SDKThread::getID()$/;"	f	class:streamsdk::SDKThread
getImageInfo	.\CL\cl.hpp	/^    cl_int getImageInfo(cl_image_info name, T* param) const$/;"	f	class:cl::Image
getImageInfo	.\CL\cl.hpp	/^    getImageInfo(cl_int* err = NULL) const$/;"	f	class:cl::Image
getInfo	.\CL\cl.hpp	/^    cl_int getInfo(cl_command_queue_info name, T* param) const$/;"	f	class:cl::CommandQueue
getInfo	.\CL\cl.hpp	/^    cl_int getInfo(cl_context_info name, T* param) const$/;"	f	class:cl::Context
getInfo	.\CL\cl.hpp	/^    cl_int getInfo(cl_device_info name, T* param) const$/;"	f	class:cl::Device
getInfo	.\CL\cl.hpp	/^    cl_int getInfo(cl_event_info name, T* param) const$/;"	f	class:cl::Event
getInfo	.\CL\cl.hpp	/^    cl_int getInfo(cl_kernel_info name, T* param) const$/;"	f	class:cl::Kernel
getInfo	.\CL\cl.hpp	/^    cl_int getInfo(cl_mem_info name, T* param) const$/;"	f	class:cl::Memory
getInfo	.\CL\cl.hpp	/^    cl_int getInfo(cl_platform_info name, STRING_CLASS* param) const$/;"	f	class:cl::Platform
getInfo	.\CL\cl.hpp	/^    cl_int getInfo(cl_program_info name, T* param) const$/;"	f	class:cl::Program
getInfo	.\CL\cl.hpp	/^    cl_int getInfo(cl_sampler_info name, T* param) const$/;"	f	class:cl::Sampler
getInfo	.\CL\cl.hpp	/^    getInfo(cl_int* err = NULL) const$/;"	f	class:cl::CommandQueue
getInfo	.\CL\cl.hpp	/^    getInfo(cl_int* err = NULL) const$/;"	f	class:cl::Context
getInfo	.\CL\cl.hpp	/^    getInfo(cl_int* err = NULL) const$/;"	f	class:cl::Device
getInfo	.\CL\cl.hpp	/^    getInfo(cl_int* err = NULL) const$/;"	f	class:cl::Event
getInfo	.\CL\cl.hpp	/^    getInfo(cl_int* err = NULL) const$/;"	f	class:cl::Kernel
getInfo	.\CL\cl.hpp	/^    getInfo(cl_int* err = NULL) const$/;"	f	class:cl::Memory
getInfo	.\CL\cl.hpp	/^    getInfo(cl_int* err = NULL) const$/;"	f	class:cl::Platform
getInfo	.\CL\cl.hpp	/^    getInfo(cl_int* err = NULL) const$/;"	f	class:cl::Program
getInfo	.\CL\cl.hpp	/^    getInfo(cl_int* err = NULL) const$/;"	f	class:cl::Sampler
getInfo	.\CL\cl.hpp	/^getInfo(Func f, cl_uint name, T* param)$/;"	f	namespace:cl::detail
getInfo	.\CL\cl.hpp	/^getInfo(Func f, const Arg0& arg0, cl_uint name, T* param)$/;"	f	namespace:cl::detail
getInfo	.\CL\cl.hpp	/^getInfo(Func f, const Arg0& arg0, const Arg1& arg1, cl_uint name, T* param)$/;"	f	namespace:cl::detail
getInfo	.\CL\cl.hpp	/^inline VECTOR_CLASS<char *> cl::Program::getInfo<CL_PROGRAM_BINARIES>(cl_int* err) const$/;"	f	class:cl::cl::Program
getLocalThreads	.\SDKUtil\CLUtil.hpp	/^static size_t getLocalThreads(size_t globalThreads, size_t maxWorkItemSize)$/;"	f	namespace:appsdk
getLocalThreads	.\SDKUtil\SDKCommon.cpp	/^SDKCommon::getLocalThreads(const size_t globalThreads,$/;"	f	class:streamsdk::SDKCommon
getNumChannels	.\SDKUtil\SDKBitMap.cpp	/^SDKBitMap::getNumChannels()$/;"	f	class:streamsdk::SDKBitMap
getObjectInfo	.\CL\cl.hpp	/^    cl_int getObjectInfo($/;"	f	class:cl::BufferGL
getObjectInfo	.\CL\cl.hpp	/^    cl_int getObjectInfo($/;"	f	class:cl::BufferRenderGL
getOpenCLErrorCodeStr	.\SDKUtil\CLUtil.hpp	/^static const char* getOpenCLErrorCodeStr(T input)$/;"	f	namespace:appsdk
getOpenCLErrorCodeStr	.\SDKUtil\CLUtil.hpp	/^static const char* getOpenCLErrorCodeStr(std::string input)$/;"	f	namespace:appsdk
getOpenCLErrorCodeStr	.\SDKUtil\SDKCommon.cpp	/^getOpenCLErrorCodeStr(T input)$/;"	f	namespace:streamsdk
getOpenCLErrorCodeStr	.\SDKUtil\SDKCommon.cpp	/^getOpenCLErrorCodeStr(std::string input)$/;"	f	namespace:streamsdk
getPath	.\SDKUtil\SDKCommon.cpp	/^SDKCommon::getPath()$/;"	f	class:streamsdk::SDKCommon
getPath	.\SDKUtil\SDKUtil.hpp	/^static std::string getPath()$/;"	f	namespace:appsdk
getPixels	.\SDKUtil\include\SDKBitMap.hpp	/^    uchar4 * getPixels(void) const { return pixels_; }$/;"	f	class:streamsdk::SDKBitMap
getPlatform	.\SDKUtil\CLUtil.hpp	/^static int getPlatform(cl_platform_id &platform, int platformId,$/;"	f	namespace:appsdk
getPlatform	.\SDKUtil\SDKCommon.cpp	/^SDKCommon::getPlatform(cl_platform_id &platform, int platformId, bool platformIdEnabled)$/;"	f	class:streamsdk::SDKCommon
getProfilingInfo	.\CL\cl.hpp	/^    cl_int getProfilingInfo(cl_profiling_info name, T* param) const$/;"	f	class:cl::Event
getProfilingInfo	.\CL\cl.hpp	/^    getProfilingInfo(cl_int* err = NULL) const$/;"	f	class:cl::Event
getSdkVerStr	.\SDKUtil\SDKUtil.hpp	/^static std::string getSdkVerStr()$/;"	f	namespace:appsdk
getSdkVerStr	.\SDKUtil\include\SDKApplication.hpp	/^    std::string getSdkVerStr()$/;"	f	class:SDKSample
getSupportedImageFormats	.\CL\cl.hpp	/^    cl_int getSupportedImageFormats($/;"	f	class:cl::Context
getVersion	.\CL\cl.hpp	/^    static int getVersion(cl_device_id device)$/;"	f	class:cl::detail::Wrapper
getWidth	.\SDKUtil\include\SDKBitMap.hpp	/^    getWidth(void) const$/;"	f	class:streamsdk::SDKBitMap
getWorkGroupInfo	.\CL\cl.hpp	/^        getWorkGroupInfo(const Device& device, cl_int* err = NULL) const$/;"	f	class:cl::Kernel
getWorkGroupInfo	.\CL\cl.hpp	/^    cl_int getWorkGroupInfo($/;"	f	class:cl::Kernel
globalMemCacheSize	.\SDKUtil\CLUtil.hpp	/^        cl_ulong globalMemCacheSize;        \/**< globalMemCacheSize globalMem CacheSize of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
globalMemCacheSize	.\SDKUtil\include\SDKCommon.hpp	/^		cl_ulong globalMemCacheSize;		\/**< globalMemCacheSize globalMem CacheSize of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
globalMemCachelineSize	.\SDKUtil\CLUtil.hpp	/^        cl_uint globalMemCachelineSize;     \/**< globalMemCachelineSize globalMem Cacheline Size of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
globalMemCachelineSize	.\SDKUtil\include\SDKCommon.hpp	/^		cl_uint globalMemCachelineSize;		\/**< globalMemCachelineSize globalMem Cacheline Size of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
globalMemSize	.\SDKUtil\CLUtil.hpp	/^        cl_ulong globalMemSize;             \/**< globalMemSize globalMem Size of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
globalMemSize	.\SDKUtil\include\SDKCommon.hpp	/^		cl_ulong globalMemSize;				\/**< globalMemSize globalMem Size of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
global_	.\CL\cl.hpp	/^    const NDRange global_;$/;"	m	struct:cl::EnqueueArgs
globleMemCacheType	.\SDKUtil\CLUtil.hpp	/^        globleMemCacheType; \/**< globleMemCacheType globleMem CacheType of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
globleMemCacheType	.\SDKUtil\include\SDKCommon.hpp	/^		cl_device_mem_cache_type globleMemCacheType; \/**< globleMemCacheType globleMem CacheType of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
gpu	.\SDKUtil\CLUtil.hpp	/^        bool gpu;                      \/**< If GPU used *\/$/;"	m	class:appsdk::CLCommandArgs
gpu	.\SDKUtil\include\SDKApplication.hpp	/^    bool gpu;                               \/**< If GPU used *\/$/;"	m	class:SDKSample
height	.\SDKUtil\include\SDKBitMap.hpp	/^    int height;$/;"	m	struct:streamsdk::__anon167
help	.\SDKUtil\SDKCommandArgs.cpp	/^void SDKCommandArgs::help(void)$/;"	f	class:streamsdk::SDKCommandArgs
help	.\SDKUtil\SDKUtil.hpp	/^        void help(void)$/;"	f	class:appsdk::SDKCmdArgsParser
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  lo, hi; };$/;"	m	struct:__anon5::__anon8
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char2 lo, hi; };$/;"	m	struct:__anon9::__anon12
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char4 lo, hi; };$/;"	m	struct:__anon13::__anon16
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char8 lo, hi; };$/;"	m	struct:__anon17::__anon20
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double lo, hi; };$/;"	m	struct:__anon149::__anon152
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double2 lo, hi; };$/;"	m	struct:__anon153::__anon156
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double4 lo, hi; };$/;"	m	struct:__anon157::__anon160
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double8 lo, hi; };$/;"	m	struct:__anon161::__anon164
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float  lo, hi; };$/;"	m	struct:__anon133::__anon136
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float2  lo, hi; };$/;"	m	struct:__anon137::__anon140
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float4  lo, hi; };$/;"	m	struct:__anon141::__anon144
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float8 lo, hi; };$/;"	m	struct:__anon145::__anon148
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  lo, hi; };$/;"	m	struct:__anon69::__anon72
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int2 lo, hi; };$/;"	m	struct:__anon73::__anon76
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int4 lo, hi; };$/;"	m	struct:__anon77::__anon80
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int8 lo, hi; };$/;"	m	struct:__anon81::__anon84
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  lo, hi; };$/;"	m	struct:__anon101::__anon104
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long2 lo, hi; };$/;"	m	struct:__anon105::__anon108
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long4 lo, hi; };$/;"	m	struct:__anon109::__anon112
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long8 lo, hi; };$/;"	m	struct:__anon113::__anon116
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  lo, hi; };$/;"	m	struct:__anon37::__anon40
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short2 lo, hi; };$/;"	m	struct:__anon41::__anon44
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short4 lo, hi; };$/;"	m	struct:__anon45::__anon48
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short8 lo, hi; };$/;"	m	struct:__anon49::__anon52
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  lo, hi; };$/;"	m	struct:__anon21::__anon24
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar2 lo, hi; };$/;"	m	struct:__anon25::__anon28
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar4 lo, hi; };$/;"	m	struct:__anon29::__anon32
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar8 lo, hi; };$/;"	m	struct:__anon33::__anon36
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  lo, hi; };$/;"	m	struct:__anon85::__anon88
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint2 lo, hi; };$/;"	m	struct:__anon89::__anon92
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint4 lo, hi; };$/;"	m	struct:__anon93::__anon96
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint8 lo, hi; };$/;"	m	struct:__anon97::__anon100
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  lo, hi; };$/;"	m	struct:__anon117::__anon120
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong2 lo, hi; };$/;"	m	struct:__anon121::__anon124
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong4 lo, hi; };$/;"	m	struct:__anon125::__anon128
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong8 lo, hi; };$/;"	m	struct:__anon129::__anon132
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  lo, hi; };$/;"	m	struct:__anon53::__anon56
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort2 lo, hi; };$/;"	m	struct:__anon57::__anon60
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort4 lo, hi; };$/;"	m	struct:__anon61::__anon64
hi	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort8 lo, hi; };$/;"	m	struct:__anon65::__anon68
hostUnifiedMem	.\SDKUtil\CLUtil.hpp	/^        cl_bool hostUnifiedMem;             \/**< hostUnifiedMem hostUnifiedMem of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
hostUnifiedMem	.\SDKUtil\include\SDKCommon.hpp	/^		cl_bool hostUnifiedMem;				\/**< hostUnifiedMem hostUnifiedMem of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
id	.\SDKUtil\include\SDKBitMap.hpp	/^    short id;$/;"	m	struct:streamsdk::__anon166
image2dMaxHeight	.\SDKUtil\CLUtil.hpp	/^        size_t image2dMaxHeight;            \/**< image2dMaxHeight image 2dMax Height of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
image2dMaxHeight	.\SDKUtil\include\SDKCommon.hpp	/^		size_t image2dMaxHeight;			\/**< image2dMaxHeight image 2dMax Height of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
image2dMaxWidth	.\SDKUtil\CLUtil.hpp	/^        size_t image2dMaxWidth;             \/**< image2dMaxWidth image 2dMax Width of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
image2dMaxWidth	.\SDKUtil\include\SDKCommon.hpp	/^		size_t image2dMaxWidth;				\/**< image2dMaxWidth image 2dMax Width of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
image3dMaxDepth	.\SDKUtil\CLUtil.hpp	/^        size_t image3dMaxDepth;             \/**< image3dMaxDepth image 3dMax Depth of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
image3dMaxDepth	.\SDKUtil\include\SDKCommon.hpp	/^		size_t image3dMaxDepth;				\/**< image3dMaxDepth image 3dMax Depth of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
image3dMaxHeight	.\SDKUtil\CLUtil.hpp	/^        size_t image3dMaxHeight;            \/**< image3dMaxHeight image 3dMax Height of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
image3dMaxHeight	.\SDKUtil\include\SDKCommon.hpp	/^		size_t image3dMaxHeight;			\/**< image3dMaxHeight image 3dMax Height of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
image3dMaxWidth	.\SDKUtil\CLUtil.hpp	/^        size_t image3dMaxWidth;             \/**< image3dMaxWidth image3d MaxWidth of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
image3dMaxWidth	.\SDKUtil\include\SDKCommon.hpp	/^		size_t image3dMaxWidth;				\/**< image3dMaxWidth image3d MaxWidth of device*\/ $/;"	m	class:streamsdk::SDKDeviceInfo
imageSize	.\SDKUtil\include\SDKBitMap.hpp	/^    unsigned imageSize;$/;"	m	struct:streamsdk::__anon167
imageSupport	.\SDKUtil\CLUtil.hpp	/^        cl_bool imageSupport;               \/**< imageSupport image Support of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
imageSupport	.\SDKUtil\include\SDKCommon.hpp	/^		cl_bool imageSupport;				\/**< imageSupport image Support of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
image_array_size	.\CL\cl.h	/^    size_t                  image_array_size;$/;"	m	struct:_cl_image_desc
image_channel_data_type	.\CL\cl.h	/^    cl_channel_type         image_channel_data_type;$/;"	m	struct:_cl_image_format
image_channel_order	.\CL\cl.h	/^    cl_channel_order        image_channel_order;$/;"	m	struct:_cl_image_format
image_depth	.\CL\cl.h	/^    size_t                  image_depth;$/;"	m	struct:_cl_image_desc
image_height	.\CL\cl.h	/^    size_t                  image_height;$/;"	m	struct:_cl_image_desc
image_row_pitch	.\CL\cl.h	/^    size_t                  image_row_pitch;$/;"	m	struct:_cl_image_desc
image_slice_pitch	.\CL\cl.h	/^    size_t                  image_slice_pitch;$/;"	m	struct:_cl_image_desc
image_type	.\CL\cl.h	/^    cl_mem_object_type      image_type;$/;"	m	struct:_cl_image_desc
image_width	.\CL\cl.h	/^    size_t                  image_width;$/;"	m	struct:_cl_image_desc
index_	.\CL\cl.hpp	/^        int index_;$/;"	m	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED::iterator
init	.\SDKUtil\SDKThread.cpp	/^    CondVar::init(unsigned int maxThreadCount)$/;"	f	class:streamsdk::CondVar
init	.\SDKUtil\SDKThread.cpp	/^    CondVarImpl::init(unsigned int maxThreadCount)$/;"	f	class:streamsdk::CondVarImpl
initialize	.\SDKUtil\CLUtil.hpp	/^        int initialize()$/;"	f	class:appsdk::CLCommandArgs
initialize	.\SDKUtil\SDKApplication.cpp	/^SDKSample::initialize()$/;"	f	class:SDKSample
isAmdPlatform	.\SDKUtil\CLUtil.hpp	/^        bool isAmdPlatform()$/;"	f	class:appsdk::CLCommandArgs
isAmdPlatform	.\SDKUtil\include\SDKApplication.hpp	/^    bool isAmdPlatform()$/;"	f	class:SDKSample
isArgSet	.\SDKUtil\SDKCommandArgs.cpp	/^bool SDKCommandArgs::isArgSet(std::string str, bool shortVer)$/;"	f	class:streamsdk::SDKCommandArgs
isArgSet	.\SDKUtil\SDKUtil.hpp	/^        bool isArgSet(std::string str, bool shortVer = false)$/;"	f	class:appsdk::SDKCmdArgsParser
isComplierFlagsSpecified	.\SDKUtil\CLUtil.hpp	/^        bool isComplierFlagsSpecified()$/;"	f	class:appsdk::CLCommandArgs
isComplierFlagsSpecified	.\SDKUtil\include\SDKApplication.hpp	/^    bool isComplierFlagsSpecified()$/;"	f	class:SDKSample
isDeviceIdEnabled	.\SDKUtil\CLUtil.hpp	/^        bool isDeviceIdEnabled()$/;"	f	class:appsdk::CLCommandArgs
isDeviceIdEnabled	.\SDKUtil\include\SDKApplication.hpp	/^    bool isDeviceIdEnabled()$/;"	f	class:SDKSample
isDumpBinaryEnabled	.\SDKUtil\CLUtil.hpp	/^        bool isDumpBinaryEnabled()$/;"	f	class:appsdk::CLCommandArgs
isDumpBinaryEnabled	.\SDKUtil\include\SDKApplication.hpp	/^    bool isDumpBinaryEnabled()$/;"	f	class:SDKSample
isLoadBinaryEnabled	.\SDKUtil\CLUtil.hpp	/^        bool isLoadBinaryEnabled()$/;"	f	class:appsdk::CLCommandArgs
isLoadBinaryEnabled	.\SDKUtil\include\SDKApplication.hpp	/^    bool isLoadBinaryEnabled()$/;"	f	class:SDKSample
isLoaded	.\SDKUtil\include\SDKBitMap.hpp	/^    isLoaded(void) const { return isLoaded_; }$/;"	f	class:streamsdk::SDKBitMap
isLoaded_	.\SDKUtil\include\SDKBitMap.hpp	/^    bool isLoaded_;					\/**< If Bitmap loaded *\/$/;"	m	class:streamsdk::SDKBitMap
isLocked	.\SDKUtil\SDKThread.cpp	/^    ThreadLock::isLocked()$/;"	f	class:streamsdk::ThreadLock
isPlatformEnabled	.\SDKUtil\CLUtil.hpp	/^        bool isPlatformEnabled()$/;"	f	class:appsdk::CLCommandArgs
isPlatformEnabled	.\SDKUtil\include\SDKApplication.hpp	/^    bool isPlatformEnabled()$/;"	f	class:SDKSample
isPowerOf2	.\SDKUtil\SDKCommon.cpp	/^int SDKCommon::isPowerOf2(T val)$/;"	f	class:streamsdk::SDKCommon
isPowerOf2	.\SDKUtil\SDKUtil.hpp	/^int isPowerOf2(T val)$/;"	f	namespace:appsdk
isReferenceCountable	.\CL\cl.hpp	/^    static bool isReferenceCountable(cl_device_id device)$/;"	f	class:cl::detail::Wrapper
isThereGPU	.\SDKUtil\CLUtil.hpp	/^        bool isThereGPU()$/;"	f	class:appsdk::CLCommandArgs
isThereGPU	.\SDKUtil\include\SDKApplication.hpp	/^    bool isThereGPU()$/;"	f	class:SDKSample
iterator	.\CL\cl.hpp	/^        iterator (const vector<T,N> &vec, int index) :$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED::iterator
iterator	.\CL\cl.hpp	/^        iterator(const iterator& rhs) :$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED::iterator
iterator	.\CL\cl.hpp	/^        iterator(void) : $/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED::iterator
iterator	.\CL\cl.hpp	/^    class iterator$/;"	c	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
join	.\SDKUtil\SDKThread.cpp	/^    SDKThread::join()$/;"	f	class:streamsdk::SDKThread
kernelName	.\SDKUtil\CLUtil.hpp	/^    std::string kernelName;             \/**< kernelName name of the kernel *\/$/;"	m	struct:appsdk::buildProgramData
kernelName	.\SDKUtil\CLUtil.hpp	/^    std::string kernelName;         \/**< kernelName name of the kernel *\/$/;"	m	struct:appsdk::bifData
kernelName	.\SDKUtil\include\SDKCommon.hpp	/^		std::string kernelName;				\/**< kernelName name of the kernel *\/$/;"	m	struct:streamsdk::buildProgramData
kernelName	.\SDKUtil\include\SDKCommon.hpp	/^		std::string kernelName;			\/**< kernelName name of the kernel *\/$/;"	m	struct:streamsdk::bifData
kernelWorkGroupSize	.\SDKUtil\CLUtil.hpp	/^        size_t kernelWorkGroupSize;         \/**< kernelWorkGroupSize Supported WorkGroup size as per OpenCL Runtime*\/$/;"	m	class:appsdk::KernelWorkGroupInfo
kernelWorkGroupSize	.\SDKUtil\include\SDKCommon.hpp	/^		size_t kernelWorkGroupSize;			\/**< kernelWorkGroupSize Supported WorkGroup size as per OpenCL Runtime*\/$/;"	m	class:streamsdk::KernelWorkGroupInfo
kernel_	.\CL\cl.hpp	/^    Kernel kernel_;$/;"	m	class:cl::detail::KernelFunctorGlobal
length	.\CL\cl.hpp	/^    ::size_t length(void) const { return size(); }$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
linkProgram	.\CL\cl.hpp	/^inline Program linkProgram($/;"	f	namespace:cl
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  lo, hi; };$/;"	m	struct:__anon5::__anon8
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char2 lo, hi; };$/;"	m	struct:__anon9::__anon12
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char4 lo, hi; };$/;"	m	struct:__anon13::__anon16
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char8 lo, hi; };$/;"	m	struct:__anon17::__anon20
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double lo, hi; };$/;"	m	struct:__anon149::__anon152
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double2 lo, hi; };$/;"	m	struct:__anon153::__anon156
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double4 lo, hi; };$/;"	m	struct:__anon157::__anon160
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double8 lo, hi; };$/;"	m	struct:__anon161::__anon164
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float  lo, hi; };$/;"	m	struct:__anon133::__anon136
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float2  lo, hi; };$/;"	m	struct:__anon137::__anon140
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float4  lo, hi; };$/;"	m	struct:__anon141::__anon144
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float8 lo, hi; };$/;"	m	struct:__anon145::__anon148
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  lo, hi; };$/;"	m	struct:__anon69::__anon72
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int2 lo, hi; };$/;"	m	struct:__anon73::__anon76
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int4 lo, hi; };$/;"	m	struct:__anon77::__anon80
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int8 lo, hi; };$/;"	m	struct:__anon81::__anon84
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  lo, hi; };$/;"	m	struct:__anon101::__anon104
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long2 lo, hi; };$/;"	m	struct:__anon105::__anon108
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long4 lo, hi; };$/;"	m	struct:__anon109::__anon112
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long8 lo, hi; };$/;"	m	struct:__anon113::__anon116
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  lo, hi; };$/;"	m	struct:__anon37::__anon40
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short2 lo, hi; };$/;"	m	struct:__anon41::__anon44
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short4 lo, hi; };$/;"	m	struct:__anon45::__anon48
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short8 lo, hi; };$/;"	m	struct:__anon49::__anon52
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  lo, hi; };$/;"	m	struct:__anon21::__anon24
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar2 lo, hi; };$/;"	m	struct:__anon25::__anon28
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar4 lo, hi; };$/;"	m	struct:__anon29::__anon32
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar8 lo, hi; };$/;"	m	struct:__anon33::__anon36
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  lo, hi; };$/;"	m	struct:__anon85::__anon88
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint2 lo, hi; };$/;"	m	struct:__anon89::__anon92
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint4 lo, hi; };$/;"	m	struct:__anon93::__anon96
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint8 lo, hi; };$/;"	m	struct:__anon97::__anon100
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  lo, hi; };$/;"	m	struct:__anon117::__anon120
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong2 lo, hi; };$/;"	m	struct:__anon121::__anon124
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong4 lo, hi; };$/;"	m	struct:__anon125::__anon128
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong8 lo, hi; };$/;"	m	struct:__anon129::__anon132
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  lo, hi; };$/;"	m	struct:__anon53::__anon56
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort2 lo, hi; };$/;"	m	struct:__anon57::__anon60
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort4 lo, hi; };$/;"	m	struct:__anon61::__anon64
lo	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort8 lo, hi; };$/;"	m	struct:__anon65::__anon68
load	.\SDKUtil\SDKBitMap.cpp	/^SDKBitMap::load(const char * filename)$/;"	f	class:streamsdk::SDKBitMap
loadBinary	.\SDKUtil\CLUtil.hpp	/^        std::string loadBinary;        \/**< Cmd Line Option- Load Binary with name *\/$/;"	m	class:appsdk::CLCommandArgs
loadBinary	.\SDKUtil\include\SDKApplication.hpp	/^    std::string loadBinary;                 \/**< Cmd Line Option- Load Binary with name *\/$/;"	m	class:SDKSample
localMemSize	.\SDKUtil\CLUtil.hpp	/^        cl_ulong localMemSize;              \/**< localMemSize localMem Size of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
localMemSize	.\SDKUtil\include\SDKCommon.hpp	/^		cl_ulong localMemSize;				\/**< localMemSize localMem Size of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
localMemType	.\SDKUtil\CLUtil.hpp	/^        localMemType;\/**< localMemType local MemType of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
localMemType	.\SDKUtil\include\SDKCommon.hpp	/^		cl_device_local_mem_type localMemType;\/**< localMemType local MemType of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
localMemoryUsed	.\SDKUtil\CLUtil.hpp	/^        cl_ulong localMemoryUsed;           \/**< localMemoryUsed amount of local memory used by kernel *\/$/;"	m	class:appsdk::KernelWorkGroupInfo
localMemoryUsed	.\SDKUtil\include\SDKCommon.hpp	/^		cl_ulong localMemoryUsed;			\/**< localMemoryUsed amount of local memory used by kernel *\/$/;"	m	class:streamsdk::KernelWorkGroupInfo
local_	.\CL\cl.hpp	/^    const NDRange local_;$/;"	m	struct:cl::EnqueueArgs
lock	.\SDKUtil\SDKThread.cpp	/^    ThreadLock::lock()$/;"	f	class:streamsdk::ThreadLock
major	.\SDKUtil\SDKUtil.hpp	/^    int major;      \/**< SDK major release number *\/$/;"	m	struct:appsdk::sdkVersionStr
major	.\SDKUtil\include\SDKCommon.hpp	/^		int major;		\/**< SDK major release number *\/$/;"	m	struct:streamsdk::sdkVersionStr
make_kernel	.\CL\cl.hpp	/^    make_kernel($/;"	f	struct:cl::make_kernel
make_kernel	.\CL\cl.hpp	/^struct make_kernel :$/;"	s	namespace:cl
marker_bus_address	.\CL\cl_ext.h	/^        cl_ulong marker_bus_address;$/;"	m	struct:__anon4
match	.\SDKUtil\SDKCommandArgs.cpp	/^int SDKCommandArgs::match(char ** argv, int argc)$/;"	f	class:streamsdk::SDKCommandArgs
match	.\SDKUtil\SDKUtil.hpp	/^        int match(char ** argv, int argc)$/;"	f	class:appsdk::SDKCmdArgsParser
max	.\CL\cl.hpp	158;"	d
maxClockFrequency	.\SDKUtil\CLUtil.hpp	/^        cl_uint maxClockFrequency;          \/**< maxClockFrequency max Clock Frequency of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
maxClockFrequency	.\SDKUtil\include\SDKCommon.hpp	/^		cl_uint maxClockFrequency;			\/**< maxClockFrequency max Clock Frequency of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
maxComputeUnits	.\SDKUtil\CLUtil.hpp	/^        cl_uint maxComputeUnits;            \/**< maxComputeUnits maxComputeUnits of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
maxComputeUnits	.\SDKUtil\include\SDKCommon.hpp	/^		cl_uint maxComputeUnits;			\/**< maxComputeUnits maxComputeUnits of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
maxConstArgs	.\SDKUtil\CLUtil.hpp	/^        cl_uint maxConstArgs;               \/**< maxConstArgs max ConstArgs of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
maxConstArgs	.\SDKUtil\include\SDKCommon.hpp	/^		cl_uint maxConstArgs;				\/**< maxConstArgs max ConstArgs of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
maxConstBufSize	.\SDKUtil\CLUtil.hpp	/^        cl_ulong maxConstBufSize;           \/**< maxConstBufSize maxConst BufSize of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
maxConstBufSize	.\SDKUtil\include\SDKCommon.hpp	/^		cl_ulong maxConstBufSize;			\/**< maxConstBufSize maxConst BufSize of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
maxMemAllocSize	.\SDKUtil\CLUtil.hpp	/^        cl_ulong maxMemAllocSize;           \/**< maxMemAllocSize max Mem Alloc Size of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
maxMemAllocSize	.\SDKUtil\include\SDKCommon.hpp	/^		cl_ulong maxMemAllocSize;			\/**< maxMemAllocSize max Mem Alloc Size of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
maxParameterSize	.\SDKUtil\CLUtil.hpp	/^        size_t maxParameterSize;            \/**< maxParameterSize maxParameterSize of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
maxParameterSize	.\SDKUtil\include\SDKCommon.hpp	/^		size_t maxParameterSize;			\/**< maxParameterSize maxParameterSize of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
maxReadImageArgs	.\SDKUtil\CLUtil.hpp	/^        cl_uint maxReadImageArgs;           \/**< maxReadImageArgs max ReadImage Args of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
maxReadImageArgs	.\SDKUtil\include\SDKCommon.hpp	/^		cl_uint maxReadImageArgs;			\/**< maxReadImageArgs max ReadImage Args of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
maxSamplers	.\SDKUtil\CLUtil.hpp	/^        size_t maxSamplers;                 \/**< maxSamplers maxSamplers of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
maxSamplers	.\SDKUtil\include\SDKCommon.hpp	/^		size_t maxSamplers;					\/**< maxSamplers maxSamplers of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
maxWorkGroupSize	.\SDKUtil\CLUtil.hpp	/^        size_t maxWorkGroupSize;            \/**< maxWorkGroupSize max WorkGroup Size of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
maxWorkGroupSize	.\SDKUtil\include\SDKCommon.hpp	/^		size_t maxWorkGroupSize;			\/**< maxWorkGroupSize max WorkGroup Size of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
maxWorkItemDims	.\SDKUtil\CLUtil.hpp	/^        cl_uint maxWorkItemDims;            \/**< maxWorkItemDims maxWorkItemDimensions VendorId of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
maxWorkItemDims	.\SDKUtil\include\SDKCommon.hpp	/^		cl_uint maxWorkItemDims;			\/**< maxWorkItemDims maxWorkItemDimensions VendorId of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
maxWorkItemSizes	.\SDKUtil\CLUtil.hpp	/^        size_t* maxWorkItemSizes;           \/**< maxWorkItemSizes maxWorkItemSizes of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
maxWorkItemSizes	.\SDKUtil\include\SDKCommon.hpp	/^		size_t* maxWorkItemSizes;			\/**< maxWorkItemSizes maxWorkItemSizes of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
maxWriteImageArgs	.\SDKUtil\CLUtil.hpp	/^        cl_uint maxWriteImageArgs;          \/**< maxWriteImageArgs max Write Image Args of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
maxWriteImageArgs	.\SDKUtil\include\SDKCommon.hpp	/^		cl_uint maxWriteImageArgs;			\/**< maxWriteImageArgs max Write Image Args of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
max_size	.\CL\cl.hpp	/^    unsigned int max_size (void) const$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
memBaseAddressAlign	.\SDKUtil\CLUtil.hpp	/^        cl_uint memBaseAddressAlign;        \/**< memBaseAddressAlign memBase AddressAlign of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
memBaseAddressAlign	.\SDKUtil\include\SDKCommon.hpp	/^		cl_uint memBaseAddressAlign;		\/**< memBaseAddressAlign memBase AddressAlign of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
minDataTypeAlignSize	.\SDKUtil\CLUtil.hpp	/^        cl_uint minDataTypeAlignSize;       \/**< minDataTypeAlignSize minDataType AlignSize of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
minDataTypeAlignSize	.\SDKUtil\include\SDKCommon.hpp	/^		cl_uint minDataTypeAlignSize;		\/**< minDataTypeAlignSize minDataType AlignSize of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
minor	.\SDKUtil\SDKUtil.hpp	/^    int minor;      \/**< SDK minor release number *\/$/;"	m	struct:appsdk::sdkVersionStr
minor	.\SDKUtil\include\SDKCommon.hpp	/^		int minor;		\/**< SDK minor release number *\/$/;"	m	struct:streamsdk::sdkVersionStr
multiDevice	.\SDKUtil\CLUtil.hpp	/^        bool multiDevice;              \/**< Cmd Line Option- if MultiGPU *\/$/;"	m	class:appsdk::CLCommandArgs
multiDevice	.\SDKUtil\include\SDKApplication.hpp	/^    bool multiDevice;                       \/**< Cmd Line Option- if MultiGPU *\/$/;"	m	class:SDKSample
name	.\SDKUtil\CLUtil.hpp	/^        char* name;                         \/**< name name of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
name	.\SDKUtil\SDKUtil.hpp	/^            std::string name;   \/**< name name of time object*\/$/;"	m	struct:appsdk::SDKTimer::Timer
name	.\SDKUtil\SDKUtil.hpp	/^        std::string name;                       \/**< Name of the Sample *\/$/;"	m	class:appsdk::SDKCmdArgsParser
name	.\SDKUtil\include\SDKApplication.hpp	/^    std::string name;                       \/**< Name of the Sample *\/$/;"	m	class:SDKSample
name	.\SDKUtil\include\SDKCommon.hpp	/^		char* name;							\/**< name name of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
name	.\SDKUtil\include\SDKCommon.hpp	/^		std::string name;   \/**< name name of time object*\/$/;"	m	struct:streamsdk::Timer
nativeCharVecWidth	.\SDKUtil\CLUtil.hpp	/^        cl_uint nativeCharVecWidth;         \/**< nativeCharVecWidth native Char VecWidth of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
nativeCharVecWidth	.\SDKUtil\include\SDKCommon.hpp	/^		cl_uint nativeCharVecWidth;		 	\/**< nativeCharVecWidth native Char VecWidth of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
nativeDoubleVecWidth	.\SDKUtil\CLUtil.hpp	/^        cl_uint nativeDoubleVecWidth;       \/**< nativeDoubleVecWidth native Double VecWidth of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
nativeDoubleVecWidth	.\SDKUtil\include\SDKCommon.hpp	/^		cl_uint nativeDoubleVecWidth;		\/**< nativeDoubleVecWidth native Double VecWidth of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
nativeFloatVecWidth	.\SDKUtil\CLUtil.hpp	/^        cl_uint nativeFloatVecWidth;        \/**< nativeFloatVecWidth native Float VecWidth of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
nativeFloatVecWidth	.\SDKUtil\include\SDKCommon.hpp	/^		cl_uint nativeFloatVecWidth;		\/**< nativeFloatVecWidth native Float VecWidth of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
nativeHalfVecWidth	.\SDKUtil\CLUtil.hpp	/^        cl_uint nativeHalfVecWidth;         \/**< nativeHalfVecWidth native Half VecWidth of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
nativeHalfVecWidth	.\SDKUtil\include\SDKCommon.hpp	/^		cl_uint nativeHalfVecWidth;			\/**< nativeHalfVecWidth native Half VecWidth of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
nativeIntVecWidth	.\SDKUtil\CLUtil.hpp	/^        cl_uint nativeIntVecWidth;          \/**< nativeIntVecWidth nativeIntVecWidth of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
nativeIntVecWidth	.\SDKUtil\include\SDKCommon.hpp	/^		cl_uint nativeIntVecWidth;			\/**< nativeIntVecWidth nativeIntVecWidth of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
nativeLongVecWidth	.\SDKUtil\CLUtil.hpp	/^        cl_uint nativeLongVecWidth;         \/**< nativeLongVecWidth nativeLongVecWidth of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
nativeLongVecWidth	.\SDKUtil\include\SDKCommon.hpp	/^		cl_uint nativeLongVecWidth;			\/**< nativeLongVecWidth nativeLongVecWidth of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
nativeShortVecWidth	.\SDKUtil\CLUtil.hpp	/^        cl_uint nativeShortVecWidth;        \/**< nativeShortVecWidth nativeShortVecWidth of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
nativeShortVecWidth	.\SDKUtil\include\SDKCommon.hpp	/^		cl_uint nativeShortVecWidth;		\/**< nativeShortVecWidth nativeShortVecWidth of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
numColors_	.\SDKUtil\include\SDKBitMap.hpp	/^    int numColors_;					\/**< Number of colors *\/$/;"	m	class:streamsdk::SDKBitMap
num_mip_levels	.\CL\cl.h	/^    cl_uint                 num_mip_levels;$/;"	m	struct:_cl_image_desc
num_samples	.\CL\cl.h	/^    cl_uint                 num_samples;$/;"	m	struct:_cl_image_desc
object_	.\CL\cl.hpp	/^    cl_type object_;$/;"	m	class:cl::detail::Wrapper
offset	.\SDKUtil\include\SDKBitMap.hpp	/^    int offset;$/;"	m	struct:streamsdk::__anon166
offset_	.\CL\cl.hpp	/^    const NDRange offset_;$/;"	m	struct:cl::EnqueueArgs
open	.\SDKUtil\SDKFile.cpp	/^SDKFile::open($/;"	f	class:streamsdk::SDKFile
open	.\SDKUtil\SDKFile.hpp	/^        bool open(const char* fileName)$/;"	f	class:appsdk::SDKFile
openclCVersion	.\SDKUtil\CLUtil.hpp	/^        char* openclCVersion;               \/**< openclCVersion opencl C Version of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
openclCVersion	.\SDKUtil\include\SDKCommon.hpp	/^		char* openclCVersion;				\/**< openclCVersion opencl C Version of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
operator !=	.\CL\cl.hpp	/^        bool operator!=(iterator i)$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED::iterator
operator ()	.\CL\cl.hpp	/^	Event operator()($/;"	f	struct:cl::detail::functionImplementation_
operator ()	.\CL\cl.hpp	/^    Event operator() ($/;"	f	class:cl::detail::KernelFunctorGlobal
operator ()	.\CL\cl.hpp	/^    cl_int operator ()($/;"	f	struct:cl::detail::GetInfoFunctor0
operator ()	.\CL\cl.hpp	/^    cl_int operator ()($/;"	f	struct:cl::detail::GetInfoFunctor1
operator ()	.\CL\cl.hpp	/^    cl_type operator ()() const { return object_; }$/;"	f	class:cl::detail::Wrapper
operator ()	.\CL\cl.hpp	/^    cl_type& operator ()() { return object_; }$/;"	f	class:cl::detail::Wrapper
operator *	.\CL\cl.hpp	/^        const T& operator *() const$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED::iterator
operator ++	.\CL\cl.hpp	/^        iterator operator++(int)$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED::iterator
operator ++	.\CL\cl.hpp	/^        iterator& operator++()$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED::iterator
operator --	.\CL\cl.hpp	/^        iterator operator--(int)$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED::iterator
operator --	.\CL\cl.hpp	/^        iterator& operator--()$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED::iterator
operator =	.\CL\cl.hpp	/^    Buffer& operator = (const Buffer& rhs)$/;"	f	class:cl::Buffer
operator =	.\CL\cl.hpp	/^    Buffer& operator = (const cl_mem& rhs)$/;"	f	class:cl::Buffer
operator =	.\CL\cl.hpp	/^    BufferD3D10& operator = (const BufferD3D10& rhs)$/;"	f	class:cl::BufferD3D10
operator =	.\CL\cl.hpp	/^    BufferD3D10& operator = (const cl_mem& rhs)$/;"	f	class:cl::BufferD3D10
operator =	.\CL\cl.hpp	/^    BufferGL& operator = (const BufferGL& rhs)$/;"	f	class:cl::BufferGL
operator =	.\CL\cl.hpp	/^    BufferGL& operator = (const cl_mem& rhs)$/;"	f	class:cl::BufferGL
operator =	.\CL\cl.hpp	/^    BufferRenderGL& operator = (const BufferRenderGL& rhs)$/;"	f	class:cl::BufferRenderGL
operator =	.\CL\cl.hpp	/^    BufferRenderGL& operator = (const cl_mem& rhs)$/;"	f	class:cl::BufferRenderGL
operator =	.\CL\cl.hpp	/^    CommandQueue& operator = (const CommandQueue& rhs)$/;"	f	class:cl::CommandQueue
operator =	.\CL\cl.hpp	/^    CommandQueue& operator = (const cl_command_queue& rhs)$/;"	f	class:cl::CommandQueue
operator =	.\CL\cl.hpp	/^    Context& operator = (const Context& rhs)$/;"	f	class:cl::Context
operator =	.\CL\cl.hpp	/^    Context& operator = (const cl_context& rhs)$/;"	f	class:cl::Context
operator =	.\CL\cl.hpp	/^    Device& operator = (const Device& rhs)$/;"	f	class:cl::Device
operator =	.\CL\cl.hpp	/^    Device& operator = (const cl_device_id& rhs)$/;"	f	class:cl::Device
operator =	.\CL\cl.hpp	/^    Event& operator = (const Event& rhs)$/;"	f	class:cl::Event
operator =	.\CL\cl.hpp	/^    Event& operator = (const cl_event& rhs)$/;"	f	class:cl::Event
operator =	.\CL\cl.hpp	/^    Image& operator = (const Image& rhs)$/;"	f	class:cl::Image
operator =	.\CL\cl.hpp	/^    Image& operator = (const cl_mem& rhs)$/;"	f	class:cl::Image
operator =	.\CL\cl.hpp	/^    Image1D& operator = (const Image1D& rhs)$/;"	f	class:cl::Image1D
operator =	.\CL\cl.hpp	/^    Image1D& operator = (const cl_mem& rhs)$/;"	f	class:cl::Image1D
operator =	.\CL\cl.hpp	/^    Image1DArray& operator = (const Image1DArray& rhs)$/;"	f	class:cl::Image1DArray
operator =	.\CL\cl.hpp	/^    Image1DArray& operator = (const cl_mem& rhs)$/;"	f	class:cl::Image1DArray
operator =	.\CL\cl.hpp	/^    Image1DBuffer& operator = (const Image1DBuffer& rhs)$/;"	f	class:cl::Image1DBuffer
operator =	.\CL\cl.hpp	/^    Image1DBuffer& operator = (const cl_mem& rhs)$/;"	f	class:cl::Image1DBuffer
operator =	.\CL\cl.hpp	/^    Image2D& operator = (const Image2D& rhs)$/;"	f	class:cl::Image2D
operator =	.\CL\cl.hpp	/^    Image2D& operator = (const cl_mem& rhs)$/;"	f	class:cl::Image2D
operator =	.\CL\cl.hpp	/^    Image2DArray& operator = (const Image2DArray& rhs)$/;"	f	class:cl::Image2DArray
operator =	.\CL\cl.hpp	/^    Image2DArray& operator = (const cl_mem& rhs)$/;"	f	class:cl::Image2DArray
operator =	.\CL\cl.hpp	/^    Image2DGL& operator = (const Image2DGL& rhs)$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
operator =	.\CL\cl.hpp	/^    Image2DGL& operator = (const cl_mem& rhs)$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
operator =	.\CL\cl.hpp	/^    Image3D& operator = (const Image3D& rhs)$/;"	f	class:cl::Image3D
operator =	.\CL\cl.hpp	/^    Image3D& operator = (const cl_mem& rhs)$/;"	f	class:cl::Image3D
operator =	.\CL\cl.hpp	/^    Image3DGL& operator = (const Image3DGL& rhs)$/;"	f	class:cl::Image3DGL
operator =	.\CL\cl.hpp	/^    Image3DGL& operator = (const cl_mem& rhs)$/;"	f	class:cl::Image3DGL
operator =	.\CL\cl.hpp	/^    ImageFormat& operator = (const ImageFormat& rhs)$/;"	f	struct:cl::ImageFormat
operator =	.\CL\cl.hpp	/^    ImageGL& operator = (const ImageGL& rhs)$/;"	f	class:cl::ImageGL
operator =	.\CL\cl.hpp	/^    ImageGL& operator = (const cl_mem& rhs)$/;"	f	class:cl::ImageGL
operator =	.\CL\cl.hpp	/^    Kernel& operator = (const Kernel& rhs)$/;"	f	class:cl::Kernel
operator =	.\CL\cl.hpp	/^    Kernel& operator = (const cl_kernel& rhs)$/;"	f	class:cl::Kernel
operator =	.\CL\cl.hpp	/^    Memory& operator = (const Memory& rhs)$/;"	f	class:cl::Memory
operator =	.\CL\cl.hpp	/^    Memory& operator = (const cl_mem& rhs)$/;"	f	class:cl::Memory
operator =	.\CL\cl.hpp	/^    Platform& operator = (const Platform& rhs)$/;"	f	class:cl::Platform
operator =	.\CL\cl.hpp	/^    Platform& operator = (const cl_platform_id& rhs)$/;"	f	class:cl::Platform
operator =	.\CL\cl.hpp	/^    Program& operator = (const Program& rhs)$/;"	f	class:cl::Program
operator =	.\CL\cl.hpp	/^    Program& operator = (const cl_program& rhs)$/;"	f	class:cl::Program
operator =	.\CL\cl.hpp	/^    Sampler& operator = (const Sampler& rhs)$/;"	f	class:cl::Sampler
operator =	.\CL\cl.hpp	/^    Sampler& operator = (const cl_sampler& rhs)$/;"	f	class:cl::Sampler
operator =	.\CL\cl.hpp	/^    UserEvent& operator = (const UserEvent& rhs)$/;"	f	class:cl::UserEvent
operator =	.\CL\cl.hpp	/^    Wrapper<cl_type>& operator = (const Wrapper<cl_type>& rhs)$/;"	f	class:cl::detail::Wrapper
operator =	.\CL\cl.hpp	/^    Wrapper<cl_type>& operator = (const cl_type &rhs)$/;"	f	class:cl::detail::Wrapper
operator =	.\CL\cl.hpp	/^    string& operator=(const string& rhs)$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
operator =	.\CL\cl.hpp	/^    vector<T, N>& operator=(const vector<T, N>& rhs)$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
operator =	.\SDKUtil\SDKBitMap.cpp	/^SDKBitMap& SDKBitMap::operator=(const SDKBitMap& rhs)$/;"	f	class:streamsdk::SDKBitMap
operator ==	.\CL\cl.hpp	/^        bool operator==(iterator i)$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED::iterator
operator ==	.\CL\cl.hpp	/^    bool operator==(vector<T,N> &vec)$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
operator T*	.\CL\cl.hpp	/^    operator T* ()             { return data_; }$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
operator []	.\CL\cl.hpp	/^    ::size_t& operator[](int index)$/;"	f	class:cl::size_t
operator []	.\CL\cl.hpp	/^    T& operator[](int index)$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
operator []	.\CL\cl.hpp	/^    char& operator[] ( ::size_t pos )$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
operator []	.\CL\cl.hpp	/^    const ::size_t& operator[](int index) const$/;"	f	class:cl::size_t
operator []	.\CL\cl.hpp	/^    const T& operator[](int index) const$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
operator []	.\CL\cl.hpp	/^    const char& operator[] ( ::size_t pos ) const$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
operator const ::size_t*	.\CL\cl.hpp	/^    operator const ::size_t* () const { return data_; }$/;"	f	class:cl::size_t
operator const ::size_t*	.\CL\cl.hpp	/^    operator const ::size_t*() const { $/;"	f	class:cl::NDRange
operator const T*	.\CL\cl.hpp	/^    operator const T* () const { return data_; }$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
origin	.\CL\cl.h	/^    size_t                  origin;$/;"	m	struct:_cl_buffer_region
param_traits	.\CL\cl.hpp	/^struct param_traits {};$/;"	s	namespace:cl::detail
parse	.\SDKUtil\SDKCommandArgs.cpp	/^int  SDKCommandArgs::parse(char ** p_argv, int p_argc)$/;"	f	class:streamsdk::SDKCommandArgs
parse	.\SDKUtil\SDKUtil.hpp	/^        int parse(char ** p_argv, int p_argc)$/;"	f	class:appsdk::SDKCmdArgsParser
parseCommandLine	.\SDKUtil\CLUtil.hpp	/^        int parseCommandLine(int argc, char **argv)$/;"	f	class:appsdk::CLCommandArgs
parseCommandLine	.\SDKUtil\SDKApplication.cpp	/^int SDKSample::parseCommandLine(int argc, char**argv)$/;"	f	class:SDKSample
pcie	.\CL\cl_ext.h	/^    struct { cl_uint type; cl_char unused[17]; cl_char bus; cl_char device; cl_char function; } pcie;$/;"	m	union:__anon1	typeref:struct:__anon1::__anon3
pixels_	.\SDKUtil\include\SDKBitMap.hpp	/^    uchar4 * pixels_;				\/**< Pixel Data *\/$/;"	m	class:streamsdk::SDKBitMap
planes	.\SDKUtil\include\SDKBitMap.hpp	/^    short planes;$/;"	m	struct:streamsdk::__anon167
platform	.\SDKUtil\CLUtil.hpp	/^        cl_platform_id platform;            \/**< platform platform of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
platform	.\SDKUtil\include\SDKCommon.hpp	/^		cl_platform_id platform;			\/**< platform platform of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
platformId	.\SDKUtil\CLUtil.hpp	/^        unsigned int platformId;       \/**< Cmd Line Option- platform number *\/$/;"	m	class:appsdk::CLCommandArgs
platformId	.\SDKUtil\include\SDKApplication.hpp	/^    unsigned int platformId;                \/**< Cmd Line Option- platform number *\/$/;"	m	class:SDKSample
pop_back	.\CL\cl.hpp	/^    void pop_back(void)$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
preferredCharVecWidth	.\SDKUtil\CLUtil.hpp	/^        cl_uint preferredCharVecWidth;      \/**< preferredCharVecWidth preferred Char VecWidth of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
preferredCharVecWidth	.\SDKUtil\include\SDKCommon.hpp	/^		cl_uint preferredCharVecWidth;		\/**< preferredCharVecWidth preferred Char VecWidth of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
preferredDoubleVecWidth	.\SDKUtil\CLUtil.hpp	/^        cl_uint preferredDoubleVecWidth;    \/**< preferredDoubleVecWidth preferred Double VecWidth of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
preferredDoubleVecWidth	.\SDKUtil\include\SDKCommon.hpp	/^		cl_uint preferredDoubleVecWidth;	\/**< preferredDoubleVecWidth preferred Double VecWidth of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
preferredFloatVecWidth	.\SDKUtil\CLUtil.hpp	/^        cl_uint preferredFloatVecWidth;     \/**< preferredFloatVecWidth preferredFloatVecWidth of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
preferredFloatVecWidth	.\SDKUtil\include\SDKCommon.hpp	/^		cl_uint preferredFloatVecWidth;		\/**< preferredFloatVecWidth preferredFloatVecWidth of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
preferredHalfVecWidth	.\SDKUtil\CLUtil.hpp	/^        cl_uint preferredHalfVecWidth;      \/**< preferredHalfVecWidth preferred Half VecWidth of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
preferredHalfVecWidth	.\SDKUtil\include\SDKCommon.hpp	/^		cl_uint preferredHalfVecWidth;		\/**< preferredHalfVecWidth preferred Half VecWidth of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
preferredIntVecWidth	.\SDKUtil\CLUtil.hpp	/^        cl_uint preferredIntVecWidth;       \/**< preferredIntVecWidth preferred Int VecWidth of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
preferredIntVecWidth	.\SDKUtil\include\SDKCommon.hpp	/^		cl_uint preferredIntVecWidth;		\/**< preferredIntVecWidth preferred Int VecWidth of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
preferredLongVecWidth	.\SDKUtil\CLUtil.hpp	/^        cl_uint preferredLongVecWidth;      \/**< preferredLongVecWidth preferred Long VecWidth of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
preferredLongVecWidth	.\SDKUtil\include\SDKCommon.hpp	/^		cl_uint preferredLongVecWidth;		\/**< preferredLongVecWidth preferred Long VecWidth of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
preferredShortVecWidth	.\SDKUtil\CLUtil.hpp	/^        cl_uint preferredShortVecWidth;     \/**< preferredShortVecWidth preferred Short VecWidth of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
preferredShortVecWidth	.\SDKUtil\include\SDKCommon.hpp	/^		cl_uint preferredShortVecWidth;		\/**< preferredShortVecWidth preferred Short VecWidth of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
printArray	.\SDKUtil\SDKCommon.cpp	/^void SDKCommon::printArray($/;"	f	class:streamsdk::SDKCommon
printArray	.\SDKUtil\SDKUtil.hpp	/^void printArray($/;"	f	namespace:appsdk
printStatistics	.\SDKUtil\SDKUtil.hpp	/^static void printStatistics(std::string *statsStr, std::string * stats, int n)$/;"	f	namespace:appsdk
printStats	.\SDKUtil\SDKApplication.cpp	/^void SDKSample::printStats(std::string *statsStr, std::string * stats, int n)$/;"	f	class:SDKSample
printTable	.\SDKUtil\SDKCommon.cpp	/^void SDKCommon::printTable(Table *t)$/;"	f	class:streamsdk::SDKCommon
profileType	.\SDKUtil\CLUtil.hpp	/^        char* profileType;                  \/**< profileType profile Type of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
profileType	.\SDKUtil\include\SDKCommon.hpp	/^		char* profileType;					\/**< profileType profile Type of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
ptr	.\CL\cl.hpp	/^    static T* ptr(T& value) { return &value; }$/;"	f	struct:cl::detail::KernelArgumentHandler
ptr	.\CL\cl.hpp	/^    static void* ptr(LocalSpaceArg&) { return NULL; }$/;"	f	struct:cl::detail::KernelArgumentHandler
push_back	.\CL\cl.hpp	/^    void push_back (const T& x)$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
queueProperties	.\SDKUtil\CLUtil.hpp	/^        queueProperties;\/**< queueProperties queueProperties of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
queueProperties	.\SDKUtil\include\SDKCommon.hpp	/^		cl_command_queue_properties queueProperties;\/**< queueProperties queueProperties of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
queue_	.\CL\cl.hpp	/^    CommandQueue queue_;$/;"	m	struct:cl::EnqueueArgs
quiet	.\SDKUtil\SDKUtil.hpp	/^        bool quiet;                 \/**< Cmd Line Option- if Quiet *\/$/;"	m	class:appsdk::SDKCmdArgsParser
quiet	.\SDKUtil\include\SDKApplication.hpp	/^    bool quiet;                             \/**< Cmd Line Option- if Quiet *\/$/;"	m	class:SDKSample
raw	.\CL\cl_ext.h	/^    struct { cl_uint type; cl_uint data[5]; } raw;$/;"	m	union:__anon1	typeref:struct:__anon1::__anon2
readBinaryFromFile	.\SDKUtil\SDKFile.cpp	/^SDKFile::readBinaryFromFile(const char* fileName)$/;"	f	class:streamsdk::SDKFile
readBinaryFromFile	.\SDKUtil\SDKFile.hpp	/^        int readBinaryFromFile(const char* fileName)$/;"	f	class:appsdk::SDKFile
readTimer	.\SDKUtil\SDKCommon.cpp	/^double SDKCommon::readTimer(int handle)$/;"	f	class:streamsdk::SDKCommon
readTimer	.\SDKUtil\SDKUtil.hpp	/^        double readTimer(int handle)$/;"	f	class:appsdk::SDKTimer
referenceCountable_	.\CL\cl.hpp	/^    bool referenceCountable_;$/;"	m	class:cl::detail::Wrapper
release	.\CL\cl.hpp	/^    cl_int release() const$/;"	f	class:cl::detail::Wrapper
release	.\CL\cl.hpp	/^    static cl_int release(cl_command_queue queue)$/;"	f	struct:cl::detail::ReferenceHandler
release	.\CL\cl.hpp	/^    static cl_int release(cl_context context)$/;"	f	struct:cl::detail::ReferenceHandler
release	.\CL\cl.hpp	/^    static cl_int release(cl_device_id device)$/;"	f	struct:cl::detail::ReferenceHandler
release	.\CL\cl.hpp	/^    static cl_int release(cl_device_id)$/;"	f	struct:cl::detail::ReferenceHandler
release	.\CL\cl.hpp	/^    static cl_int release(cl_event event)$/;"	f	struct:cl::detail::ReferenceHandler
release	.\CL\cl.hpp	/^    static cl_int release(cl_kernel kernel)$/;"	f	struct:cl::detail::ReferenceHandler
release	.\CL\cl.hpp	/^    static cl_int release(cl_mem memory)$/;"	f	struct:cl::detail::ReferenceHandler
release	.\CL\cl.hpp	/^    static cl_int release(cl_platform_id)$/;"	f	struct:cl::detail::ReferenceHandler
release	.\CL\cl.hpp	/^    static cl_int release(cl_program program)$/;"	f	struct:cl::detail::ReferenceHandler
release	.\CL\cl.hpp	/^    static cl_int release(cl_sampler sampler)$/;"	f	struct:cl::detail::ReferenceHandler
releaseResources	.\SDKUtil\SDKBitMap.cpp	/^SDKBitMap::releaseResources(void)$/;"	f	class:streamsdk::SDKBitMap
replaceNewlineWithSpaces	.\SDKUtil\SDKFile.hpp	/^        void replaceNewlineWithSpaces()$/;"	f	class:appsdk::SDKFile
replaceNewlineWithSpaces	.\SDKUtil\include\SDKFile.hpp	/^    void replaceNewlineWithSpaces()$/;"	f	class:streamsdk::SDKFile
reserved1	.\SDKUtil\include\SDKBitMap.hpp	/^    short reserved1;$/;"	m	struct:streamsdk::__anon166
reserved2	.\SDKUtil\include\SDKBitMap.hpp	/^    short reserved2;$/;"	m	struct:streamsdk::__anon166
resetTimer	.\SDKUtil\SDKCommon.cpp	/^int SDKCommon::resetTimer(int handle)$/;"	f	class:streamsdk::SDKCommon
resetTimer	.\SDKUtil\SDKUtil.hpp	/^        int resetTimer(int handle)$/;"	f	class:appsdk::SDKTimer
resize	.\CL\cl.hpp	/^    void resize( ::size_t n )$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
resource	.\CL\cl_dx9_media_sharing.h	/^    IDirect3DSurface9 *resource;$/;"	m	struct:_cl_dx9_surface_info_khr
result_type	.\CL\cl.hpp	/^	typedef Event result_type;$/;"	t	struct:cl::detail::functionImplementation_
retain	.\CL\cl.hpp	/^    cl_int retain() const$/;"	f	class:cl::detail::Wrapper
retain	.\CL\cl.hpp	/^    static cl_int retain(cl_command_queue queue)$/;"	f	struct:cl::detail::ReferenceHandler
retain	.\CL\cl.hpp	/^    static cl_int retain(cl_context context)$/;"	f	struct:cl::detail::ReferenceHandler
retain	.\CL\cl.hpp	/^    static cl_int retain(cl_device_id device)$/;"	f	struct:cl::detail::ReferenceHandler
retain	.\CL\cl.hpp	/^    static cl_int retain(cl_device_id)$/;"	f	struct:cl::detail::ReferenceHandler
retain	.\CL\cl.hpp	/^    static cl_int retain(cl_event event)$/;"	f	struct:cl::detail::ReferenceHandler
retain	.\CL\cl.hpp	/^    static cl_int retain(cl_kernel kernel)$/;"	f	struct:cl::detail::ReferenceHandler
retain	.\CL\cl.hpp	/^    static cl_int retain(cl_mem memory)$/;"	f	struct:cl::detail::ReferenceHandler
retain	.\CL\cl.hpp	/^    static cl_int retain(cl_platform_id)$/;"	f	struct:cl::detail::ReferenceHandler
retain	.\CL\cl.hpp	/^    static cl_int retain(cl_program program)$/;"	f	struct:cl::detail::ReferenceHandler
retain	.\CL\cl.hpp	/^    static cl_int retain(cl_sampler sampler)$/;"	f	struct:cl::detail::ReferenceHandler
revision	.\SDKUtil\SDKUtil.hpp	/^    int revision;   \/**< SDK revision number *\/$/;"	m	struct:appsdk::sdkVersionStr
revision	.\SDKUtil\include\SDKCommon.hpp	/^		int revision;	\/**< SDK revision number *\/$/;"	m	struct:streamsdk::sdkVersionStr
roundToPowerOf2	.\SDKUtil\SDKCommon.cpp	/^T SDKCommon::roundToPowerOf2(T val)$/;"	f	class:streamsdk::SDKCommon
roundToPowerOf2	.\SDKUtil\SDKUtil.hpp	/^T roundToPowerOf2(T val)$/;"	f	namespace:appsdk
s	.\CL\cl_platform.h	/^    cl_char   CL_ALIGNED(8) s[8];$/;"	m	union:__anon13
s	.\CL\cl_platform.h	/^    cl_char  CL_ALIGNED(16) s[16];$/;"	m	union:__anon17
s	.\CL\cl_platform.h	/^    cl_char  CL_ALIGNED(2) s[2];$/;"	m	union:__anon5
s	.\CL\cl_platform.h	/^    cl_char  CL_ALIGNED(4) s[4];$/;"	m	union:__anon9
s	.\CL\cl_platform.h	/^    cl_double   CL_ALIGNED(64) s[8];$/;"	m	union:__anon157
s	.\CL\cl_platform.h	/^    cl_double  CL_ALIGNED(128) s[16];$/;"	m	union:__anon161
s	.\CL\cl_platform.h	/^    cl_double  CL_ALIGNED(16) s[2];$/;"	m	union:__anon149
s	.\CL\cl_platform.h	/^    cl_double  CL_ALIGNED(32) s[4];$/;"	m	union:__anon153
s	.\CL\cl_platform.h	/^    cl_float   CL_ALIGNED(32) s[8];$/;"	m	union:__anon141
s	.\CL\cl_platform.h	/^    cl_float  CL_ALIGNED(16) s[4];$/;"	m	union:__anon137
s	.\CL\cl_platform.h	/^    cl_float  CL_ALIGNED(64) s[16];$/;"	m	union:__anon145
s	.\CL\cl_platform.h	/^    cl_float  CL_ALIGNED(8) s[2];$/;"	m	union:__anon133
s	.\CL\cl_platform.h	/^    cl_int   CL_ALIGNED(32) s[8];$/;"	m	union:__anon77
s	.\CL\cl_platform.h	/^    cl_int  CL_ALIGNED(16) s[4];$/;"	m	union:__anon73
s	.\CL\cl_platform.h	/^    cl_int  CL_ALIGNED(64) s[16];$/;"	m	union:__anon81
s	.\CL\cl_platform.h	/^    cl_int  CL_ALIGNED(8) s[2];$/;"	m	union:__anon69
s	.\CL\cl_platform.h	/^    cl_long   CL_ALIGNED(64) s[8];$/;"	m	union:__anon109
s	.\CL\cl_platform.h	/^    cl_long  CL_ALIGNED(128) s[16];$/;"	m	union:__anon113
s	.\CL\cl_platform.h	/^    cl_long  CL_ALIGNED(16) s[2];$/;"	m	union:__anon101
s	.\CL\cl_platform.h	/^    cl_long  CL_ALIGNED(32) s[4];$/;"	m	union:__anon105
s	.\CL\cl_platform.h	/^    cl_short   CL_ALIGNED(16) s[8];$/;"	m	union:__anon45
s	.\CL\cl_platform.h	/^    cl_short  CL_ALIGNED(32) s[16];$/;"	m	union:__anon49
s	.\CL\cl_platform.h	/^    cl_short  CL_ALIGNED(4) s[2];$/;"	m	union:__anon37
s	.\CL\cl_platform.h	/^    cl_short  CL_ALIGNED(8) s[4];$/;"	m	union:__anon41
s	.\CL\cl_platform.h	/^    cl_uchar   CL_ALIGNED(8) s[8];$/;"	m	union:__anon29
s	.\CL\cl_platform.h	/^    cl_uchar  CL_ALIGNED(16) s[16];$/;"	m	union:__anon33
s	.\CL\cl_platform.h	/^    cl_uchar  CL_ALIGNED(2) s[2];$/;"	m	union:__anon21
s	.\CL\cl_platform.h	/^    cl_uchar  CL_ALIGNED(4) s[4];$/;"	m	union:__anon25
s	.\CL\cl_platform.h	/^    cl_uint   CL_ALIGNED(32) s[8];$/;"	m	union:__anon93
s	.\CL\cl_platform.h	/^    cl_uint  CL_ALIGNED(16) s[4];$/;"	m	union:__anon89
s	.\CL\cl_platform.h	/^    cl_uint  CL_ALIGNED(64) s[16];$/;"	m	union:__anon97
s	.\CL\cl_platform.h	/^    cl_uint  CL_ALIGNED(8) s[2];$/;"	m	union:__anon85
s	.\CL\cl_platform.h	/^    cl_ulong   CL_ALIGNED(64) s[8];$/;"	m	union:__anon125
s	.\CL\cl_platform.h	/^    cl_ulong  CL_ALIGNED(128) s[16];$/;"	m	union:__anon129
s	.\CL\cl_platform.h	/^    cl_ulong  CL_ALIGNED(16) s[2];$/;"	m	union:__anon117
s	.\CL\cl_platform.h	/^    cl_ulong  CL_ALIGNED(32) s[4];$/;"	m	union:__anon121
s	.\CL\cl_platform.h	/^    cl_ushort   CL_ALIGNED(16) s[8];$/;"	m	union:__anon61
s	.\CL\cl_platform.h	/^    cl_ushort  CL_ALIGNED(32) s[16];$/;"	m	union:__anon65
s	.\CL\cl_platform.h	/^    cl_ushort  CL_ALIGNED(4) s[2];$/;"	m	union:__anon53
s	.\CL\cl_platform.h	/^    cl_ushort  CL_ALIGNED(8) s[4];$/;"	m	union:__anon57
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon17::__anon19
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon13::__anon15
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  s0, s1, s2, s3; };$/;"	m	struct:__anon9::__anon11
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  s0, s1; };$/;"	m	struct:__anon5::__anon7
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon161::__anon163
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon157::__anon159
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  s0, s1, s2, s3; };$/;"	m	struct:__anon153::__anon155
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double s0, s1; };$/;"	m	struct:__anon149::__anon151
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float   s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon141::__anon143
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float   s0, s1, s2, s3; };$/;"	m	struct:__anon137::__anon139
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon145::__anon147
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float  s0, s1; };$/;"	m	struct:__anon133::__anon135
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon81::__anon83
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon77::__anon79
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  s0, s1, s2, s3; };$/;"	m	struct:__anon73::__anon75
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  s0, s1; };$/;"	m	struct:__anon69::__anon71
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon113::__anon115
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon109::__anon111
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  s0, s1, s2, s3; };$/;"	m	struct:__anon105::__anon107
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  s0, s1; };$/;"	m	struct:__anon101::__anon103
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon49::__anon51
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon45::__anon47
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  s0, s1, s2, s3; };$/;"	m	struct:__anon41::__anon43
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  s0, s1; };$/;"	m	struct:__anon37::__anon39
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon33::__anon35
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon29::__anon31
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  s0, s1, s2, s3; };$/;"	m	struct:__anon25::__anon27
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  s0, s1; };$/;"	m	struct:__anon21::__anon23
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon97::__anon99
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon93::__anon95
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  s0, s1, s2, s3; };$/;"	m	struct:__anon89::__anon91
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  s0, s1; };$/;"	m	struct:__anon85::__anon87
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon129::__anon131
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon125::__anon127
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  s0, s1, s2, s3; };$/;"	m	struct:__anon121::__anon123
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  s0, s1; };$/;"	m	struct:__anon117::__anon119
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon65::__anon67
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon61::__anon63
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  s0, s1, s2, s3; };$/;"	m	struct:__anon57::__anon59
s0	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  s0, s1; };$/;"	m	struct:__anon53::__anon55
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon17::__anon19
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon13::__anon15
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  s0, s1, s2, s3; };$/;"	m	struct:__anon9::__anon11
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  s0, s1; };$/;"	m	struct:__anon5::__anon7
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon161::__anon163
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon157::__anon159
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  s0, s1, s2, s3; };$/;"	m	struct:__anon153::__anon155
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double s0, s1; };$/;"	m	struct:__anon149::__anon151
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float   s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon141::__anon143
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float   s0, s1, s2, s3; };$/;"	m	struct:__anon137::__anon139
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon145::__anon147
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float  s0, s1; };$/;"	m	struct:__anon133::__anon135
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon81::__anon83
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon77::__anon79
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  s0, s1, s2, s3; };$/;"	m	struct:__anon73::__anon75
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  s0, s1; };$/;"	m	struct:__anon69::__anon71
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon113::__anon115
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon109::__anon111
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  s0, s1, s2, s3; };$/;"	m	struct:__anon105::__anon107
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  s0, s1; };$/;"	m	struct:__anon101::__anon103
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon49::__anon51
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon45::__anon47
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  s0, s1, s2, s3; };$/;"	m	struct:__anon41::__anon43
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  s0, s1; };$/;"	m	struct:__anon37::__anon39
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon33::__anon35
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon29::__anon31
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  s0, s1, s2, s3; };$/;"	m	struct:__anon25::__anon27
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  s0, s1; };$/;"	m	struct:__anon21::__anon23
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon97::__anon99
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon93::__anon95
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  s0, s1, s2, s3; };$/;"	m	struct:__anon89::__anon91
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  s0, s1; };$/;"	m	struct:__anon85::__anon87
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon129::__anon131
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon125::__anon127
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  s0, s1, s2, s3; };$/;"	m	struct:__anon121::__anon123
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  s0, s1; };$/;"	m	struct:__anon117::__anon119
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon65::__anon67
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon61::__anon63
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  s0, s1, s2, s3; };$/;"	m	struct:__anon57::__anon59
s1	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  s0, s1; };$/;"	m	struct:__anon53::__anon55
s2	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon17::__anon19
s2	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon13::__anon15
s2	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  s0, s1, s2, s3; };$/;"	m	struct:__anon9::__anon11
s2	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon161::__anon163
s2	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon157::__anon159
s2	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  s0, s1, s2, s3; };$/;"	m	struct:__anon153::__anon155
s2	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float   s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon141::__anon143
s2	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float   s0, s1, s2, s3; };$/;"	m	struct:__anon137::__anon139
s2	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon145::__anon147
s2	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon81::__anon83
s2	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon77::__anon79
s2	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  s0, s1, s2, s3; };$/;"	m	struct:__anon73::__anon75
s2	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon113::__anon115
s2	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon109::__anon111
s2	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  s0, s1, s2, s3; };$/;"	m	struct:__anon105::__anon107
s2	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon49::__anon51
s2	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon45::__anon47
s2	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  s0, s1, s2, s3; };$/;"	m	struct:__anon41::__anon43
s2	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon33::__anon35
s2	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon29::__anon31
s2	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  s0, s1, s2, s3; };$/;"	m	struct:__anon25::__anon27
s2	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon97::__anon99
s2	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon93::__anon95
s2	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  s0, s1, s2, s3; };$/;"	m	struct:__anon89::__anon91
s2	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon129::__anon131
s2	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon125::__anon127
s2	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  s0, s1, s2, s3; };$/;"	m	struct:__anon121::__anon123
s2	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon65::__anon67
s2	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon61::__anon63
s2	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  s0, s1, s2, s3; };$/;"	m	struct:__anon57::__anon59
s3	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon17::__anon19
s3	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon13::__anon15
s3	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  s0, s1, s2, s3; };$/;"	m	struct:__anon9::__anon11
s3	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon161::__anon163
s3	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon157::__anon159
s3	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  s0, s1, s2, s3; };$/;"	m	struct:__anon153::__anon155
s3	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float   s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon141::__anon143
s3	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float   s0, s1, s2, s3; };$/;"	m	struct:__anon137::__anon139
s3	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon145::__anon147
s3	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon81::__anon83
s3	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon77::__anon79
s3	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  s0, s1, s2, s3; };$/;"	m	struct:__anon73::__anon75
s3	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon113::__anon115
s3	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon109::__anon111
s3	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  s0, s1, s2, s3; };$/;"	m	struct:__anon105::__anon107
s3	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon49::__anon51
s3	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon45::__anon47
s3	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  s0, s1, s2, s3; };$/;"	m	struct:__anon41::__anon43
s3	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon33::__anon35
s3	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon29::__anon31
s3	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  s0, s1, s2, s3; };$/;"	m	struct:__anon25::__anon27
s3	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon97::__anon99
s3	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon93::__anon95
s3	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  s0, s1, s2, s3; };$/;"	m	struct:__anon89::__anon91
s3	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon129::__anon131
s3	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon125::__anon127
s3	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  s0, s1, s2, s3; };$/;"	m	struct:__anon121::__anon123
s3	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon65::__anon67
s3	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon61::__anon63
s3	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  s0, s1, s2, s3; };$/;"	m	struct:__anon57::__anon59
s4	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon17::__anon19
s4	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon13::__anon15
s4	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon161::__anon163
s4	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon157::__anon159
s4	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float   s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon141::__anon143
s4	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon145::__anon147
s4	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon81::__anon83
s4	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon77::__anon79
s4	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon113::__anon115
s4	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon109::__anon111
s4	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon49::__anon51
s4	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon45::__anon47
s4	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon33::__anon35
s4	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon29::__anon31
s4	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon97::__anon99
s4	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon93::__anon95
s4	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon129::__anon131
s4	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon125::__anon127
s4	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon65::__anon67
s4	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon61::__anon63
s5	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon17::__anon19
s5	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon13::__anon15
s5	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon161::__anon163
s5	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon157::__anon159
s5	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float   s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon141::__anon143
s5	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon145::__anon147
s5	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon81::__anon83
s5	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon77::__anon79
s5	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon113::__anon115
s5	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon109::__anon111
s5	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon49::__anon51
s5	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon45::__anon47
s5	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon33::__anon35
s5	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon29::__anon31
s5	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon97::__anon99
s5	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon93::__anon95
s5	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon129::__anon131
s5	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon125::__anon127
s5	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon65::__anon67
s5	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon61::__anon63
s6	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon17::__anon19
s6	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon13::__anon15
s6	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon161::__anon163
s6	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon157::__anon159
s6	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float   s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon141::__anon143
s6	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon145::__anon147
s6	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon81::__anon83
s6	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon77::__anon79
s6	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon113::__anon115
s6	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon109::__anon111
s6	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon49::__anon51
s6	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon45::__anon47
s6	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon33::__anon35
s6	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon29::__anon31
s6	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon97::__anon99
s6	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon93::__anon95
s6	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon129::__anon131
s6	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon125::__anon127
s6	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon65::__anon67
s6	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon61::__anon63
s7	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon17::__anon19
s7	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon13::__anon15
s7	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon161::__anon163
s7	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon157::__anon159
s7	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float   s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon141::__anon143
s7	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon145::__anon147
s7	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon81::__anon83
s7	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon77::__anon79
s7	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon113::__anon115
s7	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon109::__anon111
s7	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon49::__anon51
s7	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon45::__anon47
s7	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon33::__anon35
s7	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon29::__anon31
s7	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon97::__anon99
s7	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon93::__anon95
s7	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon129::__anon131
s7	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon125::__anon127
s7	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon65::__anon67
s7	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  s0, s1, s2, s3, s4, s5, s6, s7; };$/;"	m	struct:__anon61::__anon63
s8	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon17::__anon19
s8	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon161::__anon163
s8	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon145::__anon147
s8	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon81::__anon83
s8	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon113::__anon115
s8	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon49::__anon51
s8	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon33::__anon35
s8	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon97::__anon99
s8	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon129::__anon131
s8	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon65::__anon67
s9	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon17::__anon19
s9	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon161::__anon163
s9	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon145::__anon147
s9	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon81::__anon83
s9	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon113::__anon115
s9	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon49::__anon51
s9	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon33::__anon35
s9	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon97::__anon99
s9	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon129::__anon131
s9	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon65::__anon67
sA	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon17::__anon19
sA	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon161::__anon163
sA	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon145::__anon147
sA	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon81::__anon83
sA	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon113::__anon115
sA	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon49::__anon51
sA	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon33::__anon35
sA	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon97::__anon99
sA	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon129::__anon131
sA	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon65::__anon67
sB	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon17::__anon19
sB	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon161::__anon163
sB	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon145::__anon147
sB	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon81::__anon83
sB	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon113::__anon115
sB	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon49::__anon51
sB	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon33::__anon35
sB	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon97::__anon99
sB	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon129::__anon131
sB	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon65::__anon67
sC	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon17::__anon19
sC	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon161::__anon163
sC	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon145::__anon147
sC	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon81::__anon83
sC	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon113::__anon115
sC	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon49::__anon51
sC	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon33::__anon35
sC	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon97::__anon99
sC	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon129::__anon131
sC	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon65::__anon67
sD	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon17::__anon19
sD	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon161::__anon163
sD	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon145::__anon147
sD	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon81::__anon83
sD	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon113::__anon115
sD	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon49::__anon51
sD	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon33::__anon35
sD	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon97::__anon99
sD	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon129::__anon131
sD	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon65::__anon67
sE	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon17::__anon19
sE	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon161::__anon163
sE	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon145::__anon147
sE	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon81::__anon83
sE	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon113::__anon115
sE	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon49::__anon51
sE	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon33::__anon35
sE	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon97::__anon99
sE	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon129::__anon131
sE	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon65::__anon67
sF	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon17::__anon19
sF	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon161::__anon163
sF	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon145::__anon147
sF	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon81::__anon83
sF	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon113::__anon115
sF	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon49::__anon51
sF	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon33::__anon35
sF	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon97::__anon99
sF	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon129::__anon131
sF	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sA, sB, sC, sD, sE, sF; };$/;"	m	struct:__anon65::__anon67
sa	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon17::__anon18
sa	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon161::__anon162
sa	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon145::__anon146
sa	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon81::__anon82
sa	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon113::__anon114
sa	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon49::__anon50
sa	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon33::__anon34
sa	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon97::__anon98
sa	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon129::__anon130
sa	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon65::__anon66
sampleArgs	.\SDKUtil\include\SDKApplication.hpp	/^    streamsdk::SDKCommandArgs *sampleArgs;  \/**< SDKCommandArgs class object to handle comd line options *\/$/;"	m	class:SDKSample
sampleCommon	.\SDKUtil\include\SDKApplication.hpp	/^    streamsdk::SDKCommon * sampleCommon;    \/**< SDKCommon class object *\/	$/;"	m	class:SDKSample
sampleVerStr	.\SDKUtil\SDKUtil.hpp	/^		std::string sampleVerStr;   \/**< Sample version string *\/$/;"	m	class:appsdk::SDKCmdArgsParser
sb	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon17::__anon18
sb	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon161::__anon162
sb	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon145::__anon146
sb	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon81::__anon82
sb	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon113::__anon114
sb	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon49::__anon50
sb	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon33::__anon34
sb	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon97::__anon98
sb	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon129::__anon130
sb	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon65::__anon66
sc	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon17::__anon18
sc	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon161::__anon162
sc	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon145::__anon146
sc	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon81::__anon82
sc	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon113::__anon114
sc	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon49::__anon50
sc	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon33::__anon34
sc	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon97::__anon98
sc	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon129::__anon130
sc	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon65::__anon66
sd	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon17::__anon18
sd	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon161::__anon162
sd	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon145::__anon146
sd	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon81::__anon82
sd	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon113::__anon114
sd	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon49::__anon50
sd	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon33::__anon34
sd	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon97::__anon98
sd	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon129::__anon130
sd	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon65::__anon66
sdkVerStr	.\SDKUtil\SDKUtil.hpp	/^        sdkVersionStr sdkVerStr;     \/**< SDK version string *\/$/;"	m	class:appsdk::SDKCmdArgsParser
sdkVerStr	.\SDKUtil\SDKUtil.hpp	/^} sdkVerStr;$/;"	v	typeref:struct:appsdk::sdkVersionStr
sdkVerStr	.\SDKUtil\include\SDKApplication.hpp	/^    streamsdk::sdkVersionStr sdkVerStr;     \/**< SDK version string *\/$/;"	m	class:SDKSample
sdkVersionStr	.\SDKUtil\SDKUtil.hpp	/^     inline sdkVersionStr()$/;"	f	struct:appsdk::sdkVersionStr
sdkVersionStr	.\SDKUtil\SDKUtil.hpp	/^static struct sdkVersionStr$/;"	s	namespace:appsdk
sdkVersionStr	.\SDKUtil\include\SDKCommon.hpp	/^		sdkVersionStr()$/;"	f	struct:streamsdk::sdkVersionStr
sdkVersionStr	.\SDKUtil\include\SDKCommon.hpp	/^	struct sdkVersionStr$/;"	s	namespace:streamsdk
se	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon17::__anon18
se	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon161::__anon162
se	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon145::__anon146
se	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon81::__anon82
se	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon113::__anon114
se	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon49::__anon50
se	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon33::__anon34
se	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon97::__anon98
se	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon129::__anon130
se	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon65::__anon66
set	.\CL\cl.hpp	/^    static void set (Kernel kernel, T0 arg)$/;"	f	struct:cl::detail::SetArg
set	.\CL\cl.hpp	/^    static void set (Kernel, NullType)$/;"	f	struct:cl::detail::SetArg
setArg	.\CL\cl.hpp	/^    cl_int setArg(cl_uint index, ::size_t size, void* argPtr)$/;"	f	class:cl::Kernel
setArg	.\CL\cl.hpp	/^    cl_int setArg(cl_uint index, T value)$/;"	f	class:cl::Kernel
setCallback	.\CL\cl.hpp	/^    cl_int setCallback($/;"	f	class:cl::Event
setDestructorCallback	.\CL\cl.hpp	/^    cl_int setDestructorCallback($/;"	f	class:cl::Memory
setDeviceInfo	.\SDKUtil\CLUtil.hpp	/^        int setDeviceInfo(cl_device_id deviceId)$/;"	f	class:appsdk::SDKDeviceInfo
setDeviceInfo	.\SDKUtil\SDKCommon.cpp	/^SDKDeviceInfo::setDeviceInfo(cl_device_id deviceId)$/;"	f	class:streamsdk::SDKDeviceInfo
setKernelWorkGroupInfo	.\SDKUtil\CLUtil.hpp	/^        int setKernelWorkGroupInfo(cl_kernel &kernel,cl_device_id &deviceId)$/;"	f	class:appsdk::KernelWorkGroupInfo
setKernelWorkGroupInfo	.\SDKUtil\SDKCommon.cpp	/^int KernelWorkGroupInfo::setKernelWorkGroupInfo(cl_kernel &kernel,cl_device_id &device)$/;"	f	class:streamsdk::KernelWorkGroupInfo
setStatus	.\CL\cl.hpp	/^    cl_int setStatus(cl_int status)$/;"	f	class:cl::UserEvent
sf	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon17::__anon18
sf	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon161::__anon162
sf	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon145::__anon146
sf	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon81::__anon82
sf	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon113::__anon114
sf	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon49::__anon50
sf	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon33::__anon34
sf	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon97::__anon98
sf	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon129::__anon130
sf	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon65::__anon66
shared_handle	.\CL\cl_dx9_media_sharing.h	/^    HANDLE shared_handle;$/;"	m	struct:_cl_dx9_surface_info_khr
singleFpConfig	.\SDKUtil\CLUtil.hpp	/^        singleFpConfig; \/**< singleFpConfig singleFpConfig of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
singleFpConfig	.\SDKUtil\include\SDKCommon.hpp	/^		cl_device_fp_config singleFpConfig;	\/**< singleFpConfig singleFpConfig of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
size	.\CL\cl.h	/^    size_t                  size;$/;"	m	struct:_cl_buffer_region
size	.\CL\cl.hpp	/^    ::size_t size(void) const   { return size_; }$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
size	.\CL\cl.hpp	/^    static ::size_t size(const LocalSpaceArg& value) { return value.size_; }$/;"	f	struct:cl::detail::KernelArgumentHandler
size	.\CL\cl.hpp	/^    static ::size_t size(const T&) { return sizeof(T); }$/;"	f	struct:cl::detail::KernelArgumentHandler
size	.\CL\cl.hpp	/^    unsigned int size(void) const$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
size	.\SDKUtil\include\SDKBitMap.hpp	/^    int size;$/;"	m	struct:streamsdk::__anon166
sizeInfo	.\SDKUtil\include\SDKBitMap.hpp	/^    int sizeInfo;$/;"	m	struct:streamsdk::__anon167
size_	.\CL\cl.hpp	/^    ::size_t size_;$/;"	m	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
size_	.\CL\cl.hpp	/^    ::size_t size_;$/;"	m	struct:cl::LocalSpaceArg
size_	.\CL\cl.hpp	/^    unsigned int size_;$/;"	m	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
size_t	.\CL\cl.hpp	/^    size_t()$/;"	f	class:cl::size_t
size_t	.\CL\cl.hpp	/^class size_t$/;"	c	namespace:cl
sizes_	.\CL\cl.hpp	/^    size_t<3> sizes_;$/;"	m	class:cl::NDRange
source	.\SDKUtil\SDKFile.hpp	/^        const std::string&  source() const$/;"	f	class:appsdk::SDKFile
source	.\SDKUtil\include\SDKFile.hpp	/^    const std::string&  source() const { return source_; }$/;"	f	class:streamsdk::SDKFile
source_	.\SDKUtil\SDKFile.hpp	/^        std::string     source_;    \/\/!< source code of the CL program$/;"	m	class:appsdk::SDKFile
source_	.\SDKUtil\include\SDKFile.hpp	/^    std::string     source_;    \/\/!< source code of the CL program$/;"	m	class:streamsdk::SDKFile
startTimer	.\SDKUtil\SDKCommon.cpp	/^int SDKCommon::startTimer(int handle)$/;"	f	class:streamsdk::SDKCommon
startTimer	.\SDKUtil\SDKUtil.hpp	/^        int startTimer(int handle)$/;"	f	class:appsdk::SDKTimer
stopTimer	.\SDKUtil\SDKCommon.cpp	/^int SDKCommon::stopTimer(int handle)$/;"	f	class:streamsdk::SDKCommon
stopTimer	.\SDKUtil\SDKUtil.hpp	/^        int stopTimer(int handle)$/;"	f	class:appsdk::SDKTimer
strComparei	.\SDKUtil\SDKUtil.hpp	/^static bool strComparei(std::string a, std::string b)$/;"	f	namespace:appsdk
str_	.\CL\cl.hpp	/^    char * str_;$/;"	m	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
streamsdk	.\SDKUtil\SDKBitMap.cpp	/^namespace streamsdk$/;"	n	file:
streamsdk	.\SDKUtil\SDKCommandArgs.cpp	/^namespace streamsdk$/;"	n	file:
streamsdk	.\SDKUtil\SDKCommon.cpp	/^namespace streamsdk$/;"	n	file:
streamsdk	.\SDKUtil\SDKFile.cpp	/^namespace streamsdk$/;"	n	file:
streamsdk	.\SDKUtil\SDKThread.cpp	/^namespace streamsdk$/;"	n	file:
streamsdk	.\SDKUtil\include\SDKBitMap.hpp	/^namespace streamsdk$/;"	n
streamsdk	.\SDKUtil\include\SDKCommandArgs.hpp	/^namespace streamsdk$/;"	n
streamsdk	.\SDKUtil\include\SDKCommon.hpp	/^namespace streamsdk$/;"	n
streamsdk	.\SDKUtil\include\SDKFile.hpp	/^namespace streamsdk$/;"	n
streamsdk	.\SDKUtil\include\SDKThread.hpp	/^namespace streamsdk$/;"	n
string	.\CL\cl.hpp	/^    string(const char * str) :$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
string	.\CL\cl.hpp	/^    string(const char * str, ::size_t size) :$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
string	.\CL\cl.hpp	/^    string(const string& rhs) :$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
string	.\CL\cl.hpp	/^    string(void) : size_(0), str_(NULL)$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
subminor	.\SDKUtil\SDKUtil.hpp	/^    int subminor;   \/**< SDK sub-minor release number *\/$/;"	m	struct:appsdk::sdkVersionStr
surface_bus_address	.\CL\cl_ext.h	/^        cl_ulong surface_bus_address;$/;"	m	struct:__anon4
syncThreads	.\SDKUtil\SDKThread.cpp	/^    CondVar::syncThreads()$/;"	f	class:streamsdk::CondVar
syncThreads	.\SDKUtil\SDKThread.cpp	/^    CondVarImpl::syncThreads()$/;"	f	class:streamsdk::CondVarImpl
threadFunc	.\SDKUtil\include\SDKThread.hpp	/^    typedef void* (*threadFunc)(void*);$/;"	t	namespace:streamsdk
timerResolution	.\SDKUtil\CLUtil.hpp	/^        size_t timerResolution;             \/**< timerResolution timerResolution of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
timerResolution	.\SDKUtil\include\SDKCommon.hpp	/^		size_t timerResolution;				\/**< timerResolution timerResolution of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
timing	.\SDKUtil\SDKUtil.hpp	/^        bool timing;                \/**< Cmd Line Option- if Timing *\/$/;"	m	class:appsdk::SDKCmdArgsParser
timing	.\SDKUtil\include\SDKApplication.hpp	/^    bool timing;                            \/**< Cmd Line Option- if Timing *\/$/;"	m	class:SDKSample
toString	.\SDKUtil\SDKCommon.cpp	/^std::string SDKCommon::toString(T t, std::ios_base &(*r)(std::ios_base&))$/;"	f	class:streamsdk::SDKCommon
toString	.\SDKUtil\SDKUtil.hpp	/^std::string toString(T t, std::ios_base & (*r)(std::ios_base&) = std::dec)$/;"	f	namespace:appsdk
totalTime	.\SDKUtil\SDKUtil.hpp	/^        double totalTime;                 \/** total time taken *\/$/;"	m	class:appsdk::SDKTimer
totalTime	.\SDKUtil\include\SDKApplication.hpp	/^    double totalTime;                       \/**< Total Time taken by the Sample *\/$/;"	m	class:SDKSample
tryLock	.\SDKUtil\SDKThread.cpp	/^    ThreadLock::tryLock()$/;"	f	class:streamsdk::ThreadLock
type	.\CL\cl_ext.h	/^    struct { cl_uint type; cl_char unused[17]; cl_char bus; cl_char device; cl_char function; } pcie;$/;"	m	struct:__anon1::__anon3
type	.\CL\cl_ext.h	/^    struct { cl_uint type; cl_uint data[5]; } raw;$/;"	m	struct:__anon1::__anon2
type_	.\CL\cl.hpp	/^	typedef Event type_($/;"	t	struct:cl::detail::functionImplementation_
uchar4	.\SDKUtil\include\SDKBitMap.hpp	/^} uchar4;$/;"	t	namespace:streamsdk	typeref:struct:streamsdk::__anon165
unloadCompiler	.\CL\cl.hpp	/^    unloadCompiler()$/;"	f	class:cl::Platform
unlock	.\SDKUtil\SDKThread.cpp	/^    ThreadLock::unlock()$/;"	f	class:streamsdk::ThreadLock
unused	.\CL\cl_ext.h	/^    struct { cl_uint type; cl_char unused[17]; cl_char bus; cl_char device; cl_char function; } pcie;$/;"	m	struct:__anon1::__anon3
usage	.\SDKUtil\SDKApplication.cpp	/^void SDKSample::usage()$/;"	f	class:SDKSample
usage	.\SDKUtil\SDKUtil.hpp	/^        void usage()$/;"	f	class:appsdk::SDKCmdArgsParser
v16	.\CL\cl_platform.h	/^    __cl_char16    v16;$/;"	m	union:__anon17
v16	.\CL\cl_platform.h	/^    __cl_double16    v16;$/;"	m	union:__anon161
v16	.\CL\cl_platform.h	/^    __cl_float16    v16;$/;"	m	union:__anon145
v16	.\CL\cl_platform.h	/^    __cl_int16    v16;$/;"	m	union:__anon81
v16	.\CL\cl_platform.h	/^    __cl_long16    v16;$/;"	m	union:__anon113
v16	.\CL\cl_platform.h	/^    __cl_short16    v16;$/;"	m	union:__anon49
v16	.\CL\cl_platform.h	/^    __cl_uchar16    v16;$/;"	m	union:__anon33
v16	.\CL\cl_platform.h	/^    __cl_uint16    v16;$/;"	m	union:__anon97
v16	.\CL\cl_platform.h	/^    __cl_ulong16    v16;$/;"	m	union:__anon129
v16	.\CL\cl_platform.h	/^    __cl_ushort16    v16;$/;"	m	union:__anon65
v2	.\CL\cl_platform.h	/^    __cl_char2     v2;$/;"	m	union:__anon5
v2	.\CL\cl_platform.h	/^    __cl_char2     v2[2];$/;"	m	union:__anon9
v2	.\CL\cl_platform.h	/^    __cl_char2     v2[4];$/;"	m	union:__anon13
v2	.\CL\cl_platform.h	/^    __cl_char2     v2[8];$/;"	m	union:__anon17
v2	.\CL\cl_platform.h	/^    __cl_double2     v2;$/;"	m	union:__anon149
v2	.\CL\cl_platform.h	/^    __cl_double2     v2[2];$/;"	m	union:__anon153
v2	.\CL\cl_platform.h	/^    __cl_double2     v2[4];$/;"	m	union:__anon157
v2	.\CL\cl_platform.h	/^    __cl_double2     v2[8];$/;"	m	union:__anon161
v2	.\CL\cl_platform.h	/^    __cl_float2     v2;$/;"	m	union:__anon133
v2	.\CL\cl_platform.h	/^    __cl_float2     v2[2];$/;"	m	union:__anon137
v2	.\CL\cl_platform.h	/^    __cl_float2     v2[4];$/;"	m	union:__anon141
v2	.\CL\cl_platform.h	/^    __cl_float2     v2[8];$/;"	m	union:__anon145
v2	.\CL\cl_platform.h	/^    __cl_int2     v2;$/;"	m	union:__anon69
v2	.\CL\cl_platform.h	/^    __cl_int2     v2[2];$/;"	m	union:__anon73
v2	.\CL\cl_platform.h	/^    __cl_int2     v2[4];$/;"	m	union:__anon77
v2	.\CL\cl_platform.h	/^    __cl_int2     v2[8];$/;"	m	union:__anon81
v2	.\CL\cl_platform.h	/^    __cl_long2     v2;$/;"	m	union:__anon101
v2	.\CL\cl_platform.h	/^    __cl_long2     v2[2];$/;"	m	union:__anon105
v2	.\CL\cl_platform.h	/^    __cl_long2     v2[4];$/;"	m	union:__anon109
v2	.\CL\cl_platform.h	/^    __cl_long2     v2[8];$/;"	m	union:__anon113
v2	.\CL\cl_platform.h	/^    __cl_short2     v2;$/;"	m	union:__anon37
v2	.\CL\cl_platform.h	/^    __cl_short2     v2[2];$/;"	m	union:__anon41
v2	.\CL\cl_platform.h	/^    __cl_short2     v2[4];$/;"	m	union:__anon45
v2	.\CL\cl_platform.h	/^    __cl_short2     v2[8];$/;"	m	union:__anon49
v2	.\CL\cl_platform.h	/^    __cl_uchar2     v2;$/;"	m	union:__anon21
v2	.\CL\cl_platform.h	/^    __cl_uchar2     v2[2];$/;"	m	union:__anon25
v2	.\CL\cl_platform.h	/^    __cl_uchar2     v2[4];$/;"	m	union:__anon29
v2	.\CL\cl_platform.h	/^    __cl_uchar2     v2[8];$/;"	m	union:__anon33
v2	.\CL\cl_platform.h	/^    __cl_uint2     v2;$/;"	m	union:__anon85
v2	.\CL\cl_platform.h	/^    __cl_uint2     v2[2];$/;"	m	union:__anon89
v2	.\CL\cl_platform.h	/^    __cl_uint2     v2[4];$/;"	m	union:__anon93
v2	.\CL\cl_platform.h	/^    __cl_uint2     v2[8];$/;"	m	union:__anon97
v2	.\CL\cl_platform.h	/^    __cl_ulong2     v2;$/;"	m	union:__anon117
v2	.\CL\cl_platform.h	/^    __cl_ulong2     v2[2];$/;"	m	union:__anon121
v2	.\CL\cl_platform.h	/^    __cl_ulong2     v2[4];$/;"	m	union:__anon125
v2	.\CL\cl_platform.h	/^    __cl_ulong2     v2[8];$/;"	m	union:__anon129
v2	.\CL\cl_platform.h	/^    __cl_ushort2     v2;$/;"	m	union:__anon53
v2	.\CL\cl_platform.h	/^    __cl_ushort2     v2[2];$/;"	m	union:__anon57
v2	.\CL\cl_platform.h	/^    __cl_ushort2     v2[4];$/;"	m	union:__anon61
v2	.\CL\cl_platform.h	/^    __cl_ushort2     v2[8];$/;"	m	union:__anon65
v4	.\CL\cl_platform.h	/^    __cl_char4     v4;$/;"	m	union:__anon9
v4	.\CL\cl_platform.h	/^    __cl_char4     v4[2];$/;"	m	union:__anon13
v4	.\CL\cl_platform.h	/^    __cl_char4     v4[4];$/;"	m	union:__anon17
v4	.\CL\cl_platform.h	/^    __cl_double4     v4;$/;"	m	union:__anon153
v4	.\CL\cl_platform.h	/^    __cl_double4     v4[2];$/;"	m	union:__anon157
v4	.\CL\cl_platform.h	/^    __cl_double4     v4[4];$/;"	m	union:__anon161
v4	.\CL\cl_platform.h	/^    __cl_float4     v4;$/;"	m	union:__anon137
v4	.\CL\cl_platform.h	/^    __cl_float4     v4[2];$/;"	m	union:__anon141
v4	.\CL\cl_platform.h	/^    __cl_float4     v4[4];$/;"	m	union:__anon145
v4	.\CL\cl_platform.h	/^    __cl_int4     v4;$/;"	m	union:__anon73
v4	.\CL\cl_platform.h	/^    __cl_int4     v4[2];$/;"	m	union:__anon77
v4	.\CL\cl_platform.h	/^    __cl_int4     v4[4];$/;"	m	union:__anon81
v4	.\CL\cl_platform.h	/^    __cl_long4     v4;$/;"	m	union:__anon105
v4	.\CL\cl_platform.h	/^    __cl_long4     v4[2];$/;"	m	union:__anon109
v4	.\CL\cl_platform.h	/^    __cl_long4     v4[4];$/;"	m	union:__anon113
v4	.\CL\cl_platform.h	/^    __cl_short4     v4;$/;"	m	union:__anon41
v4	.\CL\cl_platform.h	/^    __cl_short4     v4[2];$/;"	m	union:__anon45
v4	.\CL\cl_platform.h	/^    __cl_short4     v4[4];$/;"	m	union:__anon49
v4	.\CL\cl_platform.h	/^    __cl_uchar4     v4;$/;"	m	union:__anon25
v4	.\CL\cl_platform.h	/^    __cl_uchar4     v4[2];$/;"	m	union:__anon29
v4	.\CL\cl_platform.h	/^    __cl_uchar4     v4[4];$/;"	m	union:__anon33
v4	.\CL\cl_platform.h	/^    __cl_uint4     v4;$/;"	m	union:__anon89
v4	.\CL\cl_platform.h	/^    __cl_uint4     v4[2];$/;"	m	union:__anon93
v4	.\CL\cl_platform.h	/^    __cl_uint4     v4[4];$/;"	m	union:__anon97
v4	.\CL\cl_platform.h	/^    __cl_ulong4     v4;$/;"	m	union:__anon121
v4	.\CL\cl_platform.h	/^    __cl_ulong4     v4[2];$/;"	m	union:__anon125
v4	.\CL\cl_platform.h	/^    __cl_ulong4     v4[4];$/;"	m	union:__anon129
v4	.\CL\cl_platform.h	/^    __cl_ushort4     v4;$/;"	m	union:__anon57
v4	.\CL\cl_platform.h	/^    __cl_ushort4     v4[2];$/;"	m	union:__anon61
v4	.\CL\cl_platform.h	/^    __cl_ushort4     v4[4];$/;"	m	union:__anon65
v8	.\CL\cl_platform.h	/^    __cl_char8     v8;$/;"	m	union:__anon13
v8	.\CL\cl_platform.h	/^    __cl_char8     v8[2];$/;"	m	union:__anon17
v8	.\CL\cl_platform.h	/^    __cl_double8     v8;$/;"	m	union:__anon157
v8	.\CL\cl_platform.h	/^    __cl_double8     v8[2];$/;"	m	union:__anon161
v8	.\CL\cl_platform.h	/^    __cl_float8     v8;$/;"	m	union:__anon141
v8	.\CL\cl_platform.h	/^    __cl_float8     v8[2];$/;"	m	union:__anon145
v8	.\CL\cl_platform.h	/^    __cl_int8     v8;$/;"	m	union:__anon77
v8	.\CL\cl_platform.h	/^    __cl_int8     v8[2];$/;"	m	union:__anon81
v8	.\CL\cl_platform.h	/^    __cl_long8     v8;$/;"	m	union:__anon109
v8	.\CL\cl_platform.h	/^    __cl_long8     v8[2];$/;"	m	union:__anon113
v8	.\CL\cl_platform.h	/^    __cl_short8     v8;$/;"	m	union:__anon45
v8	.\CL\cl_platform.h	/^    __cl_short8     v8[2];$/;"	m	union:__anon49
v8	.\CL\cl_platform.h	/^    __cl_uchar8     v8;$/;"	m	union:__anon29
v8	.\CL\cl_platform.h	/^    __cl_uchar8     v8[2];$/;"	m	union:__anon33
v8	.\CL\cl_platform.h	/^    __cl_uint8     v8;$/;"	m	union:__anon93
v8	.\CL\cl_platform.h	/^    __cl_uint8     v8[2];$/;"	m	union:__anon97
v8	.\CL\cl_platform.h	/^    __cl_ulong8     v8;$/;"	m	union:__anon125
v8	.\CL\cl_platform.h	/^    __cl_ulong8     v8[2];$/;"	m	union:__anon129
v8	.\CL\cl_platform.h	/^    __cl_ushort8     v8;$/;"	m	union:__anon61
v8	.\CL\cl_platform.h	/^    __cl_ushort8     v8[2];$/;"	m	union:__anon65
validateDeviceId	.\SDKUtil\CLUtil.hpp	/^static int validateDeviceId(int deviceId, int deviceCount)$/;"	f	namespace:appsdk
validateDeviceId	.\SDKUtil\SDKCommon.cpp	/^SDKCommon::validateDeviceId(int deviceId, int deviceCount)$/;"	f	class:streamsdk::SDKCommon
validatePlatformAndDeviceOptions	.\SDKUtil\CLUtil.hpp	/^        int validatePlatformAndDeviceOptions()$/;"	f	class:appsdk::CLCommandArgs
validatePlatformAndDeviceOptions	.\SDKUtil\SDKApplication.cpp	/^int SDKSample::validatePlatformAndDeviceOptions()$/;"	f	class:SDKSample
vec_	.\CL\cl.hpp	/^        const vector<T,N> *vec_;$/;"	m	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED::iterator
vector	.\CL\cl.hpp	/^    vector() :  $/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
vector	.\CL\cl.hpp	/^    vector(const vector<T, N>& vec) : $/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
vector	.\CL\cl.hpp	/^    vector(unsigned int size, const T& val = T()) :$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
venderId	.\SDKUtil\CLUtil.hpp	/^        cl_uint venderId;                   \/**< vendorId VendorId of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
venderId	.\SDKUtil\include\SDKCommon.hpp	/^		cl_uint venderId;					\/**< vendorId VendorId of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
vendorName	.\SDKUtil\CLUtil.hpp	/^        char* vendorName;                   \/**< venderName vender Name of device*\/$/;"	m	class:appsdk::SDKDeviceInfo
vendorName	.\SDKUtil\include\SDKCommon.hpp	/^		char* vendorName;					\/**< venderName vender Name of device*\/$/;"	m	class:streamsdk::SDKDeviceInfo
verify	.\SDKUtil\SDKUtil.hpp	/^        bool verify;                \/**< Cmd Line Option- if verify *\/$/;"	m	class:appsdk::SDKCmdArgsParser
verify	.\SDKUtil\include\SDKApplication.hpp	/^    bool verify;                            \/**< Cmd Line Option- if verify *\/$/;"	m	class:SDKSample
version	.\SDKUtil\SDKUtil.hpp	/^        bool version;                           \/**< Cmd Line Option- if version *\/$/;"	m	class:appsdk::SDKCmdArgsParser
version	.\SDKUtil\include\SDKApplication.hpp	/^    bool version;                           \/**< Cmd Line Option- if version *\/$/;"	m	class:SDKSample
w	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon17::__anon18
w	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  x, y, z, w; };$/;"	m	struct:__anon13::__anon14
w	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  x, y, z, w; };$/;"	m	struct:__anon9::__anon10
w	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon161::__anon162
w	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  x, y, z, w; };$/;"	m	struct:__anon153::__anon154
w	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  x, y, z, w; };$/;"	m	struct:__anon157::__anon158
w	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float   x, y, z, w; };$/;"	m	struct:__anon137::__anon138
w	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float   x, y, z, w; };$/;"	m	struct:__anon141::__anon142
w	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon145::__anon146
w	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon81::__anon82
w	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  x, y, z, w; };$/;"	m	struct:__anon73::__anon74
w	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  x, y, z, w; };$/;"	m	struct:__anon77::__anon78
w	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon113::__anon114
w	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  x, y, z, w; };$/;"	m	struct:__anon105::__anon106
w	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  x, y, z, w; };$/;"	m	struct:__anon109::__anon110
w	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon49::__anon50
w	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  x, y, z, w; };$/;"	m	struct:__anon41::__anon42
w	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  x, y, z, w; };$/;"	m	struct:__anon45::__anon46
w	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon33::__anon34
w	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  x, y, z, w; };$/;"	m	struct:__anon25::__anon26
w	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  x, y, z, w; };$/;"	m	struct:__anon29::__anon30
w	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon97::__anon98
w	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  x, y, z, w; };$/;"	m	struct:__anon89::__anon90
w	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  x, y, z, w; };$/;"	m	struct:__anon93::__anon94
w	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon129::__anon130
w	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  x, y, z, w; };$/;"	m	struct:__anon121::__anon122
w	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  x, y, z, w; };$/;"	m	struct:__anon125::__anon126
w	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon65::__anon66
w	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  x, y, z, w; };$/;"	m	struct:__anon57::__anon58
w	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  x, y, z, w; };$/;"	m	struct:__anon61::__anon62
w	.\SDKUtil\include\SDKBitMap.hpp	/^    unsigned char w;$/;"	m	struct:streamsdk::__anon165
wait	.\CL\cl.hpp	/^    cl_int wait() const$/;"	f	class:cl::Event
wait	.\SDKUtil\SDKThread.cpp	/^    DWORD CondVarImpl::wait(DWORD dwMillisecondsTimeout\/* = INFINITE*\/, BOOL bAlertable\/* = FALSE *\/)$/;"	f	class:streamsdk::CondVarImpl
waitForEventAndRelease	.\SDKUtil\CLUtil.hpp	/^static int waitForEventAndRelease(cl_event *event)$/;"	f	namespace:appsdk
waitForEventAndRelease	.\SDKUtil\SDKCommon.cpp	/^int SDKCommon::waitForEventAndRelease(cl_event *event)$/;"	f	class:streamsdk::SDKCommon
waitForEvents	.\CL\cl.hpp	/^    waitForEvents(const VECTOR_CLASS<Event>& events)$/;"	f	class:cl::Event
what	.\CL\cl.hpp	/^    virtual const char * what() const throw ()$/;"	f	class:cl::Error
width	.\SDKUtil\include\SDKBitMap.hpp	/^    int width;$/;"	m	struct:streamsdk::__anon167
win32ThreadFunc	.\SDKUtil\SDKThread.cpp	/^    unsigned _stdcall win32ThreadFunc(void* args)$/;"	f	namespace:streamsdk
write	.\SDKUtil\SDKBitMap.cpp	/^SDKBitMap::write(const char * filename)$/;"	f	class:streamsdk::SDKBitMap
write	.\SDKUtil\SDKBitMap.cpp	/^bool SDKBitMap::write(const char * filename, int width, int height, unsigned int *ptr)$/;"	f	class:streamsdk::SDKBitMap
writeBinaryToFile	.\SDKUtil\SDKFile.cpp	/^SDKFile::writeBinaryToFile(const char* fileName, const char* birary, size_t numBytes)$/;"	f	class:streamsdk::SDKFile
writeBinaryToFile	.\SDKUtil\SDKFile.hpp	/^        int writeBinaryToFile(const char* fileName, const char* binary, size_t numBytes)$/;"	f	class:appsdk::SDKFile
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon17::__anon18
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  x, y, z, w; };$/;"	m	struct:__anon13::__anon14
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  x, y, z, w; };$/;"	m	struct:__anon9::__anon10
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  x, y; };$/;"	m	struct:__anon5::__anon6
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon161::__anon162
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  x, y, z, w; };$/;"	m	struct:__anon153::__anon154
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  x, y, z, w; };$/;"	m	struct:__anon157::__anon158
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  x, y; };$/;"	m	struct:__anon149::__anon150
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float   x, y, z, w; };$/;"	m	struct:__anon137::__anon138
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float   x, y, z, w; };$/;"	m	struct:__anon141::__anon142
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon145::__anon146
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float  x, y; };$/;"	m	struct:__anon133::__anon134
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon81::__anon82
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  x, y, z, w; };$/;"	m	struct:__anon73::__anon74
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  x, y, z, w; };$/;"	m	struct:__anon77::__anon78
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  x, y; };$/;"	m	struct:__anon69::__anon70
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon113::__anon114
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  x, y, z, w; };$/;"	m	struct:__anon105::__anon106
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  x, y, z, w; };$/;"	m	struct:__anon109::__anon110
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  x, y; };$/;"	m	struct:__anon101::__anon102
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon49::__anon50
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  x, y, z, w; };$/;"	m	struct:__anon41::__anon42
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  x, y, z, w; };$/;"	m	struct:__anon45::__anon46
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  x, y; };$/;"	m	struct:__anon37::__anon38
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon33::__anon34
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  x, y, z, w; };$/;"	m	struct:__anon25::__anon26
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  x, y, z, w; };$/;"	m	struct:__anon29::__anon30
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  x, y; };$/;"	m	struct:__anon21::__anon22
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon97::__anon98
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  x, y, z, w; };$/;"	m	struct:__anon89::__anon90
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  x, y, z, w; };$/;"	m	struct:__anon93::__anon94
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  x, y; };$/;"	m	struct:__anon85::__anon86
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon129::__anon130
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  x, y, z, w; };$/;"	m	struct:__anon121::__anon122
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  x, y, z, w; };$/;"	m	struct:__anon125::__anon126
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  x, y; };$/;"	m	struct:__anon117::__anon118
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon65::__anon66
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  x, y, z, w; };$/;"	m	struct:__anon57::__anon58
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  x, y, z, w; };$/;"	m	struct:__anon61::__anon62
x	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  x, y; };$/;"	m	struct:__anon53::__anon54
x	.\SDKUtil\include\SDKBitMap.hpp	/^    unsigned char x;$/;"	m	struct:streamsdk::__anon165
xPelsPerMeter	.\SDKUtil\include\SDKBitMap.hpp	/^    int xPelsPerMeter;$/;"	m	struct:streamsdk::__anon167
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon17::__anon18
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  x, y, z, w; };$/;"	m	struct:__anon13::__anon14
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  x, y, z, w; };$/;"	m	struct:__anon9::__anon10
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  x, y; };$/;"	m	struct:__anon5::__anon6
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon161::__anon162
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  x, y, z, w; };$/;"	m	struct:__anon153::__anon154
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  x, y, z, w; };$/;"	m	struct:__anon157::__anon158
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  x, y; };$/;"	m	struct:__anon149::__anon150
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float   x, y, z, w; };$/;"	m	struct:__anon137::__anon138
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float   x, y, z, w; };$/;"	m	struct:__anon141::__anon142
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon145::__anon146
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float  x, y; };$/;"	m	struct:__anon133::__anon134
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon81::__anon82
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  x, y, z, w; };$/;"	m	struct:__anon73::__anon74
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  x, y, z, w; };$/;"	m	struct:__anon77::__anon78
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  x, y; };$/;"	m	struct:__anon69::__anon70
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon113::__anon114
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  x, y, z, w; };$/;"	m	struct:__anon105::__anon106
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  x, y, z, w; };$/;"	m	struct:__anon109::__anon110
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  x, y; };$/;"	m	struct:__anon101::__anon102
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon49::__anon50
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  x, y, z, w; };$/;"	m	struct:__anon41::__anon42
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  x, y, z, w; };$/;"	m	struct:__anon45::__anon46
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  x, y; };$/;"	m	struct:__anon37::__anon38
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon33::__anon34
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  x, y, z, w; };$/;"	m	struct:__anon25::__anon26
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  x, y, z, w; };$/;"	m	struct:__anon29::__anon30
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  x, y; };$/;"	m	struct:__anon21::__anon22
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon97::__anon98
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  x, y, z, w; };$/;"	m	struct:__anon89::__anon90
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  x, y, z, w; };$/;"	m	struct:__anon93::__anon94
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  x, y; };$/;"	m	struct:__anon85::__anon86
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon129::__anon130
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  x, y, z, w; };$/;"	m	struct:__anon121::__anon122
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  x, y, z, w; };$/;"	m	struct:__anon125::__anon126
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  x, y; };$/;"	m	struct:__anon117::__anon118
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon65::__anon66
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  x, y, z, w; };$/;"	m	struct:__anon57::__anon58
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  x, y, z, w; };$/;"	m	struct:__anon61::__anon62
y	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  x, y; };$/;"	m	struct:__anon53::__anon54
y	.\SDKUtil\include\SDKBitMap.hpp	/^    unsigned char y;$/;"	m	struct:streamsdk::__anon165
yPelsPerMeter	.\SDKUtil\include\SDKBitMap.hpp	/^    int yPelsPerMeter;$/;"	m	struct:streamsdk::__anon167
z	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon17::__anon18
z	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  x, y, z, w; };$/;"	m	struct:__anon13::__anon14
z	.\CL\cl_platform.h	/^   __extension__ struct{ cl_char  x, y, z, w; };$/;"	m	struct:__anon9::__anon10
z	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon161::__anon162
z	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  x, y, z, w; };$/;"	m	struct:__anon153::__anon154
z	.\CL\cl_platform.h	/^   __extension__ struct{ cl_double  x, y, z, w; };$/;"	m	struct:__anon157::__anon158
z	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float   x, y, z, w; };$/;"	m	struct:__anon137::__anon138
z	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float   x, y, z, w; };$/;"	m	struct:__anon141::__anon142
z	.\CL\cl_platform.h	/^   __extension__ struct{ cl_float  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon145::__anon146
z	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon81::__anon82
z	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  x, y, z, w; };$/;"	m	struct:__anon73::__anon74
z	.\CL\cl_platform.h	/^   __extension__ struct{ cl_int  x, y, z, w; };$/;"	m	struct:__anon77::__anon78
z	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon113::__anon114
z	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  x, y, z, w; };$/;"	m	struct:__anon105::__anon106
z	.\CL\cl_platform.h	/^   __extension__ struct{ cl_long  x, y, z, w; };$/;"	m	struct:__anon109::__anon110
z	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon49::__anon50
z	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  x, y, z, w; };$/;"	m	struct:__anon41::__anon42
z	.\CL\cl_platform.h	/^   __extension__ struct{ cl_short  x, y, z, w; };$/;"	m	struct:__anon45::__anon46
z	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon33::__anon34
z	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  x, y, z, w; };$/;"	m	struct:__anon25::__anon26
z	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uchar  x, y, z, w; };$/;"	m	struct:__anon29::__anon30
z	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon97::__anon98
z	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  x, y, z, w; };$/;"	m	struct:__anon89::__anon90
z	.\CL\cl_platform.h	/^   __extension__ struct{ cl_uint  x, y, z, w; };$/;"	m	struct:__anon93::__anon94
z	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon129::__anon130
z	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  x, y, z, w; };$/;"	m	struct:__anon121::__anon122
z	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ulong  x, y, z, w; };$/;"	m	struct:__anon125::__anon126
z	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  x, y, z, w, __spacer4, __spacer5, __spacer6, __spacer7, __spacer8, __spacer9, sa, sb, sc, sd, se, sf; };$/;"	m	struct:__anon65::__anon66
z	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  x, y, z, w; };$/;"	m	struct:__anon57::__anon58
z	.\CL\cl_platform.h	/^   __extension__ struct{ cl_ushort  x, y, z, w; };$/;"	m	struct:__anon61::__anon62
z	.\SDKUtil\include\SDKBitMap.hpp	/^    unsigned char z;$/;"	m	struct:streamsdk::__anon165
~CondVar	.\SDKUtil\SDKThread.cpp	/^    CondVar::~CondVar()$/;"	f	class:streamsdk::CondVar
~CondVarImpl	.\SDKUtil\SDKThread.cpp	/^    CondVarImpl::~CondVarImpl()$/;"	f	class:streamsdk::CondVarImpl
~Context	.\CL\cl.hpp	/^    ~Context() { }$/;"	f	class:cl::Context
~Error	.\CL\cl.hpp	/^    ~Error() throw() {}$/;"	f	class:cl::Error
~Event	.\CL\cl.hpp	/^    ~Event() { }$/;"	f	class:cl::Event
~Kernel	.\CL\cl.hpp	/^    ~Kernel() { }$/;"	f	class:cl::Kernel
~Memory	.\CL\cl.hpp	/^    ~Memory() {}$/;"	f	class:cl::Memory
~SDKBitMap	.\SDKUtil\include\SDKBitMap.hpp	/^    ~SDKBitMap()$/;"	f	class:streamsdk::SDKBitMap
~SDKCmdArgsParser	.\SDKUtil\SDKUtil.hpp	/^        ~SDKCmdArgsParser ()$/;"	f	class:appsdk::SDKCmdArgsParser
~SDKCommandArgs	.\SDKUtil\SDKCommandArgs.cpp	/^SDKCommandArgs::~SDKCommandArgs()$/;"	f	class:streamsdk::SDKCommandArgs
~SDKCommon	.\SDKUtil\SDKCommon.cpp	/^SDKCommon::~SDKCommon()$/;"	f	class:streamsdk::SDKCommon
~SDKDeviceInfo	.\SDKUtil\CLUtil.hpp	/^        ~SDKDeviceInfo()$/;"	f	class:appsdk::SDKDeviceInfo
~SDKDeviceInfo	.\SDKUtil\include\SDKCommon.hpp	/^		~SDKDeviceInfo()$/;"	f	class:streamsdk::SDKDeviceInfo
~SDKFile	.\SDKUtil\SDKFile.hpp	/^        ~SDKFile() {};$/;"	f	class:appsdk::SDKFile
~SDKFile	.\SDKUtil\include\SDKFile.hpp	/^    ~SDKFile(){};$/;"	f	class:streamsdk::SDKFile
~SDKSample	.\SDKUtil\SDKApplication.cpp	/^SDKSample::~SDKSample()$/;"	f	class:SDKSample
~SDKThread	.\SDKUtil\SDKThread.cpp	/^    SDKThread::~SDKThread()$/;"	f	class:streamsdk::SDKThread
~SDKTimer	.\SDKUtil\SDKUtil.hpp	/^        ~SDKTimer()$/;"	f	class:appsdk::SDKTimer
~Sampler	.\CL\cl.hpp	/^    ~Sampler() { }$/;"	f	class:cl::Sampler
~ThreadLock	.\SDKUtil\SDKThread.cpp	/^    ThreadLock::~ThreadLock()$/;"	f	class:streamsdk::ThreadLock
~Wrapper	.\CL\cl.hpp	/^    ~Wrapper()$/;"	f	class:cl::detail::Wrapper
~iterator	.\CL\cl.hpp	/^        ~iterator(void) {}$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED::iterator
~string	.\CL\cl.hpp	/^    ~string()$/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
~vector	.\CL\cl.hpp	/^    ~vector() $/;"	f	class:cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED
