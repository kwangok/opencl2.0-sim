//
// Generated by NVIDIA NVVM Compiler
// Compiler built on Thu Apr  5 15:30:35 2012 (1333611035)
// Cuda compilation tools, release 4.2, V0.2.1221
//

.version 3.0
.target sm_20
.address_size 64

	.file	1 "find_ellipse_kernel.cpp3.i"
	.file	2 "find_ellipse_kernel.cu"
	.file	3 "/home/bachelor/deicide218/cuda-4.2/include/device_functions.h"
.global .texref t_grad_x;
.global .texref t_grad_y;
.global .texref t_img;
.const .align 4 .b8 c_sin_angle[600];
.const .align 4 .b8 c_cos_angle[600];
.const .align 4 .b8 c_tX[4200];
.const .align 4 .b8 c_tY[4200];
.const .align 4 .b8 c_strel[2500];

.entry _Z12GICOV_kerneliPf(
	.param .u32 _Z12GICOV_kerneliPf_param_0,
	.param .u64 _Z12GICOV_kerneliPf_param_1
)
{
	.reg .f32 	%f<76>;
	.reg .pred 	%p<4>;
	.reg .s32 	%r<63>;
	.reg .s64 	%rl<15>;


	ld.param.u64 	%rl2, [_Z12GICOV_kerneliPf_param_1];
	cvta.to.global.u64 	%rl1, %rl2;
	.loc 2 36 1
	mov.u32 	%r16, %ctaid.x;
	add.s32 	%r2, %r16, 22;
	.loc 2 37 1
	mov.u32 	%r17, %tid.x;
	add.s32 	%r3, %r17, 22;
	mov.u32 	%r57, 0;
	mov.f32 	%f9, 0f00000000;
	mov.u32 	%r61, %r57;
	mov.f32 	%f75, %f9;

BB0_1:
	mov.u32 	%r59, %r61;
	mov.u32 	%r4, %r59;
	mov.u32 	%r19, 0;
	mov.f32 	%f72, %f9;
	mov.f32 	%f71, %f9;
	mov.u32 	%r58, 3;
	mov.u32 	%r60, %r4;
	mov.f32 	%f74, %f9;
	mov.u32 	%r62, %r19;

BB0_2:
	mov.u32 	%r8, %r62;
	mov.f32 	%f4, %f74;
	mov.u32 	%r7, %r60;
	mul.wide.s32 	%rl3, %r7, 4;
	mov.u64 	%rl4, c_tY;
	add.s64 	%rl5, %rl4, %rl3;
	mov.u64 	%rl6, c_tX;
	add.s64 	%rl7, %rl6, %rl3;
	.loc 2 52 1
	ld.const.u32 	%r26, [%rl7];
	add.s32 	%r28, %r26, %r2;
	.loc 2 51 1
	ld.const.u32 	%r29, [%rl5];
	add.s32 	%r31, %r29, %r3;
	ld.param.u32 	%r56, [_Z12GICOV_kerneliPf_param_0];
	.loc 2 55 1
	mad.lo.s32 	%r21, %r28, %r56, %r31;
	// inline asm
	tex.1d.v4.f32.s32 {%f13, %f14, %f15, %f16}, [t_grad_x, {%r21}];
	// inline asm
	mul.wide.s32 	%rl8, %r8, 4;
	mov.u64 	%rl9, c_cos_angle;
	add.s64 	%rl10, %rl9, %rl8;
	.loc 2 56 1
	ld.const.f32 	%f37, [%rl10];
	// inline asm
	tex.1d.v4.f32.s32 {%f17, %f18, %f19, %f20}, [t_grad_y, {%r21}];
	// inline asm
	mov.u64 	%rl11, c_sin_angle;
	add.s64 	%rl12, %rl11, %rl8;
	.loc 2 56 1
	ld.const.f32 	%f38, [%rl12];
	mul.f32 	%f39, %f17, %f38;
	fma.rn.f32 	%f40, %f13, %f37, %f39;
	.loc 2 60 1
	add.f32 	%f41, %f4, %f40;
	.loc 2 63 1
	sub.f32 	%f42, %f40, %f71;
	add.s32 	%r35, %r8, 1;
	.loc 2 64 1
	cvt.rn.f32.s32 	%f43, %r35;
	.loc 3 1311 3
	div.rn.f32 	%f44, %f42, %f43;
	.loc 2 64 1
	add.f32 	%f45, %f71, %f44;
	.loc 2 65 1
	sub.f32 	%f46, %f40, %f45;
	fma.rn.f32 	%f47, %f42, %f46, %f72;
	.loc 2 52 1
	ld.const.u32 	%r36, [%rl7+4];
	add.s32 	%r38, %r36, %r2;
	.loc 2 51 1
	ld.const.u32 	%r39, [%rl5+4];
	add.s32 	%r41, %r39, %r3;
	.loc 2 55 1
	mad.lo.s32 	%r23, %r38, %r56, %r41;
	// inline asm
	tex.1d.v4.f32.s32 {%f21, %f22, %f23, %f24}, [t_grad_x, {%r23}];
	// inline asm
	.loc 2 56 1
	ld.const.f32 	%f48, [%rl10+4];
	// inline asm
	tex.1d.v4.f32.s32 {%f25, %f26, %f27, %f28}, [t_grad_y, {%r23}];
	// inline asm
	ld.const.f32 	%f49, [%rl12+4];
	mul.f32 	%f50, %f25, %f49;
	fma.rn.f32 	%f51, %f21, %f48, %f50;
	.loc 2 60 1
	add.f32 	%f52, %f41, %f51;
	.loc 2 63 1
	sub.f32 	%f53, %f51, %f45;
	add.s32 	%r44, %r8, 2;
	.loc 2 64 1
	cvt.rn.f32.s32 	%f54, %r44;
	.loc 3 1311 3
	div.rn.f32 	%f55, %f53, %f54;
	.loc 2 64 1
	add.f32 	%f56, %f45, %f55;
	.loc 2 65 1
	sub.f32 	%f57, %f51, %f56;
	fma.rn.f32 	%f58, %f53, %f57, %f47;
	add.s32 	%r9, %r8, 3;
	.loc 2 52 1
	ld.const.u32 	%r45, [%rl7+8];
	add.s32 	%r47, %r45, %r2;
	.loc 2 51 1
	ld.const.u32 	%r48, [%rl5+8];
	add.s32 	%r50, %r48, %r3;
	.loc 2 55 1
	mad.lo.s32 	%r25, %r47, %r56, %r50;
	// inline asm
	tex.1d.v4.f32.s32 {%f29, %f30, %f31, %f32}, [t_grad_x, {%r25}];
	// inline asm
	.loc 2 56 1
	ld.const.f32 	%f59, [%rl10+8];
	// inline asm
	tex.1d.v4.f32.s32 {%f33, %f34, %f35, %f36}, [t_grad_y, {%r25}];
	// inline asm
	ld.const.f32 	%f60, [%rl12+8];
	mul.f32 	%f61, %f33, %f60;
	fma.rn.f32 	%f62, %f29, %f59, %f61;
	.loc 2 60 1
	add.f32 	%f5, %f52, %f62;
	.loc 2 63 1
	sub.f32 	%f63, %f62, %f56;
	.loc 2 64 1
	cvt.rn.f32.s32 	%f64, %r58;
	.loc 3 1311 3
	div.rn.f32 	%f65, %f63, %f64;
	.loc 2 64 1
	add.f32 	%f71, %f56, %f65;
	.loc 2 65 1
	sub.f32 	%f66, %f62, %f71;
	fma.rn.f32 	%f72, %f63, %f66, %f58;
	add.s32 	%r10, %r7, 3;
	add.s32 	%r58, %r58, 3;
	.loc 2 49 1
	setp.ne.s32 	%p1, %r58, 153;
	mov.u32 	%r60, %r10;
	mov.f32 	%f74, %f5;
	mov.u32 	%r62, %r9;
	.loc 2 49 1
	@%p1 bra 	BB0_2;

	.loc 3 1311 3
	div.rn.f32 	%f67, %f5, 0f43160000;
	.loc 2 75 1
	mul.f32 	%f68, %f67, %f67;
	.loc 3 1311 3
	div.rn.f32 	%f69, %f72, 0f43150000;
	.loc 3 1311 3
	div.rn.f32 	%f70, %f68, %f69;
	.loc 2 75 1
	setp.gt.f32 	%p2, %f70, %f75;
	selp.f32 	%f75, %f70, %f75, %p2;
	.loc 2 43 94
	add.s32 	%r57, %r57, 1;
	add.s32 	%r13, %r4, 150;
	.loc 2 43 1
	setp.ne.s32 	%p3, %r57, 7;
	mov.u32 	%r61, %r13;
	.loc 2 43 1
	@%p3 bra 	BB0_1;

	ld.param.u32 	%r55, [_Z12GICOV_kerneliPf_param_0];
	.loc 2 79 1
	mad.lo.s32 	%r53, %r2, %r55, %r3;
	mul.wide.s32 	%rl13, %r53, 4;
	add.s64 	%rl14, %rl1, %rl13;
	st.global.f32 	[%rl14], %f75;
	.loc 2 80 2
	ret;
}

.entry _Z13dilate_kerneliiiiPf(
	.param .u32 _Z13dilate_kerneliiiiPf_param_0,
	.param .u32 _Z13dilate_kerneliiiiPf_param_1,
	.param .u32 _Z13dilate_kerneliiiiPf_param_2,
	.param .u32 _Z13dilate_kerneliiiiPf_param_3,
	.param .u64 _Z13dilate_kerneliiiiPf_param_4
)
{
	.reg .f32 	%f<15>;
	.reg .pred 	%p<14>;
	.reg .s32 	%r<57>;
	.reg .s64 	%rl<9>;


	ld.param.u32 	%r1, [_Z13dilate_kerneliiiiPf_param_0];
	ld.param.u32 	%r3, [_Z13dilate_kerneliiiiPf_param_2];
	ld.param.u32 	%r4, [_Z13dilate_kerneliiiiPf_param_3];
	.loc 2 148 1
	shr.u32 	%r23, %r3, 31;
	add.s32 	%r24, %r3, %r23;
	shr.s32 	%r5, %r24, 1;
	.loc 2 149 1
	shr.u32 	%r25, %r4, 31;
	add.s32 	%r26, %r4, %r25;
	shr.s32 	%r6, %r26, 1;
	.loc 2 152 1
	mov.u32 	%r27, %ntid.x;
	mov.u32 	%r28, %ctaid.x;
	mov.u32 	%r29, %tid.x;
	mad.lo.s32 	%r30, %r27, %r28, %r29;
	.loc 2 153 1
	rem.s32 	%r7, %r30, %r1;
	.loc 2 154 1
	div.s32 	%r8, %r30, %r1;
	.loc 2 161 1
	setp.gt.s32 	%p1, %r3, 0;
	@%p1 bra 	BB1_2;

	mov.f32 	%f14, 0f00000000;
	bra.uni 	BB1_10;

BB1_2:
	.loc 2 162 1
	sub.s32 	%r9, %r7, %r5;
	.loc 2 167 1
	sub.s32 	%r10, %r8, %r6;
	ld.param.u32 	%r44, [_Z13dilate_kerneliiiiPf_param_0];
	mad.lo.s32 	%r33, %r44, %r10, %r7;
	sub.s32 	%r55, %r33, %r5;
	mov.f32 	%f14, 0f00000000;
	mov.u32 	%r52, 0;
	mov.u32 	%r51, %r52;

BB1_3:
	mov.u32 	%r53, %r55;
	mov.u32 	%r13, %r53;
	.loc 2 162 1
	add.s32 	%r34, %r52, %r9;
	setp.lt.s32 	%p2, %r34, 0;
	ld.param.u32 	%r43, [_Z13dilate_kerneliiiiPf_param_0];
	setp.ge.s32 	%p3, %r34, %r43;
	or.pred  	%p4, %p3, %p2;
	ld.param.u32 	%r50, [_Z13dilate_kerneliiiiPf_param_3];
	setp.lt.s32 	%p5, %r50, 1;
	or.pred  	%p6, %p4, %p5;
	.loc 2 164 1
	@%p6 bra 	BB1_9;

	mov.u32 	%r56, 0;
	mov.u32 	%r54, %r13;

BB1_5:
	mov.u32 	%r15, %r54;
	add.s32 	%r17, %r56, %r51;
	add.s32 	%r36, %r56, %r10;
	setp.gt.s32 	%p7, %r36, -1;
	ld.param.u32 	%r46, [_Z13dilate_kerneliiiiPf_param_1];
	.loc 2 170 1
	setp.lt.s32 	%p8, %r36, %r46;
	and.pred  	%p9, %p7, %p8;
	.loc 2 170 1
	@!%p9 bra 	BB1_8;

	mul.wide.s32 	%rl2, %r17, 4;
	mov.u64 	%rl3, c_strel;
	add.s64 	%rl4, %rl3, %rl2;
	.loc 2 170 1
	ld.const.f32 	%f9, [%rl4];
	setp.neu.f32 	%p10, %f9, 0f00000000;
	@%p10 bra 	BB1_7;
	bra.uni 	BB1_8;

BB1_7:
	mov.u32 	%r39, 0;
	// inline asm
	tex.1d.v4.f32.s32 {%f10, %f11, %f12, %f13}, [t_img, {%r15}];
	// inline asm
	.loc 2 176 1
	setp.gt.f32 	%p11, %f10, %f14;
	selp.f32 	%f14, %f10, %f14, %p11;

BB1_8:
	ld.param.u32 	%r42, [_Z13dilate_kerneliiiiPf_param_0];
	add.s32 	%r18, %r15, %r42;
	.loc 2 166 106
	add.s32 	%r56, %r56, 1;
	ld.param.u32 	%r49, [_Z13dilate_kerneliiiiPf_param_3];
	.loc 2 166 1
	setp.lt.s32 	%p12, %r56, %r49;
	mov.u32 	%r54, %r18;
	@%p12 bra 	BB1_5;

BB1_9:
	.loc 2 161 104
	add.s32 	%r52, %r52, 1;
	ld.param.u32 	%r47, [_Z13dilate_kerneliiiiPf_param_2];
	.loc 2 161 1
	setp.lt.s32 	%p13, %r52, %r47;
	add.s32 	%r21, %r13, 1;
	ld.param.u32 	%r48, [_Z13dilate_kerneliiiiPf_param_3];
	add.s32 	%r51, %r51, %r48;
	mov.u32 	%r55, %r21;
	.loc 2 161 1
	@%p13 bra 	BB1_3;

BB1_10:
	ld.param.u32 	%r45, [_Z13dilate_kerneliiiiPf_param_1];
	.loc 2 183 1
	mad.lo.s32 	%r40, %r7, %r45, %r8;
	ld.param.u64 	%rl8, [_Z13dilate_kerneliiiiPf_param_4];
	cvta.to.global.u64 	%rl5, %rl8;
	.loc 2 183 1
	mul.wide.s32 	%rl6, %r40, 4;
	add.s64 	%rl7, %rl5, %rl6;
	st.global.f32 	[%rl7], %f14;
	.loc 2 184 2
	ret;
}


